{"ru":{"name":"history","examples":[],"description":"<h2 id=\"history\">history</h2>\n<p>Блок, обеспечивающий взаимодействие с браузерным History API с помощью двух модификаторов:</p>\n<ul>\n<li><code>provider_history-api</code> – если есть встроенная поддержка History API;</li>\n<li><code>provider_hashchange</code> – реализация с помощью фолбэка hashchange.</li>\n</ul>\n<h3 id=\"Использование\">Использование</h3>\n<pre><code class=\"lang-js\">modules.require([&#39;history&#39;], function(History) {\n\n    // Создаем инстанс history\n    var history = new History();\n\n    // Добавляем запись или заменяем текущее состояние с помощью методов pushState/replaceState\n    history.changeState(&#39;push&#39;, { title: &#39;Title&#39;, url: &#39;http://example.org:8080/path&#39; });\n    history.changeState(&#39;replace&#39;, { title: &#39;Title&#39;, url: &#39;http://example.org:8080/path?test=1&#39; });\n\n});\n</code></pre>\n"},"en":{"name":"history","examples":[],"description":"<h2 id=\"history\">history</h2>\n<p>Module provides work with browser History with two modificators:</p>\n<ul>\n<li><code>provider_history-api</code> – supports native History API;</li>\n<li><code>provider_hashchange</code> – supports fallback on hashchange event.</li>\n</ul>\n<h3 id=\"Usage\">Usage</h3>\n<pre><code class=\"lang-js\">modules.require([&#39;history&#39;], function(History) {\n\n    // Create history instance\n    var history = new History();\n\n    // Push new or replace history state\n    history.changeState(&#39;push&#39;, { title: &#39;Title&#39;, url: &#39;http://example.org:8080/path&#39; });\n    history.changeState(&#39;replace&#39;, { title: &#39;Title&#39;, url: &#39;http://example.org:8080/path?test=1&#39; });\n\n});\n</code></pre>\n"}}
{"en":{"name":"page","description":[{"content":""}],"examples":[{"content":[{"url":"page.examples/10-simple/_10-simple.en"},{"url":"page.examples/20-doctype/_20-doctype.en"},{"url":"page.examples/30-css-ie/_30-css-ie.en"},{"url":"page.examples/40-es5-shims/_40-es5-shims.en"}]}]},"ru":{"name":"page","description":[{"content":"<div class=\"shmakowiki\"><p>﻿Блок <tt>page</tt> создаёт теги верхнего уровня страницы:</p><ul><li><tt>&lt;html&gt;</tt></li><li><tt>&lt;head&gt;</tt></li><li><tt>&lt;body&gt;</tt></li></ul><p>Именно он отвечает за то, какие подключить <tt>CSS</tt> и <tt>JS</tt> файлы к странице, выставление <tt>meta</tt> тегов, заголовка и так далее.</p><p>Декларация блока в <tt>BEMJSON</tt> начинается объявлением блока и указанием свойства <tt>title</tt>, которое превращается в тег <tt>&lt;title&gt;</tt> в <tt>HTML</tt>.</p><pre><code class=\"js\">({\nblock: &apos;page&apos;,\ntitle: &apos;Page with link&apos;,\n...\n})</code></pre><p>Указание свойства <tt>head</tt> дополняет элемент <tt>head</tt>, соответствующий <tt>HTML</tt> тегу <tt>&lt;head&gt;</tt>, элементами для подключения <tt>CSS</tt> и <tt>JS</tt> файлов, а также указания <tt>meta</tt>:</p><pre><code class=\"js\">({\n...\nhead: [\n    { elem: &apos;css&apos;, url: &apos;example.css&apos;, ie: false },\n    { elem: &apos;css&apos;, url: &apos;example.ie.css&apos;, ie: &apos;lt IE 8&apos; },\n    { elem: &apos;js&apos;, url: &apos;example.js&apos; },\n    { elem: &apos;meta&apos;, attrs: { name: &apos;keywords&apos;, content: &apos;js, css, html&apos; } },\n    { elem: &apos;meta&apos;, attrs: { name: &apos;description&apos;, content: &apos;Yet another webdev blog&apos; } }\n],\n...\n})</code></pre><p>Элемент <tt>css</tt> превращается в <tt>HTML</tt> в тег <tt>&lt;link&gt;</tt>, подключающий как <tt>CSS</tt> стиль тот файл, что указан в свойстве <tt>url</tt> этого элемента. Также у такого элемента может быть свойство <tt>ie</tt>. Если это свойство <tt>false</tt>, то будут использоваться такие <tt>condittional comments</tt>, которые предотвратят использование этих стилей в <tt>IE</tt>. При строчном значении этого свойства тег <tt>&lt;link&gt;</tt> , будет обёрнут в соответствующий <tt>conditional comment</tt>, и этот стиль будет грузиться и использоваться указанных браузерах.<br/> Также есть возможность указывать свойство <tt>content</tt> для содержания тега <tt>&lt;style&gt;</tt>:</p><pre><code class=\"js\">({\n...\nhead: [\n    {\n        elem: &apos;css&apos;,\n        content: &apos;.b-blah { color: #f00&apos; }\n    },\n    ...\n],\n...\n})</code></pre><p>Элемент <tt>js</tt> действует аналогично, подключая к странице <tt>JS</tt> файлы при помощи тега <tt>&lt;script&gt;</tt>.</p><p>Свойство <tt>head</tt> не описывает содержание <tt>HTML</tt>-тега <tt>&lt;head&gt;</tt> полностью, а лишь дополняет дефолтное, которое блок сам создаёт в своём <tt>BEMHTML</tt> шаблоне.</p><h3 id=\"Tegmetasukazaniemkodirovki\">Тег &lt;meta&gt; с указанием кодировки</h3><p><tt>BEMHTML</tt>:</p><pre><code class=\"js\">content: [\n{\n    tag: &apos;meta&apos;,\n    attrs: { &apos;http-equiv&apos;: &apos;content-type&apos;, content: &apos;text/html; charset=utf-8&apos; }\n},\n...</code></pre><h3 id=\"TegmetadlyaispolyzovaniyaIE9ivyshevmaksimalynomcompatibilityrezhime\">Тег &lt;meta&gt; для использования <tt>IE9</tt> (и выше) в максимальном <tt>compatibility</tt> режиме</h3><p><tt>BEMHTML</tt>:</p><pre><code class=\"js\">content: [\n...\n{\n    tag: &apos;meta&apos;,\n    attrs: { &apos;http-equiv&apos;: &apos;X-UA-Compatible&apos;, content: &apos;IE=EmulateIE7, IE=edge&apos; }\n},\n...</code></pre><h3 id=\"Vystavlenieznacheniyategatitlestranicyizsvojstva\">Выставление значения тега &lt;title&gt; страницы из свойства</h3><pre><code class=\"js\">content: [\n...\n{\n    tag: &apos;title&apos;,\n    content: this.ctx.title\n},\n...</code></pre><h3 id=\"Vystavleniefavikonki\">Выставление фавиконки</h3><pre><code class=\"js\">content: [\n...\nthis.ctx.favicon ? {\n    elem: &apos;favicon&apos;,\n    url: this.ctx.favicon\n} : &apos;&apos;,\n...</code></pre><h3 id=\"Deklaraciyablokaua\">Декларация блока ua</h3><pre><code class=\"js\">content: [\n...\n{\n    block: &apos;ua&apos;\n},\n...</code></pre><p>Значением свойства <tt>content</tt> блока <tt>page</tt> может быть хеш-описание содержимого (если речь идёт лишь об одном блоке) или массив блоков, описанных хешами:</p><pre><code class=\"js\">({\n...\ncontent: {\n    block: &apos;b-link&apos;,\n    mods: { pseudo: &apos;yes&apos;, togcolor: &apos;yes&apos;, color: &apos;green&apos; },\n    url: &apos;#&apos;,\n    target: &apos;_blank&apos;,\n    title: &apos;Кликни меня&apos;,\n    content: &apos;Псевдоссылка, меняющая цвет по клику&apos;\n}\n})</code></pre><p>На блоки, содержащиеся в <tt>content</tt>, действуют их <tt>BEMHTML</tt> шаблоны.</p><h3 id=\"Otmenaavtomaticheskojinicializaciiblokov\">Отмена автоматической инициализации блоков</h3><pre><code class=\"js\">noDeps: [\n    { block: &apos;i-bem&apos;, elem: &apos;dom&apos;, mods: { init: &apos;auto&apos; } }\n]</code></pre></div>"}],"examples":[{"content":[{"url":"page.examples/10-simple/_10-simple.ru"},{"url":"page.examples/20-doctype/_20-doctype.ru"},{"url":"page.examples/30-css-ie/_30-css-ie.ru"},{"url":"page.examples/40-es5-shims/_40-es5-shims.ru"}]}]}}
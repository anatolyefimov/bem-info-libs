{"ru":{"name":"cookie","examples":[],"description":"<h1 id=\"cookie-2\"><a href=\"#cookie-2\" class=\"anchor\"></a><code>cookie</code></h1>\n<p>Блок реализует набор методов для работы с куки браузера (JS-свойство <code>document.cookie</code>).</p>\n<p>Блок реализован в технологии <code>js</code> и подходит для использования в клиентских приложениях.</p>\n<h2 id=\"Публичные-методы-блока-10\"><a href=\"#Публичные-методы-блока-10\" class=\"anchor\"></a>Публичные методы блока</h2>\n<p>Доступен следующий набор методов:</p>\n<h3 id=\"get-2\"><a href=\"#get-2\" class=\"anchor\"></a><code>get</code></h3>\n<p>Метод служит для получения значения, хранящегося в куки браузера, для имени переданного аргументом (<code>{String}</code>).</p>\n<p>Метод возвращает:</p>\n<ul>\n<li>декодированную с помощью <code>decodeURIComponent</code> строку со значением в случае успеха.</li>\n<li><code>null</code> если переданное аргументом имя не было найдено.</li>\n</ul>\n<pre><code class=\"lang-js\">modules.require([&#39;cookie&#39;], function(cookie) {\n    cookie.set(&#39;mycookie&#39;, &#39;foobar&#39;);\n    console.log(cookie.get(&#39;mycookie&#39;)); // &#39;foobar&#39;\n    console.log(cookie.get(&#39;foo&#39;)); // null\n});\n</code></pre>\n<h3 id=\"set-2\"><a href=\"#set-2\" class=\"anchor\"></a><code>set</code></h3>\n<p>Метод служит для записи куки с заданным именем. Помимо имени и значения, методу можно передать хеш с дополнительными параметрами куки.</p>\n<p>Метод принимет следующие аргументы:</p>\n<ul>\n<li><code>name</code> <code>{String}</code> – имя куки.</li>\n<li><code>val</code> <code>{String}</code> | <code>{null}</code> – строка со значением, ассоциируемым с именем. При установке в качестве значения <code>null</code> куки будет удалено.</li>\n<li><code>options</code> <code>{Object}</code> – хеш с дополнительными параметрами. В хеше допустимы следующие свойства с ожидаемым типом данных значения:<ul>\n<li><code>expires</code> <code>{Number}</code> – срок жизни куки в сутках. При отрицательном значении куки будет удалено. Альтернативно, можно передать в качестве значения сформированный объект даты (<code>new Date()</code>).</li>\n<li><code>path</code> <code>{String}</code> – путь от корня домена внутри которого будет доступно куки.</li>\n<li><code>domain</code> <code>{String}</code> – домен в явном виде. По умолчанию – текущий.</li>\n<li><code>secure</code> <code>{Boolean}</code> – логический флаг, указывающий на необходимость принудительного использования с куки шифрованного соединения SSL. По умолчанию SSL не требуется.</li>\n</ul>\n</li>\n</ul>\n<p>Метод устанавливает значение куки и возвращает объект <code>this</code>.</p>\n<pre><code class=\"lang-js\">modules.require([&#39;cookie&#39;], function(cookie) {\n    cookie.set(&#39;mycookie&#39;, &#39;foobar&#39;, {\n        expires : 1, // срок жизни одни сутки\n        path : &#39;/&#39;, // доступно для всех страниц домена\n        secure : true // передавать куки только по SSL\n    });\n    console.log(cookie.get(&#39;mycookie&#39;)); // &#39;foobar&#39;\n\n    cookie.set(&#39;mycookie&#39;, null }); // удаляем куки\n    console.log(cookie.get(&#39;mycookie&#39;)); // null\n});\n</code></pre>\n"},"en":{"name":"cookie","examples":[],"description":""}}
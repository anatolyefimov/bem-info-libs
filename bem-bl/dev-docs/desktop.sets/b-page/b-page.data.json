{"name":"b-page","description":[{"content":"<h2 id=\"-\">Описание</h2>\n<p>Блок <strong>b-page</strong> создаёт теги верхнего уровня страницы:</p>\n<ul>\n<li><code>&lt;html&gt;</code></li>\n<li><code>&lt;head&gt;</code></li>\n<li><code>&lt;body&gt;</code></li>\n</ul>\n<p>Именно он отвечает за то, какие подключить <strong>CSS</strong>- и <strong>JS</strong>-файлы к странице, выставление <code>meta</code> тегов, заголовка и так далее.</p>\n<h3 id=\"-\">Объявление блока на странице</h3>\n<p>Декларация блока в <strong>BEMJSON</strong> начинается объявлением блока и указанием свойства <code>title</code>, которое превращается в тег <code>&lt;title&gt;</code> в <strong>HTML</strong>.</p>\n<pre><code class=\"lang-js\">({\nblock: &#39;b-page&#39;,\ntitle: &#39;Page with link&#39;,\n...\n})\n</code></pre>\n<p>Указание свойства <code>head</code> дополняет элемент <code>head</code>, соответствующий <strong>HTML</strong> тегу <code>&lt;head&gt;</code>, элементами для подключения <strong>CSS</strong>- и <strong>JS</strong>-файлов:</p>\n<pre><code class=\"lang-js\">({\n...\nhead: [\n    { elem: &#39;css&#39;, url: &#39;example.css&#39;, ie: false },\n    { elem: &#39;css&#39;, url: &#39;example.ie.css&#39;, ie: &#39;lt IE 8&#39; },\n    { elem: &#39;js&#39;, url: &#39;example.js&#39; }\n],\n...\n})\n</code></pre>\n<p>Элемент <code>css</code> превращается в <strong>HTML</strong> в тег <code>&lt;link&gt;</code>, подключающий как <strong>CSS</strong>-стиль тот файл, что указан в свойстве <code>url</code> этого элемента. Также у такого элемента может быть свойство <code>ie</code>.\nЕсли это свойство <code>false</code>, то будут использоваться такие <code>condittional comments</code>, которые предотвратят использование этих стилей в <strong>IE</strong>. При строчном значении этого свойства тег <code>&lt;link&gt;</code>, будет обёрнут в соответствующий <code>conditional comment</code>, и этот стиль будет грузиться и использоваться указанных браузерах.</p>\n<p>Также есть возможность указывать свойство <code>content</code> для содержания тега <code>&lt;style&gt;</code>:</p>\n<pre><code class=\"lang-js\">({\n...\nhead: [\n    {\n        elem: &#39;css&#39;,\n        content: &#39;.b-blah { color: #f00&#39; }\n    },\n    ...\n],\n...\n})\n</code></pre>\n<p>Элемент <code>js</code> действует аналогично, подключая к странице <strong>JS</strong>-файлы при помощи тега <code>&lt;script&gt;</code>.</p>\n<p>Свойство <code>head</code> не описывает содержание <strong>HTML</strong>-тега <code>&lt;head&gt;</code> полностью, а лишь дополняет дефолтное, которое блок сам создаёт в своём <strong>BEMHTML</strong>-шаблоне.</p>\n<h4 id=\"-meta-\">Тег <code>&lt;meta&gt;</code> с указанием кодировки</h4>\n<p><strong>BEMHTML</strong>:</p>\n<pre><code class=\"lang-js\">content: [\n{\n    tag: &#39;meta&#39;,\n    attrs: { &#39;http-equiv&#39;: &#39;content-type&#39;, content: &#39;text/html; charset=utf-8&#39; }\n},\n...\n</code></pre>\n<h4 id=\"-meta-ie9-compatibility-\">Тег <code>&lt;meta&gt;</code> для использования <strong>IE9</strong> (и выше) в максимальном <strong>compatibility</strong> режиме</h4>\n<p><strong>BEMHTML</strong>:</p>\n<pre><code class=\"lang-js\">content: [\n...\n{\n    tag: &#39;meta&#39;,\n    attrs: { &#39;http-equiv&#39;: &#39;X-UA-Compatible&#39;, content: &#39;IE=EmulateIE7, IE=edge&#39; }\n},\n...\n</code></pre>\n<h4 id=\"-title-\">Выставление значения тега <code>&lt;title&gt;</code> страницы из свойства</h4>\n<pre><code class=\"lang-js\">content: [\n...\n{\n    tag: &#39;title&#39;,\n    content: this.ctx.title\n},\n...\n</code></pre>\n<h4 id=\"-\">Выставление фавиконки</h4>\n<pre><code class=\"lang-js\">content: [\n...\nthis.ctx.favicon ? {\n    elem: &#39;favicon&#39;,\n    url: this.ctx.favicon\n} : &#39;&#39;,\n...\n</code></pre>\n<h4 id=\"-i-ua-\">Декларация блока <code>i-ua</code></h4>\n<pre><code class=\"lang-js\">content: [\n...\n{\n    block: &#39;i-ua&#39;\n},\n...\n</code></pre>\n<p>Аналогично указанию свойства <code>head</code>, может быть задано свойство <code>meta</code>, содержащее один или несколько элементов <code>meta</code>:</p>\n<pre><code class=\"lang-js\">({\n...\nmeta: {\n    elem: &#39;meta&#39;,\n    attrs: {\n        name: &#39;keywords&#39;,\n        content: &#39;js, css, html&#39;\n    }\n},\n...\n})\n</code></pre>\n<pre><code class=\"lang-js\">({\n...\nmeta: [\n    {\n        elem: &#39;meta&#39;,\n        attrs: {\n            name: &#39;keywords&#39;,\n            content: &#39;js, css, html&#39;\n        }\n    },\n    {\n        elem: &#39;meta&#39;,\n        attrs: {\n            name : &#39;description&#39;,\n            content : &#39;Yet another webdev blog&#39;\n        }\n    }\n]\n...\n})\n</code></pre>\n<p>Значением свойства <code>content</code> блока <code>b-page</code> может быть хеш-описание содержимого (если речь идёт лишь об одном блоке) или массив блоков, описанных хешами:</p>\n<pre><code class=\"lang-js\">({\n...\ncontent: {\n    block: &#39;b-link&#39;,\n    mods: { pseudo: &#39;yes&#39;, togcolor: &#39;yes&#39;, color: &#39;green&#39; },\n    url: &#39;#&#39;,\n    target: &#39;_blank&#39;,\n    title: &#39;Кликни меня&#39;,\n    content: &#39;Псевдоссылка, меняющая цвет по клику&#39;\n}\n})\n</code></pre>\n<p>На блоки, содержащиеся в <code>content</code>, действуют их <strong>BEMHTML</strong>-шаблоны.</p>\n<h4 id=\"-\">Отмена автоматической инициализации блоков</h4>\n<pre><code class=\"lang-js\">noDeps: [\n    { block: &#39;i-bem&#39;, elem: &#39;dom&#39;, mods: { init: &#39;auto&#39; } }\n]\n</code></pre>\n"}],"examples":[{"url":"b-page.examples/10-b-page-simple/_10-b-page-simple"},{"url":"b-page.examples/20-b-page-simple/_20-b-page-simple"},{"url":"b-page.examples/30-b-page-with-js/_30-b-page-with-js"},{"url":"b-page.examples/40-b-page-with-level/_40-b-page-with-level"},{"url":"b-page.examples/60-page-nodeps-bem/_60-page-nodeps-bem"}]}
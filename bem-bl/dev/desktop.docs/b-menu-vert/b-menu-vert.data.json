{"ru":{"name":"b-menu-vert","examples":[{"name":"LT3q9DmOJ9hvpoQn__pOqTUXUHI","source":"{\n  block: 'b-menu-vert',\n  content: [\n    {\n      elem: 'item',\n      content: 'Index'\n    },\n    {\n      elem: 'item',\n      content: 'Contacts'\n    }\n  ]\n}","sourcePath":"blocks-desktop/b-menu-vert/b-menu-vert.ru.md","path":"desktop.examples/b-menu-vert/LT3q9DmOJ9hvpoQn__pOqTUXUHI","notation":{"block":"b-menu-vert"}},{"name":"xUYZA8VpYhkrRobt2IJ-AYI1bSQ","source":"{\n  block: 'b-menu-vert',\n  title: {\n    elem: 'title',\n    content: 'Menu title'\n  },\n  content: [\n    {\n      elem: 'item',\n      content: 'Index'\n    },\n    {\n      elem: 'item',\n      content: 'Contacts'\n    }\n  ]\n}","sourcePath":"blocks-desktop/b-menu-vert/b-menu-vert.ru.md","path":"desktop.examples/b-menu-vert/xUYZA8VpYhkrRobt2IJ-AYI1bSQ","notation":{"block":"b-menu-vert"}},{"name":"10-b-menu-vert-simple","path":"desktop.examples/b-menu-vert/10-b-menu-vert-simple","notation":{"block":"10-b-menu-vert-simple"}},{"name":"20-b-menu-vert-js","path":"desktop.examples/b-menu-vert/20-b-menu-vert-js","notation":{"block":"20-b-menu-vert-js"}},{"name":"30-b-menu-vert-js-complex","path":"desktop.examples/b-menu-vert/30-b-menu-vert-js-complex","notation":{"block":"30-b-menu-vert-js-complex"}},{"name":"40-b-menu-vert-trigger","path":"desktop.examples/b-menu-vert/40-b-menu-vert-trigger","notation":{"block":"40-b-menu-vert-trigger"}},{"name":"50-b-menu-vert-trigger-deep","path":"desktop.examples/b-menu-vert/50-b-menu-vert-trigger-deep","notation":{"block":"50-b-menu-vert-trigger-deep"}},{"name":"60-b-menu-vert-submenu","path":"desktop.examples/b-menu-vert/60-b-menu-vert-submenu","notation":{"block":"60-b-menu-vert-submenu"}},{"name":"70-b-menu-vert-submenu-trigger","path":"desktop.examples/b-menu-vert/70-b-menu-vert-submenu-trigger","notation":{"block":"70-b-menu-vert-submenu-trigger"}}],"description":"<h2 id=\"Описание\"><a href=\"#Описание\" class=\"anchor\"></a>Описание</h2>\n<p>Блок, создает разметку для вертикального меню. Построен на основе блока-хелпера <strong>i-menu</strong>.</p>\n<h2 id=\"Варианты-использования\"><a href=\"#Варианты-использования\" class=\"anchor\"></a>Варианты использования</h2>\n<ul>\n<li><strong>Простое вертикальное меню:</strong> в качестве контента элементов <code>item</code> в простых случаях используются ссылки.</li>\n<li><strong>Вертикальное js-меню с псевдоссылками:</strong> в качестве контента элементов <code>item</code> используются не ссылки, уводящие пользователя на другую страницу, а псевдоссылки для клиентского JavaScript-приложения. Для этого в BEMJSON-декларации доопределяем обычные ссылки до псевдо-ссылок, используя модификатор `{ pseudo: &#39;yes&#39; }.</li>\n<li><strong>Вертикальное js-меню со сложным контентом:</strong> Пункты меню могут содержать не один, а несколько блоков.</li>\n<li><strong>Раскрывающееся вертикальное js-меню:</strong> Если нужно сразу показать вложенное меню раскрытым, эти модификаторы следует явно задать в <strong>BEMJSON</strong>-описании блока.</li>\n<li><strong>Вложенные меню:</strong> <strong>BEMJSON</strong> позволяет вкладывать одни блоки в другие. Содержанием пункта меню может быть другое меню, и тогда естественным образом образуется вложенность.\nТакое использование меню создаст в <strong>DOM</strong>-дереве два блока (и два узла <code>ul</code>), которые будут вести себя соответственно.</li>\n</ul>\n<h2 id=\"Объявление-блока-на-странице\"><a href=\"#Объявление-блока-на-странице\" class=\"anchor\"></a>Объявление блока на странице</h2>\n<p>В простейшем случае в <strong>BEMJSON</strong> достаточно объявить блок и перечислить его элементы <code>item</code> в свойстве <code>content</code>:</p>\n<p><!-- bem-example: desktop.examples/b-menu-vert/LT3q9DmOJ9hvpoQn__pOqTUXUHI -->\nHTML-представление:</p>\n<pre><code>    &lt;div class=&quot;b-menu-vert&quot;&gt;\n        &lt;ul class=&quot;b-menu-vert__layout&quot;&gt;\n            &lt;li class=&quot;b-menu-vert__layout-unit b-menu-vert__layout-unit_position_first&quot;&gt;\n                &lt;div class=&quot;b-menu-vert__item&quot;&gt;Index&lt;/div&gt;\n            &lt;/li&gt;\n            &lt;li class=&quot;b-menu-vert__layout-unit b-menu-vert__layout-unit_position_last&quot;&gt;\n                &lt;div class=&quot;b-menu-vert__item&quot;&gt;Contacts&lt;/div&gt;\n            &lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n</code></pre><p>В получившемся <strong>HTML</strong> появляются не только узлы для блока и явно заданных элементов <code>item</code>, но и разметка для элементов <code>layout</code> и <code>layout-unit</code>, которые отвечают за геометрическую отрисовку блока.</p>\n<p>Описанные ниже варианты деклараций блока в BEMJSON-файле представлены в разделе &quot;Примеры&quot;.</p>\n<h2 id=\"Элементы-блока\"><a href=\"#Элементы-блока\" class=\"anchor\"></a>Элементы блока</h2>\n<h3 id=\"__item\"><a href=\"#__item\" class=\"anchor\"></a>__item</h3>\n<p>Элемент меню\n<code>{ elem: &#39;item&#39; }</code>\nСодержанием элементов меню может быть что угодно: ссылки на страницы, псевдоссылки, иконки и вообще любые блоки.</p>\n<h3 id=\"__title\"><a href=\"#__title\" class=\"anchor\"></a>__title</h3>\n<p>Элемент служит для отображения заголовка меню.\n<code>{ elem: &#39;title&#39; }</code>\nВ <strong>BEMJSON</strong> необходимо указать свойство <code>title</code>.</p>\n<p><!-- bem-example: desktop.examples/b-menu-vert/xUYZA8VpYhkrRobt2IJ-AYI1bSQ --></p>\n<h3 id=\"__separator\"><a href=\"#__separator\" class=\"anchor\"></a>__separator</h3>\n<p>Специальный символ, который разделяет пункты меню\n<code>{ elem: &#39;separator&#39; }</code>\nПредусмотрена возможность создания пустого элемента списка для визуального разделения одних пунктов от других.\nДля этого на уровне переопределения проекта нужно задать <strong>CSS</strong>-правила для него.\nЧаще всего <code>separator</code> представляют в виде горизонтальной черты.</p>\n<h3 id=\"__item-selector\"><a href=\"#__item-selector\" class=\"anchor\"></a>__item-selector</h3>\n<p><code>{ elem: &#39;item-selector&#39; }</code>\n<strong>Вертикальное js-меню с псевдоссылками</strong>\nКроме внешнего вида, <strong>js</strong>-меню отличается и клиентской функциональностью: оно способно по клику левой кнопкой мыши переключать соответствующий пункт меню в состояние <code>{ state: &#39;current&#39; }</code> и генерировать на <code>js</code>-объекте, соответствующем блоку, событие о факте переключения пункта меню.</p>\n<p>Для использования этой функциональности необходимо определить элемент <code>item-selector</code>. Эти элементы специально не совпадают с элементами <code>item</code>, потому что чаще всего сам пункт меню больше по размеру, чем его активная область.</p>\n<p>Элемент <code>item-selector</code> можно использовать как сам по себе, так и примешивая его к другим элементам или блокам. В данном случае можно сделать <code>mix</code> с псевдоссылками.</p>\n<p><strong>Вертикальное js-меню со сложным контентом</strong>\nПункты меню могут содержать не один, а несколько блоков.</p>\n<p>Поскольку реакция на клик необходима для всего содержания пункта меню, элемент <code>item-selector</code> используется в таком случае в явном виде, являясь контейнером для содержания пункта меню.\nВ этом случае он представлен в <strong>DOM</strong>-дереве узлом <code>span</code>.</p>\n<h3 id=\"__item-content\"><a href=\"#__item-content\" class=\"anchor\"></a>__item-content</h3>\n<p><code>{ elem: &#39;item-conten&#39; }</code>\nЭлемент <code>item-content</code> с содержанием показывается или скрывается в зависимости от кликов по элементу <code>item-selector</code>. Описывается свойством <code>item-content</code>.</p>\n<p>Элемент <code>item-content</code> не видим, в случае, если элемент <code>trigger</code> не содержит модификатора <code>state</code>, а элемент <code>item-content</code> не содержит модификатора <code>visibility</code>.</p>\n<h3 id=\"__trigger\"><a href=\"#__trigger\" class=\"anchor\"></a>__trigger</h3>\n<p><code>{ elem: &#39;trigger&#39; }</code>\nПри клике на элементе <code>trigger</code> левой кнопкой мыши он приобретает модификатор <code>{ state: &#39;opened&#39; }</code>. Элемент <code>item-content</code> в это же время приобретает модификатор <code>{ visibility: &#39;visible&#39; }</code> и становится виден на странице.</p>\n<p>По умолчанию не содержит модификатора <code>state</code>.</p>\n<h3 id=\"__submenu\"><a href=\"#__submenu\" class=\"anchor\"></a>__submenu</h3>\n<p><code>{ elem: &#39;submenu&#39; }</code>\nЭлемент <code>submenu</code> дает возможность визуально представить меню как вложенное, но функционально — как один блок (например, со сквозным поведением активного пункта меню).</p>\n<p>Элемент <code>submenu</code> должен содержаться в элементе <code>item-content</code> и включать в себя описание элементов <code>item</code> для вложенного меню.</p>\n<h2 id=\"Модификаторы-элементов\"><a href=\"#Модификаторы-элементов\" class=\"anchor\"></a>Модификаторы элементов</h2>\n<h3 id=\"_state_current\"><a href=\"#_state_current\" class=\"anchor\"></a>_state_current</h3>\n<p><code>{ ElemMods: { state: &#39;current&#39; } }</code>\nУ одного из элементов <code>item</code> может быть модификатор <code>{ state: &#39;current&#39; }</code>, отмечающий выделенный пункт меню.\nМодификатор используется как для визуального выделения пункта при помощи <strong>CSS</strong>-правил для этого модификатора, так и для описания функционального поведения.</p>\n\n<p>Элемент вертикального меню, может содержать любой контент, чаще всего это ссылки или псевдо-ссылки.</p>\n<p>Имеет состояния: <code>[ current, disabled ]</code></p>\n\n<p>﻿Не используется без элемента <code>item-selector</code>. По умолчанию невидим.</p>\n\n<p>﻿Добавление этого модификатора делает видимым элемент <strong>item-content</strong>.</p>\n\n<p>Этот элемент появляется в меню, когда требуется реакция на клик по пункту меню.</p>\n<p>Реакция на клик может понадобиться, если при выборе пункта меню нужно что-то сделать на клиенте. Например, загрузить контент по <strong>AJAX</strong>.</p>\n<p>Реакция есть только на клик левой кнопкой мыши. В результате клика соответствующий пункт меню (элемент <code>item</code>) приобретает модификатор <code>{ state: &#39;current&#39; }</code>, то есть пункт меню становится «выделенным» (текущим). Предыдущий выделенный пункт меню в то же время теряет модификатор <code>state</code>.</p>\n<p>В базовой <strong>CSS</strong>-реализации блока не предоставляется код для визуального выделения текущего пункта меню. Такой код можно реализовать на собственном уровне переопределения.</p>\n<p>Элемент может быть представлен в <strong>DOM</strong> отдельным узлом (<code>span</code>) или быть смиксованным с другим блоком, чаще всего с псевдо-ссылкой.</p>\n\n<p>Используется в случае, когда необходимо представить вложенное меню частью списка «меню-родителя».</p>\n\n<p>Опциональный элемент. В <strong>HTML</strong> представлен тегом <code>h3</code>, выводится перед списком (<code>ul</code>).</p>\n\n<p>Может содержать внутри себя опциональный элемент <code>trigger-icon</code>, который используется для отображения иконок.</p>\n\n<div class=\"shmakowiki\"><p>﻿Блок, создает разметку для вертикального меню. Построен на основе блока-хелпера <tt>i-menu</tt>.</p><h3 id=\"Prostoevertikalynoemenyu\">Простое вертикальное меню</h3><p>В простейшем случае в <tt>BEMJSON</tt> достаточно объявить блок и перечислить его элементы <tt>item</tt> в свойстве <tt>content</tt>:</p><pre><code class=\"js\">{\n  block: &apos;b-menu-vert&apos;,\n  content: [\n    {\n      elem: &apos;item&apos;,\n      content: &apos;Index&apos;\n    },\n    {\n      elem: &apos;item&apos;,\n      content: &apos;Contacts&apos;\n    },\n    ...\n  ]\n}</code></pre><p>В получившемся <tt>HTML</tt> появляются не только узлы для блока и явно заданных элементов <tt>item</tt>, но и разметка для элементов <tt>layout</tt> и <tt>layout-unit</tt>, которые отвечают за геометрическую отрисовку блока.</p><p>В качестве контента элементов <tt>item</tt> в простых случаях используются ссылки:</p><pre><code class=\"js\">{\n  block: &apos;b-menu-vert&apos;,\n  content: [\n    {\n      elem: &apos;item&apos;,\n      content: {\n        block: &apos;b-link&apos;,\n        url: &apos;http://yandex.com&apos;,\n        content: &apos;Index&apos;\n      }\n    },\n    ...\n  ]\n}</code></pre><p>У одного из элементов <tt>item</tt> может быть модификатор <tt>{ state: &apos;current&apos; }</tt>, отмечающий выделенный пункт меню. Модификатор используется как для визуального выделения пункта при помощи <tt>CSS</tt>-правил для этого модификатора, так и для описания функционального поведения.</p><pre><code class=\"js\">{\n  block: &apos;b-menu-vert&apos;,\n  content: [\n    {\n      elem: &apos;item&apos;,\n      elemMods: { state: &apos;current&apos; },\n      content: {\n        block: &apos;b-link&apos;,\n        url: &apos;http://yandex.com&apos;,\n        content: &apos;Index&apos;\n      }\n    },\n    {\n      elem: &apos;item&apos;,\n      content: { ... }\n  ]\n}</code></pre><p>Для отображения заголовка меню (элемент <tt>title</tt>), в <tt>BEMJSON</tt> необходимо указать свойство <tt>title</tt>:</p><pre><code class=\"js\">{\n  block: &apos;b-menu-vert&apos;,\n  title: {\n    elem: &apos;title&apos;,\n    content: &apos;Menu title&apos;\n  },\n  content: [\n    {\n      elem: &apos;item&apos;,\n      elemMods: { state: &apos;current&apos; },\n      content: {\n        block: &apos;b-link&apos;,\n        url: &apos;http://yandex.com&apos;,\n        content: &apos;Index&apos;\n      }\n    },\n    {\n      elem: &apos;item&apos;,\n      content: { ... }\n  ]\n}</code></pre><p>Предусмотрена возможность создания пустого элемента списка для визуального разделения одних пунктов от других. За это отвечает элемент <tt>separator</tt>. Для этого на уровне переопределения проекта нужно задать <tt>CSS</tt>-правила для него. Чаще всего <tt>separator</tt> представляют в виде горизонтальной черты.</p><pre><code class=\"js\">{\n  block: &apos;b-menu-vert&apos;,\n  content: [\n    {\n      elem: &apos;item&apos;,\n      content: { ... }\n    },\n    {\n      elem: &apos;separator&apos;\n    },\n    {\n      elem: &apos;item&apos;,\n      content: { ... }\n    }\n  ]\n}</code></pre><h3 id=\"Vertikalynoejsmenyuspsevdossylkami\">Вертикальное js-меню с псевдоссылками</h3><p>В <tt>BEMJSON</tt> доопределяем обычные ссылки до псевдо-ссылок, используя модификатор <tt>{ pseudo: &apos;yes&apos; }</tt>:</p><pre><code class=\"js\">{\n  block: &apos;b-menu-vert&apos;,\n  content: [\n    {\n      elem: &apos;item&apos;,\n      elemMods: { &apos;state&apos;: &apos;current&apos; },\n      content: {\n        block: &apos;b-link&apos;,\n        mods: { &apos;pseudo&apos;: &apos;yes&apos; },\n        content: &apos;First point&apos;\n      }\n    },\n    ...\n  ]\n}</code></pre><p>Кроме внешнего вида, <tt>js</tt>-меню отличается и клиентской функциональностью: оно способно по клику левой кнопкой мыши переключать соответствующий пункт меню в состояние <tt>{ state: &apos;current&apos; }</tt> и генерировать на <tt>js</tt>-объекте, соответствующем блоку, событие о факте переключения пункта меню.</p><p>Для использования этой функциональности необходимо определить <a href=\"#__item-selector\">элементы <tt>item-selector</tt></a>. Эти элементы специально не совпадают с элементами <tt>item</tt>, потому что чаще всего сам пункт меню больше по размеру, чем его активная область.</p><p>Элемент <tt>item-selector</tt> можно использовать как сам по себе, так и примешивая его к другим элементам или блокам. В данном случае можно сделать <tt>mix</tt> с псевдоссылками:</p><pre><code class=\"js\">{\n  block: &apos;b-menu-vert&apos;,\n  content: [\n    {\n      elem: &apos;item&apos;,\n      elemMods: { &apos;state&apos;: &apos;current&apos; },\n      content: {\n        block: &apos;b-link&apos;,\n        mods: { &apos;pseudo&apos;: &apos;yes&apos; },\n        mix: [{ block: &apos;b-menu-vert&apos;, elem: &apos;item-selector&apos; }],\n        url: &apos;/&apos;,\n        content: &apos;First point&apos;\n      }\n    },\n    ...\n  ]\n}</code></pre><h3 id=\"Vertikalynoejsmenyusoslozhnymkontentom\">Вертикальное js-меню со сложным контентом</h3><p>Пункты меню могут содержать не один, а несколько блоков.</p><p>Поскольку реакция на клик необходима для всего содержания пункта меню, элемент <tt>item-selector</tt> используется в таком случае в явном виде, являясь контейнером для содержания пункта меню. В этом случае он представлен в <tt>DOM</tt>-дереве узлом <tt>span</tt>:</p><pre><code class=\"js\">{\n  elem: &apos;item&apos;,\n  content: {\n    elem: &apos;item-selector&apos;,\n    content: [\n      {\n        block: &apos;b-link&apos;,\n        mods: { &apos;pseudo&apos;: &apos;yes&apos;, &apos;inner&apos;: &apos;yes&apos; },\n        mix: [{ block: &apos;b-menu-vert&apos;, elem: &apos;item-selector&apos; }],\n        url: &apos;/&apos;,\n        content: [\n          {\n            block: &apos;b-icon&apos;,\n            url: &apos;/&apos;,\n            alt: &apos;Yandex favicon&apos;\n          },\n          {\n            elem: &apos;inner&apos;,\n            content: &apos;Second point&apos;\n          }\n        ]\n      },\n      &apos; One more element here&apos;\n    ]\n  }\n}</code></pre><h3 id=\"Raskryvayushheesyavertikalynoejsmenyu\">Раскрывающееся вертикальное js-меню</h3><p>Переключение активного пункта меню — не единственная реализованная динамическая функциональность. Пункты меню также могут содержать элементы <tt>trigger</tt>, клик по которым открывает или скрывает дочерний контент. С помощью таких элементов можно реализовать скрывающиеся вложенные меню.</p><p>Так же, как и элемент <tt>item-selector</tt>, элемент <tt>trigger</tt> может использоваться не явно, а через <tt>mix</tt>.</p><pre><code class=\"js\">{\n  block: &apos;b-menu-vert&apos;,\n  content: [\n    {\n      elem: &apos;item&apos;,\n      elemMods: { state: &apos;current&apos; },\n      content: &apos;Videos&apos;\n    },\n    {\n      elem: &apos;item&apos;,\n      content: {\n        block: &apos;b-link&apos;,\n        mods: { pseudo: &apos;yes&apos;, inner: &apos;yes&apos; },\n        mix: [{ block: &apos;b-menu-vert&apos;, elem: &apos;trigger&apos; }],\n        content: [\n          {\n            block: &apos;b-icon&apos;,\n            mix: [{ block: &apos;b-menu-vert&apos;, elem: &apos;trigger-icon&apos; }],\n            alt: &apos;trigger&apos;\n          },\n          {\n            elem: &apos;inner&apos;,\n            content: &apos;Images&apos;\n          }\n        ]\n      },\n      &apos;item-content&apos;: {\n        elem: &apos;item-content&apos;,\n        content: {\n          block: &apos;b-menu-vert&apos;,\n          mods: { &apos;type&apos;: &apos;submenu&apos; },\n          content: [\n            {\n              elem: &apos;item&apos;,\n              content: &apos;Any size&apos;\n            },\n            {\n              elem: &apos;item&apos;,\n              content: &apos;Large&apos;\n            },\n            {\n              elem: &apos;item&apos;,\n              content: &apos;Medium&apos;\n            }\n          ]\n        }\n      }\n    },\n    ...\n  ]\n}</code></pre><p>Кроме элемента <tt>item-selector</tt> здесь используется свойство <tt>item-content</tt>, описывающее элемент <tt>item-content</tt> с содержанием, которое показывается или скрывается в зависимости от кликов по элементу <tt>item-selector</tt>.</p><p>Элемент <tt>trigger-icon</tt> используется только для обозначения иконки. Не является обязательным элементом.</p><p>По умолчанию элемент <tt>trigger</tt> не содержит модификатора <tt>state</tt>, а элемент <tt>item-content</tt> не содержит модификатора <tt>visibility</tt>. В этом состоянии содержание элемента <tt>item-content</tt> не видно.<br/> При клике на элементе <tt>trigger</tt> левой кнопкой мыши он приобретает модификатор <tt>{ state: &apos;opened&apos; }</tt>. Элемент <tt>item-content</tt> в это же время приобретает модификатор <tt>{ visibility: &apos;visible&apos; }</tt> и становится виден на странице.</p><p>Если нужно сразу показать вложенное меню раскрытым, эти модификаторы следует явно задать в <tt>BEMJSON</tt>-описании блока:</p><pre><code class=\"js\">{\n  block: &apos;b-link&apos;,\n  mods: { pseudo: &apos;yes&apos;, inner: &apos;yes&apos; },\n  mix: [{ block: &apos;b-menu-vert&apos;, elem: &apos;trigger&apos;, elemMods: { state: &apos;opened&apos; } }],\n  content: { ... }\n}</code></pre><pre><code class=\"js\">&apos;item-content&apos;: {\n  elem: &apos;item-content&apos;,\n  elemMods: { visibility: &apos;visible&apos; },\n  content: [ ... ]</code></pre><h3 id=\"Vlozhennyemenyu\">Вложенные меню</h3><p><tt>BEMJSON</tt> позволяет вкладывать одни блоки в другие. Содержанием пункта меню может быть другое меню, и тогда естественным образом образуется вложенность.<br/> Такое использование меню создаст в <tt>DOM</tt>-дереве два блока (и два узла <tt>ul</tt>), которые будут вести себя соответственно.</p><p>Если есть необходимость визуально представить меню как вложенное, но функционально — как один блок (например, со сквозным поведением активного пункта меню), нужно воспользоваться элементом <tt>submenu</tt>.</p><p>Элемент <tt>submenu</tt> должен содержаться в элементе <tt>item-content</tt> и включать в себя описание элементов <tt>item</tt> для вложеннего меню.</p></div>"},"en":{"name":"b-menu-vert","examples":[{"name":"10-b-menu-vert-simple","path":"desktop.examples/b-menu-vert/10-b-menu-vert-simple","notation":{"block":"10-b-menu-vert-simple"}},{"name":"20-b-menu-vert-js","path":"desktop.examples/b-menu-vert/20-b-menu-vert-js","notation":{"block":"20-b-menu-vert-js"}},{"name":"30-b-menu-vert-js-complex","path":"desktop.examples/b-menu-vert/30-b-menu-vert-js-complex","notation":{"block":"30-b-menu-vert-js-complex"}},{"name":"40-b-menu-vert-trigger","path":"desktop.examples/b-menu-vert/40-b-menu-vert-trigger","notation":{"block":"40-b-menu-vert-trigger"}},{"name":"50-b-menu-vert-trigger-deep","path":"desktop.examples/b-menu-vert/50-b-menu-vert-trigger-deep","notation":{"block":"50-b-menu-vert-trigger-deep"}},{"name":"60-b-menu-vert-submenu","path":"desktop.examples/b-menu-vert/60-b-menu-vert-submenu","notation":{"block":"60-b-menu-vert-submenu"}},{"name":"70-b-menu-vert-submenu-trigger","path":"desktop.examples/b-menu-vert/70-b-menu-vert-submenu-trigger","notation":{"block":"70-b-menu-vert-submenu-trigger"}}],"description":"<p>This block makes HTML markup for a vertical menu. It is based on a helper block <code>i-menu</code>.</p>\n<p>There are two types of elements in this block:</p>\n<h5 id=\"Layout-Elements\"><a href=\"#Layout-Elements\" class=\"anchor\"></a>Layout Elements</h5>\n<ul>\n<li><code>layout</code></li>\n<li><code>layout-unit</code></li>\n</ul>\n<h5 id=\"Functional-Element\"><a href=\"#Functional-Element\" class=\"anchor\"></a>Functional Element</h5>\n<ul>\n<li><code>title</code></li>\n<li><code>item</code></li>\n</ul>\n\n<p>You can make <strong>item-content</strong> element visible using this modificator.</p>\n\n<div class=\"shmakowiki\"><p>﻿This block makes HTML markup for a vertical menu. It is based on helper block <tt>i-menu</tt>.</p><p>There are 2 type of elements in this block:</p><h4 id=\"Layoutelements\">Layout elements</h4><ul><li>layout</li><li>layout-unit</li></ul><h4 id=\"Functionalelement\">Functional element</h4><ul><li>title</li><li>item</li></ul></div>"}}
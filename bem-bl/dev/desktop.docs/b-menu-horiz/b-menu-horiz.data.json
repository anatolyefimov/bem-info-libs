{"ru":{"name":"b-menu-horiz","examples":[{"content":[{"url":"desktop.examples/b-menu-horiz/05-b-menu-horiz-simple/05-b-menu-horiz-simple.ru"},{"url":"desktop.examples/b-menu-horiz/10-b-menu-horiz-normal/10-b-menu-horiz-normal.ru"},{"url":"desktop.examples/b-menu-horiz/20-b-menu-horiz-complex/20-b-menu-horiz-complex.ru"},{"url":"desktop.examples/b-menu-horiz/30-b-menu-horiz-normal-js/30-b-menu-horiz-normal-js.ru"}]}],"description":[{"content":"<h2 id=\"-\">Описание</h2>\n<p>Блок-помощник для построения абстрактного меню.</p>\n<p>Содержит js-функциональность, которая используется в блоках <code>b-menu-vert</code> и <code>b-menu-horiz</code>.</p>\n<p>Слушает событие <code>leftclick</code> на элементе <code>item-selector</code> и переводит в <code>{ state: &#39;current&#39; }</code> тот элемент <code>item</code>,\nна котором произошло событие.</p>\n<p>Тригерит событие которое можно использовать из других блоков, использующее любое меню.</p>\n\n<h2 id=\"-\">Описание</h2>\n<p>Блок <strong>b-menu-horiz</strong> создаёт <strong>HTML</strong>-разметку для горизонтального меню. Кроме того, у блока есть <strong>JavaScript</strong>-функциональность, позволяющая создавать скрипты с реакцией на выбор пункта меню.</p>\n<p>Сложность <strong>HTML</strong>-разметки меню зависит от модификатора, с которым используется блок.</p>\n<p><strong>Важно:</strong> Блок не может использоваться без модификатора <code>layout</code>.</p>\n<p>Модификатор блока <code>layout</code> реализован с тремя возможными значениями:</p>\n<ul>\n<li><code>horiz</code></li>\n<li><code>complex</code></li>\n<li><code>normal</code></li>\n</ul>\n<h3 id=\"-\">Варианты использования</h3>\n<ul>\n<li>Простое горизонтальное меню списком</li>\n<li>Горизонтальное меню с клиентской функциональностью</li>\n<li>Меню без подмешивания блока i-bem </li>\n<li>Горизонтальное меню простыми ссылками</li>\n</ul>\n<h2 id=\"-\">Объявление блока на странице</h2>\n<p>Описанные ниже варианты деклараций блока в BEMJSON-файле представлены в разделе &quot;Примеры&quot;.</p>\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"__item\">__item</h3>\n<p>Элемент меню<br><code>{ elem: &#39;item&#39; }</code>\nСодержанием элементов меню может быть что угодно: ссылки на страницы, псевдоссылки, иконки и вообще любые блоки.</p>\n<h3 id=\"__title\">__title</h3>\n<p>Элемент служит для отображения заголовка меню. \n<code>{ elem: &#39;title&#39; }</code>\nВ <strong>BEMJSON</strong> необходимо указать свойство <code>title</code>.</p>\n<pre><code class=\"lang-js\">{\n  block: &#39;b-menu-vert&#39;,\n  title: {\n    elem: &#39;title&#39;,\n    content: &#39;Menu title&#39;\n  },\n  content: { ... }\n}\n</code></pre>\n<h3 id=\"__separator\">__separator</h3>\n<p>Специальный символ, который разделяет пункты меню\n<code>{ elem: &#39;separator&#39; }</code></p>\n<h3 id=\"__item-selector\">__item-selector</h3>\n<h2 id=\"-\">Модификаторы</h2>\n<h3 id=\"_layout\">_layout</h3>\n<p><code>_layout_complex</code><br>Горизонтальное меню с табличной разметкой<br><code>{ mods: { &#39;layout&#39;: &#39;complex&#39; } }</code><br>Использование блока с модификатором <code>{ layout: &#39;complex&#39; }</code> принципиально ничем не отличается. Для блока в такой модификации создаётся разметка на основе таблицы. Такое решение может потребоваться при некоторых дизайнах.</p>\n<h3 id=\"_layout_normal\">_layout_normal</h3>\n<p><strong>Простое горизонтальное меню списком</strong><br><code>{ mods: { &#39;layout&#39;: &#39;normal&#39; } }</code><br>Входные данные для блока с любым из этих модификаторов похожи: нужно описать блок, модификатор <code>layout</code>, в качестве свойства <code>content</code> блока перечислить пункты меню, которые выражаются элементами <code>item</code>.</p>\n<pre><code>{\n  block: &#39;b-menu-horiz&#39;,\n  mods: { layout: &#39;normal&#39; },\n  content: [\n    {\n      elem: &#39;item&#39;,\n      content: &#39;Home&#39;\n    },\n    {\n      elem: &#39;item&#39;,\n      content: &#39;Office&#39;\n    },\n    ...\n  ]\n}\n</code></pre><p>Не всегда меню на сайте подразумевает ссылки, уводящие пользователя на другую страницу. Меню может использоваться и для клиентского JavaScript-приложения. В этом случае содержанием пунктов меню обычно бывают псевдоссылки:</p>\n<pre><code>{\n    elem: &#39;item&#39;,\n    elemMods: { &#39;state&#39; : &#39;current&#39; },\n        content: {\n        block: &#39;b-link&#39;,\n        mods : { &#39;pseudo&#39; : &#39;yes&#39; },\n        url: &#39;/&#39;,\n        content: &#39;First point&#39;\n    }\n}\n</code></pre><p><strong>Горизонтальное меню с клиентской функциональностью</strong></p>\n<p>Не всегда меню на сайте подразумевает ссылки, уводящие пользователя на другую страницу. Меню может использоваться и для клиентского JavaScript-приложения. В этом случае содержанием пунктов меню обычно бывают псевдоссылки:</p>\n<pre><code>{\n  block: &#39;b-menu-horiz&#39;,\n  mods: { layout: &#39;normal&#39; },\n  title: {\n    elem: &#39;title&#39;, content: &#39;Navigation:&#39;\n  },\n  content: [\n    {\n      elem: &#39;item&#39;,\n      elemMods: { state: &#39;current&#39; },\n      content: {\n        block: &#39;b-link&#39;,\n        mods: { pseudo: &#39;yes&#39; },\n        url: &#39;/&#39;,\n        content: &#39;Home&#39;\n      }\n    },\n    { ... }\n  ]\n}\n</code></pre><p>Приведённый выше BEMJSON блока обеспечит нужный внешний вид.\nКроме этого нужно, чтобы у меню были области, реагирующие на клик. В данном случае они совпадают с псевдоссылками, поэтому можно применить смешивание блоков (<code>mix</code>). BEMJSON-декларация доступна в разделе &quot;Примеры&quot;.</p>\n<p>При явном использовании этот элемент представлен в DOM в виде <code>span</code>, в который можно положить блоки, составляющие пункт меню. Если же содержание пункта меню состоит всего из одного блока (как в примере с псевдоссылками), для экономии разметки разумно применять <code>mix</code>.</p>\n<p>Кроме того, что соответствующий элемент <code>item</code> в результате клика приобретает модификатор <code>{ state: &#39;current&#39; }</code>, на BEM-объекте блока возникает событие <code>current</code>, сопровождающееся данными о текущем и предыдущем активных пунктах. В своём JavaScript-приложении можно реагировать на это событие.</p>\n<p>В HTML по умолчанию блок представлен как имеющий JavaScript-реализацию (он смешан с блоком <code>i-bem</code> и имеет соответствующие параметры в атрибуте <code>data-bem</code>). Но если в блоке отсутствуют элементы <code>item-selector</code>, BEM-объект блока не создаётся.</p>\n<p><strong>Меню без подмешивания блока i-bem</strong></p>\n<p>Примешивание блока <code>i-bem</code> можно устранить, указав в свойстве js-блока значение <code>false</code>.</p>\n<pre><code>{\n  block: &#39;b-menu-horiz&#39;,\n  js: false,\n  mods: { layout: &#39;normal&#39; },\n  content: [\n    {\n      elem: &#39;item&#39;,\n      content: {\n        block: &#39;b-link&#39;, url: &#39;/&#39;, content: &#39;Home&#39;\n      }\n    },\n    { ... }\n  ]\n}\n</code></pre><h3 id=\"_layout_simple\">_layout_simple</h3>\n<p><strong>Горизонтальное меню простыми ссылками</strong><br><code>{ mods: { &#39;layout&#39;: &#39;simple&#39; } }</code><br>В некоторых случаях для вывода меню не нужны даже DOM-узлы списка, а достаточно просто перечислить ссылки, разделив их пробелом, запятой или каким-либо специальным символом.</p>\n<p>Для вывода такого меню подходит реализация блока с модификатором <code>{ layout: &#39;simple&#39; }</code>.</p>\n<p>BEMJSON меню отличается наличием свойства <code>separator</code> — того самого специального символа, который разделяет пункты меню.\nАктивный пункт меню в данном примере представлен в виде простого текста в теге <code>span</code>.</p>\n<h3 id=\"__item_state_current\">__item_state_current</h3>\n<p><code>{ elemMods: { state: &#39;current&#39; } }</code>\nЭтот модификатор помечает текущий пункт меню.</p>\n<p>На своём уровне переопределения можно реализовать для такого модификатора CSS-правила, по которым текущий пункт меню будет визуально отличаться от остальных.</p>\n<pre><code>{\n    elem: &#39;item&#39;,\n    elemMods: { state: &#39;current&#39; },\n    content: &#39;Home&#39;\n}\n</code></pre><p>JavaScript-код блока реализован так, что активный пункт меню переключается при клике левой кнопкой мыши на соответствующем элементе <code>item-selector</code>.</p>\n\n<p>Использование блока с модификатором <code>{ layout: &#39;complex&#39; }</code> принципиально ничем не отличается.<br>Для блока в такой модификации создаётся разметка на основе таблицы. Такое решение может потребоваться при некоторых дизайнах.</p>\n\n<p>Входные данные для блока с любым из этих модификаторов похожи: нужно описать блок, модификатор <code>layout</code>, в качестве свойства <code>content</code> блока перечислить пункты меню, которые выражаются элементами <code>item</code>:</p>\n<pre><code class=\"lang-js\">{\n  block: &#39;b-menu-horiz&#39;,\n  mods: { layout: &#39;normal&#39; },\n  content: [\n    {\n      elem: &#39;item&#39;,\n      content: &#39;Home&#39;\n    },\n    {\n      elem: &#39;item&#39;,\n      content: &#39;Office&#39;\n    },\n    ...\n  ]\n}\n</code></pre>\n<p>Содержанием элементов меню может быть что угодно: ссылки на страницы, псевдоссылки, иконки и вообще любые блоки. В примере выше каждый пункт меню — это просто строка текста.</p>\n<p>Такое же меню со ссылками будет выглядеть следующим образом:</p>\n<pre><code class=\"lang-js\">{\n  block: &#39;b-menu-horiz&#39;,\n  mods: { layout: &#39;normal&#39; },\n  content: [\n    {\n      elem: &#39;item&#39;,\n      content: {\n        block: &#39;b-link&#39;, url: &#39;/&#39;, content: &#39;Home&#39;\n      }\n    },\n    {\n      elem: &#39;item&#39;,\n      content: {\n        block: &#39;b-link&#39;, url: &#39;/office&#39;, content: &#39;Office&#39;\n      }\n    },\n    ...\n  ]\n}\n</code></pre>\n<p>Кроме того, у одного из пунктов меню может быть указан модификатор <code>{ state: &#39;current&#39; }</code>, этот модификатор помечает текущий пункт меню.</p>\n<p>На своём уровне переопределения можно реализовать для такого модификатора <strong>CSS</strong> правила, по которым текущий пункт меню будет визуально отличаться от остальных.</p>\n<p>У меню также может быть необязательное свойство <code>title</code>, содержащее описание элемента <code>title</code> — заголовка меню.</p>\n<p>Для меню с заголовком <strong>BEMJSON</strong> будет такой:</p>\n<pre><code class=\"lang-js\">{\n  block: &#39;b-menu-horiz&#39;,\n  mods: { layout: &#39;normal&#39; },\n  title: {\n    elem: &#39;title&#39;, content: &#39;Navigation:&#39;\n  },\n  content: [\n    {\n      elem: &#39;item&#39;,\n      elemMods: { state: &#39;current&#39; },\n      content: {\n        block: &#39;b-link&#39;, url: &#39;/&#39;, content: &#39;Home&#39;\n      }\n    },\n    {\n      elem: &#39;item&#39;,\n      content: {\n        block: &#39;b-link&#39;, url: &#39;/office&#39;, content: &#39;Office&#39;\n      }\n    },\n    ...\n  ]\n}\n</code></pre>\n<h4 id=\"-\">Горизонтальное меню с клиентской функциональностью</h4>\n<p>Не всегда меню на сайте подразумевает ссылки, уводящие пользователя на другую страницу. Меню может использоваться и для клиентского <strong>JavaScript</strong>-приложения.\nВ этом случае содержанием пунктов меню обычно бывают псевдоссылки:</p>\n<pre><code class=\"lang-js\">{\n  block: &#39;b-menu-horiz&#39;,\n  mods: { layout: &#39;normal&#39; },\n  title: {\n    elem: &#39;title&#39;, content: &#39;Navigation:&#39;\n  },\n  content: [\n    {\n      elem: &#39;item&#39;,\n      elemMods: { state: &#39;current&#39; },\n      content: {\n        block: &#39;b-link&#39;,\n        mods: { pseudo: &#39;yes&#39; },\n        url: &#39;/&#39;,\n        content: &#39;Home&#39;\n      }\n    },\n    {\n      elem: &#39;item&#39;,\n      content: {\n        block: &#39;b-link&#39;,\n        mods: { pseudo: &#39;yes&#39; },\n        url: &#39;/office&#39;,\n        content: &#39;Office&#39;\n      }\n    },\n    ...\n  ]\n}\n</code></pre>\n<p>Приведённый выше <strong>BEMJSON</strong> блока обеспечит нужный внешний вид.</p>\n<p>Кроме этого нужно, чтобы у меню были области, реагирующие на клик. В данном случае они совпадают с псевдоссылками, поэтому можно применить смешивание блоков (<code>mix</code>):</p>\n<pre><code class=\"lang-js\">{\n  block: &#39;b-menu-horiz&#39;,\n  mods: { layout: &#39;normal&#39; },\n  title: {\n    elem: &#39;title&#39;, content: &#39;Navigation:&#39;\n  },\n  content: [\n    {\n      elem: &#39;item&#39;,\n      elemMods: { state: &#39;current&#39; },\n      content: {\n        block: &#39;b-link&#39;,\n        mods: { pseudo: &#39;yes&#39; },\n        mix: [{ block: &#39;b-menu-horiz&#39;, elem : &#39;item-selector&#39; }],\n        url: &#39;/&#39;,\n        content: &#39;Home&#39;\n      }\n    },\n    {\n      elem: &#39;item&#39;,\n      content: {\n        block: &#39;b-link&#39;,\n        mods: { pseudo: &#39;yes&#39; },\n        mix: [{ block: &#39;b-menu-horiz&#39;, elem : &#39;item-selector&#39; }],\n        url: &#39;/office&#39;,\n        content: &#39;Office&#39;\n      }\n    },\n    ...\n  ]\n}\n</code></pre>\n<p><strong>JavaScript</strong>-код блока реализован так, что активный пункт меню переключается при клике левой кнопкой мыши на соответствующем элементе <code>item-selector</code>.</p>\n<p>При явном использовании этот элемент представлен в <strong>DOM</strong> в виде <code>span</code>, в который можно положить блоки, составляющие пункт меню. Если же содержание пункта меню состоит всего из\nодного блока (как в примере с псевдоссылками), для экономии разметки разумно применять <code>mix</code>.</p>\n<p>Кроме того, что соответствующий элемент <code>item</code> в результате клика приобретает модификатор <code>{ state: &#39;current&#39; }</code>, на <strong>BEM</strong>-объекте блока возникает событие <code>current</code>, сопровождающееся данными о текущем и предыдущем активных пунктах.\nВ своём <strong>JavaScript</strong>-приложении можно реагировать на это событие.</p>\n<p>В <strong>HTML</strong> по умолчанию блок представлен как имеющий <strong>JavaScript</strong>-реализацию (он смешан с блоком <code>i-bem</code> и\nимеет соответствующие параметры в атрибуте <code>data-bem</code>). Но если в блоке отсутствуют элементы <code>item-selector</code>, <strong>BEM</strong>-объект блока не создаётся.</p>\n<h4 id=\"-i-bem\">Меню без подмешивания блока i-bem</h4>\n<pre><code class=\"lang-js\">{\n  block: &#39;b-menu-horiz&#39;,\n  js: false,\n  mods: { layout: &#39;normal&#39; },\n  content: [\n    {\n      elem: &#39;item&#39;,\n      content: {\n        block: &#39;b-link&#39;, url: &#39;/&#39;, content: &#39;Home&#39;\n      }\n    },\n    {\n      elem: &#39;item&#39;,\n      content: {\n        block: &#39;b-link&#39;, url: &#39;/office&#39;, content: &#39;Office&#39;\n      }\n    },\n    ...\n  ]\n}\n</code></pre>\n<p>Примешивание блока <code>i-bem</code> можно устранить, указав в свойстве <code>js</code> блока значение <code>false</code>.</p>\n\n<p>В некоторых случаях для вывода меню не нужны даже <strong>DOM</strong>-узлы списка, а достаточно просто перечислить ссылки, разделив их пробелом, запятой или каким-либо специальным символом.</p>\n<p>Для вывода такого меню подходит реализация с модификатором <code>{ layout: &#39;normal&#39; }</code>:</p>\n<pre><code class=\"lang-js\">{\n  block: &#39;b-menu-horiz&#39;,\n  mods: { layout: &#39;simple&#39; },\n  separator: &#39; | &#39;,\n  content: [\n    {\n      elem: &#39;item&#39;,\n      elemMods: { state: &#39;current&#39; },\n      content: &#39;Home&#39;\n    },\n    {\n      elem: &#39;item&#39;,\n      content: {\n      block: &#39;b-link&#39;,\n      url: &#39;/&#39;,\n      content: &#39;Products&#39;\n    },\n    ...\n  ]\n}\n</code></pre>\n<p><strong>BEMJSON</strong>-меню отличается наличием свойства <code>separator</code> — того самого специального символа, который разделяет пункты меню.</p>\n<p>Активный пункт меню в данном примере представлен в виде простого текста в теге <code>span</code>.</p>\n"}]},"en":{"name":"b-menu-horiz","examples":[{"content":[{"url":"desktop.examples/b-menu-horiz/05-b-menu-horiz-simple/05-b-menu-horiz-simple.en"},{"url":"desktop.examples/b-menu-horiz/10-b-menu-horiz-normal/10-b-menu-horiz-normal.en"},{"url":"desktop.examples/b-menu-horiz/20-b-menu-horiz-complex/20-b-menu-horiz-complex.en"},{"url":"desktop.examples/b-menu-horiz/30-b-menu-horiz-normal-js/30-b-menu-horiz-normal-js.en"}]}],"description":[{"content":"<p>A <strong>b-menu-horiz</strong> block provides a horizontal menu. The block also has functionality (implemented on JavaScript) that helps to write scripts with reaction on a menu item when becoming selected.</p>\n<p>HTML markup complexity depends on a block modifier.</p>\n<p>The block has a <code>layout</code> modifier with three following values:</p>\n<ul>\n<li><code>horiz</code></li>\n<li><code>complex</code></li>\n<li><code>normal</code></li>\n</ul>\n<p><strong>Attention</strong>: This block cannot be used without a <code>layout</code> modifier.</p>\n"}]}}
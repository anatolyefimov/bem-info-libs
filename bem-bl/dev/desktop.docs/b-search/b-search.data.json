{"ru":{"name":"b-search","examples":[{"content":[{"url":"desktop.examples/b-search/10-b-search/10-b-search.ru"},{"url":"desktop.examples/b-search/20-b-search-under/20-b-search-under.ru"}]}],"description":[{"content":"<h2 id=\"-\">Описание</h2>\n<p>Поисковая форма, содержащая поле ввода (элемент <code>input</code>) и кнопку (элемент <code>button</code>). Элементы <code>input</code> и <code>button</code> являются обязательными.</p>\n<p>Блок <code>b-search</code>, преобразуется в тег <code>&lt;form&gt;</code>, внутри которого лежит <code>[элемент layout](#__layout)</code>,\nотвечающий за раскладку блока.</p>\n<p>Если есть необходимость добавить атрибуты элементам блока или самому блоку, достаточно в <strong>BEMJSON</strong> описать свойство <code>attrs</code>, и перечислить в нем все необходимые атрибуты.</p>\n<h2 id=\"-\">Объявление блока на странице</h2>\n<pre><code class=\"lang-js\">{\n    block: &#39;b-search&#39;,\n    attrs: { action: &#39;/search.xml&#39; },\n    input: {\n        elem: &#39;input&#39;\n    },\n    button: {\n        elem: &#39;button&#39;\n    },\n    under: {\n        block: &#39;b-link&#39;,\n        url: &#39;/&#39;,\n        content: &#39;Advanced search&#39;\n    }\n}\n</code></pre>\n\n<h2 id=\"-\">Описание</h2>\n<p>Блок <code>b-layout-table</code> — таблица со 100% шириной, для создания раскладки.</p>\n<p>Bemhtml шаблон блока выводит таблицу, строки и ячейки со всеми необходимыми атрибутами.</p>\n<h2 id=\"-\">Элементы блока</h2>\n<p>Имеет опциональные элементы блока: <code>gap</code>, <code>cell</code>, <code>row</code>, <code>inner</code>.</p>\n<p>Ячейки блока могут быть представлены либо елементом <code>cell</code>, либо элементом <code>gap</code>. </p>\n<h3 id=\"__cell\">__cell</h3>\n<p>Предназначен для вложения контента.<br>Преобразуется BEMHTML-шаблоном в тэг <code>&lt;td&gt;</code>.  </p>\n<h3 id=\"__gap\">__gap</h3>\n<p>Пустая ячейка, служит распоркой.<br>Преобразуется BEMHTML-шаблоном в тэг <code>&lt;td&gt;</code>. </p>\n<h3 id=\"__row\">__row</h3>\n<p>Служит для обозначения строк в раскладке таблицы.<br>Преобразуется BEMHTML-шаблоном в тэг <code>&lt;tr&gt;</code>.  </p>\n<h3 id=\"__inner\">__inner</h3>\n<p>Оборачивает контент ячеек, что позволяет задать отступы.<br>В HTML преобразуется тегом <code>&lt;div&gt;</code> с классом <code>b-layout-table</code>.</p>\n<h2 id=\"-\">Объявление блока на странице</h2>\n<p>BEMJSON для использования блока:</p>\n<pre><code>{\n    block: &#39;b-layout-table&#39;,  // имя блока   \n    mods: { layout: &#39;58-40&#39;}, // модификаторы блока. Модификатор необязательный\n    content: [                // структура страницы\n        {\n            elem: &#39;row&#39;,   \n            content: [\n                {\n                    elem: &#39;gap&#39;,\n                    rowspan: &#39;2&#39;\n                },\n                {\n                    elem: &#39;cell&#39;,\n                    content: {\n                        elem: &#39;inner&#39;,\n                        content: &#39;Left cell&#39;\n                    }\n                },\n                {\n                    elem: &#39;cell&#39;,\n                    elemMods: { position: &#39;r&#39;},\n                    content: &#39;Right cell&#39;\n                }\n            ]\n        },\n        {\n            elem: &#39;row&#39;,\n            content: [\n                {\n                    elem: &#39;cell&#39;,\n                    colspan: &#39;2&#39;,\n                    content: &#39;Second row and one cell&#39;\n                }\n            ]\n        }\n    ]\n}\n</code></pre><p>Представление блока в HTML, после BEMHTML-преобразования:</p>\n<pre><code>    &lt;table class=&quot;b-layout-table b-layout-table_layout_58-40&quot;&gt;\n        &lt;tr class=&quot;b-layout-table__row&quot;&gt;\n            &lt;td class=&quot;b-layout-table__gap&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;\n            &lt;td class=&quot;b-layout-table__cell&quot;&gt;\n                &lt;div class=&quot;b-layout-table__inner&quot;&gt;Left cell&lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td class=&quot;b-layout-table__cell b-layout-table__cell_position_r&quot;&gt;Right cell&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr class=&quot;b-layout-table__row&quot;&gt;\n            &lt;td class=&quot;b-layout-table__cell&quot; colspan=&quot;2&quot;&gt;Second row and one cell&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n</code></pre><p>По умолчанию значения ширины ячеек в блоке не задаются. Доопределить блок стилями можно следующим образом:  </p>\n<ul>\n<li>добавляем модификатор блоку — <code>mods: { layout: &#39;58-40&#39; }</code>;  </li>\n<li>добавляем модификатор ячейке — <code>elemMods: { position: &#39;r&#39; }</code>;   </li>\n<li>оборачиваем контент ячеек, используя элемент <code>inner</code>, что позволяет задать нужные отступы. Далее каскадом задаем нужные  CSS-свойства.</li>\n</ul>\n<p>Вот такой CSS получится к BEMJSON-файлу, приведенному выше: </p>\n<pre><code>.b-layout-table_layout_58-40 .b-layout-table__cell_position_r \n{\n    width: 40%;\n}\n.b-layout-table_layout_58-40 .b-layout-table__gap \n{\n    width: 2%;\n    padding-left: 20px;\n}\n.b-layout-table_layout_58-40 .b-layout-table__inner \n{\n    margin-right: 0.8em;\n}\n</code></pre><p><strong>Важно</strong>\nОбратите внимание, что нельзя задавать самому блоку никаких дополнительных CCS-свойств, это может привести к конфликтам в верстке, так как блок может быть использован в реализации других блоков.<br>Использовать блок нужно, задавая ему модификатор или миксируя его с другим блоком/элементом.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h4 id=\"_layout\">_layout</h4>\n<p>Позволяет задавать размеры таблицы</p>\n\n<p>Элемент <code>layout</code> миксируется с блоком <code>b-layout-table</code> в <strong>BEMHTML</strong>-шаблоне блока <code>b-search</code>.</p>\n<p>Свойства <code>input</code>, <code>button</code>, <code>under</code>, представляют собой элементы для раскладки <code>[ layout-input, layout-button, layout-under ]</code>, которые миксируются с элементами <code>cell</code> блока <code>b-layout-table</code>, преобразуясь в <strong>HTML</strong> в ячейки таблицы.</p>\n<p>Свойство <code>under</code> добавляет еще одну строку с ячейкой, в нее можно помещать дополнительную информацию. Например, ссылка «Расширенный поиск» под поисковым полем.</p>\n"}]},"en":{"name":"b-search","examples":[{"content":[{"url":"desktop.examples/b-search/10-b-search/10-b-search.en"},{"url":"desktop.examples/b-search/20-b-search-under/20-b-search-under.en"}]}],"description":[{"content":"<p><code>b-layout-table</code> block — is a 100%-width table for making a layout.</p>\n<p>This block has a <code>bemhtml</code> template that gives a table, its rows and cells with all the attribute nodes needed.</p>\n<p>Cells of the block can be either <code>cell</code> or <code>gap</code> elements.\nA <code>cell</code> element is to contain a content and <code>gap</code> element is to set some space betwen cells.</p>\n<p>Let&#39;s look at <strong>bemjson</strong> input data of the block:</p>\n<pre><code class=\"lang-js\">{\n    block: &#39;b-layout-table&#39;,\n    mods: { layout: &#39;58-40&#39;},\n    content: [\n        {\n            elem: &#39;row&#39;,\n            content: [\n                {\n                    elem: &#39;gap&#39;,\n                    rowspan: &#39;2&#39;\n                },\n                {\n                    elem: &#39;cell&#39;,\n                    content: {\n                        elem: &#39;inner&#39;,\n                        content: &#39;Left cell&#39;\n                    }\n                },\n                {\n                    elem: &#39;cell&#39;,\n                    elemMods: { position: &#39;r&#39;},\n                    content: &#39;Right cell&#39;\n                }\n            ]\n        },\n        {\n            elem: &#39;row&#39;,\n            content: [\n                {\n                    elem: &#39;cell&#39;,\n                    colspan: &#39;2&#39;,\n                    content: &#39;Second row and one cell&#39;\n                }\n            ]\n        }\n    ]\n}\n</code></pre>\n<p>There is no width for cells by default.</p>\n<p>You can extend a block by your own CSS rules. For example, set a layout modifier to your block <code>mods: { layout: &#39;58-40&#39;}</code>, set a position modifier to right cell <code>elemMods: { position: &#39;r&#39;}</code>.\nWrap cells&#39; content by <strong>inner</strong> element to be able to set some paddings. Then, set CSS rules you\nneed (via cascade):</p>\n<p>This are CSS rules for the example above:</p>\n<pre><code class=\"lang-css\">.b-layout-table_layout_58-40 .b-layout-table__cell_position_r\n{\n    width: 40%;\n}\n\n.b-layout-table_layout_58-40 .b-layout-table__gap\n{\n    width: 2%;\n    padding-left: 20px;\n}\n\n.b-layout-table_layout_58-40 .b-layout-table__inner\n{\n    margin-right: 0.8em;\n}\n</code></pre>\n<p>Draw your attention that you shouldn&#39;t set any CSS to the block itself.\nThis is important to avoid CSS conflicts, because this block may be used as a part of many others.\nSo, use modifiers or mix with other blocks when using <code>b-layout-table</code>.</p>\n"}]}}
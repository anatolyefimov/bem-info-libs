{"ru":{"name":"select","examples":[{"url":"touch-pad.tests/select/gemini"},{"url":"touch-pad.tests/select/simple"}],"description":"<h1 id=\"select\">select</h1>\n<p>Блок <code>select</code> («селект») – раскрывающийся список выбора. Реализация блока основана на блоках <code>button</code>, <code>popup</code>, <code>menu</code> и <code>menu-item</code>. Визуально представлен кнопкой и выпадающим списком с элементами меню. Щелчок по кнопке раскрывает выпадающий список под или над кнопкой в зависимости от ее положения на странице (<code>{ directions : [&#39;bottom-left&#39;, &#39;bottom-right&#39;, &#39;top-left&#39;, &#39;top-right&#39;] }</code>). Щелчок вне зоны попапа автоматически скрывает его (<code>{ autoclosable : true }</code>).</p>\n<p>Раскрывающийся список имеет всего один уровень вложенности и позволяет выбрать:</p>\n<ul>\n<li>только один элемент из списка (<code>select_mode_radio</code>);</li>\n<li>один, несколько или ни одного элемента из списка (<code>select_mode_check</code>);</li>\n<li>один или ни одного элемента из списка (<code>select_mode_radio-check</code>).</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON-блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает имя выпадающего списка.</td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает уникальный идентификатор селекта.</td>\n    </tr>\n    <tr>\n        <td>options</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Задает массив пунктов списка. Каждый пункт имеет обязательный атрибут <code>val</code>, реализованный скрытым элементом <code>control</code>.</td>\n    </tr>\n    <tr>\n        <td>textMaxWidth</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Устанавливает максимальную ширину кнопки селекта. Ширина раскрывающегося списка при этом вычисляется в зависимости от ширины пунктов.</td>\n    </tr>\n    <tr>\n        <td>optionsMaxHeight</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Устанавливает максимальную высоту выпадающего списка.<br>Если все пункты списка не вмещаются, появляется скролл.<br> Если значение не указано, высота выпадающего списка по умолчанию будет вычисляться в зависимости от количества пунктов.</td>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение раскрывающегося списка выбора в случае, если ни один из пунктов не отмечен.<br> Применяется только для селектов с установленным модификатором <code>mode</code> в значении <code>check</code> или <code>radio-check</code>.</td>\n    </tr>\n</table>\n\n<p>Другие допустимые атрибуты блока могут задаваться в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Если модификатор темы не указан, отображается кастомная реализация контрола без применения стилей.</p>\n<p>Наглядно показано на примерах ниже:</p>\n<!-- bem-example: touch-pad.examples/select/KnPV22VFNtI4S-O8Wpqq1LxdReY -->\n\n<p><strong>simple</strong></p>\n<!-- bem-example: touch-pad.examples/select/Cm3ZrvxjfRMKNGE1uZyeeDtczwo -->\n\n<p><strong>normal</strong></p>\n<!-- bem-example: touch-pad.examples/select/walnTtaHw3moIy8I9-6eOB25lMw -->\n\n<h3 id=\"-_mode-\">Типы <code>_mode</code></h3>\n<p>Обязательный модификатор.</p>\n<p>Блок представлен следующими типами:</p>\n<ul>\n<li>селект с множественным выбором, который позволяет оставить список без выбранных элементов (<code>select_mode_check</code>). При щелчке мышью по пункту списка, его состояние меняется на противоположное. Если пункт был активен – он деактивируется, и наоборот.</li>\n</ul>\n<!-- bem-example: touch-pad.examples/select/hpUbeKC_5hYtmemMemDzuUiqED8 -->\n\n<ul>\n<li>меню-переключатель (<code>select_mode_radio</code>). Применяется для создания селектов, позволяющих только одиночный выбор.\nДля этого типа селекта текст в кнопке устанавливается в зависимости от выбранного элемента. Если элемент не выбран, то по умолчанию выбирается первый пункт из списка.</li>\n</ul>\n<!-- bem-example: touch-pad.examples/select/zeJPZbtVz42oYU7GxOeTA7fv-ag -->\n\n<ul>\n<li>селект с одиночным выбором, который позволяет оставить список без выбранных элементов (<code>select_mode_radio-check</code>). При щелчке мышью по пункту списка, его состояние меняется на противоположное. Если пункт был активен – он деактивируется, и наоборот.</li>\n</ul>\n<!-- bem-example: touch-pad.examples/select/ilW6j3BEgfKcwzfrYVtoANn-atA -->\n\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<h4 id=\"-_width-\">Ширина кнопки селекта <code>_width</code></h4>\n<p>Модификатор <code>width</code> в значении <code>available</code> растягивает кнопку селекта по ширине в зависимости от длины выбранного пункта.</p>\n<!-- bem-example: touch-pad.examples/select/JkxdmzpYd197HKLlAB6yPUU4Vgg -->\n\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"-__button-\">Кнопка <code>__button</code></h3>\n<p>Селект визуально представлен кнопкой (элемент <code>button</code>), которая содержит иконку <code>&lt;i&gt;</code>, реализованную блоком <a href=\"../icon/icon.ru.md\">icon</a> с примиксованным элементом <code>tick</code>. Так как иконка является частью кнопки селекта, ее размер устанавливается размером кнопки. Щелчок по кнопке раскрывает список выбора.</p>\n<p>Так как селект реализован с помощью блока <a href=\"../button/button.ru.md\">button</a>, ему можно задавать следующие модификаторы:</p>\n<ul>\n<li><code>theme</code></li>\n<li><code>size</code></li>\n<li><code>focused</code></li>\n<li><code>checked</code></li>\n<li><code>disabled</code></li>\n</ul>\n<h2 id=\"-__control-\">Контрол <code>__control</code></h2>\n<p>Вспомогательный скрытый элемент, который отвечает за формирование элементов списка выбора.</p>\n<h2 id=\"-__menu-\">Меню <code>__menu</code></h2>\n<p>Элемент <code>menu</code> позволяет управлять пунктами списка выбора:</p>\n<ul>\n<li><code>val</code> – значение, возвращаемое пунктом из списка, если он выбран. Обязательный атрибут. Может содержать уникальный идентификатор <code>{ val : { id : 1 } }</code>.</li>\n<li><code>text</code> – название пункта в списке.</li>\n<li><code>checked</code> – присваивается пункту из списка, если он выбран. <code>{ checked : true }</code> – пункт выбран.</li>\n<li><code>checkedText</code> – задает значение, отображаемое в кнопке селекта, для выбранного пункта. Задается только для блока <code>select</code> с модификатором <code>mode</code> в значении <code>check</code>.</li>\n<li><code>icon</code> – графический элемент (иконка)</li>\n</ul>\n<!-- bem-example: touch-pad.examples/select/TUaceOlKTkiAy0Ojt7LQba4Yc_A -->\n\n<p>Элементы списка могут быть объединены в группы. Для группировки пунктов выбора служит элемент <code>group</code>, в который вкладываются необходимые элементы списка. Название группы задается через атрибут <code>title</code>.</p>\n<!-- bem-example: touch-pad.examples/select/CAWbbXgQYp4XtKAtpvG9UGnGOFU -->\n\n<h1 id=\"button\">button</h1>\n<p>Блок <code>button</code> используется для создания различных типов кнопок и предоставляет возможность изменять их размер, состояние, содержимое и внешний вид.</p>\n<h2 id=\"-\">Варианты использования кнопок</h2>\n<ul>\n<li>Обычная кнопка – применяется для любых кнопок веб-интерфейса. Используется по умолчанию.</li>\n<li>Кнопка-ссылка – применяется для перехода по ссылке. Задается модификатором <code>type</code> со значением <code>link</code>.</li>\n<li>Кнопка отправки формы – предназначена для отправки данных формы на сервер (submit). Задается модификатором <code>type</code> со значением <code>submit</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает текст кнопки.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code></td>\n        <td>Кнопка с иконкой, которая формируется блоком <code>icon</code>.</td>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Адрес ссылки. Применяется только при наличии модификатора блока <code>button_type_link</code>. Кнопка становится ссылкой, а значение <code>url</code> – атрибутом <code>href</code>.</td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Уникальный идентификатор кнопки.</td>\n    </tr>\n    <tr>\n        <td>tabindex</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Определяет последовательность перехода между кнопками при нажатии на <code>Tab</code>.</td>\n    </tr>\n    <tr>\n        <td>value</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Значение, отправляемое на сервер. По умолчанию пустое.</td>\n    </tr>\n</table>\n\n<p>Другие допустимые атрибуты блока могут задаваться в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно показано на примерах ниже:</p>\n<p><strong>default</strong></p>\n<!-- bem-example: touch-pad.examples/select/pxTNfkqsHxpJmDhwS0QK2QBs3ZY -->\n\n<p><strong>simple</strong></p>\n<!-- bem-example: touch-pad.examples/select/KtCevfKa_rzm7MTQMzA65Z0ZREU -->\n\n<p><strong>normal</strong></p>\n<!-- bem-example: touch-pad.examples/select/Rb77AVqNcSM2UUBxbCkUkHULKWc -->\n\n<h3 id=\"-_size-\">Размеры кнопок <code>_size</code></h3>\n<p>Обязательный модификатор. Задает размер всем типам кнопок.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>кнопки</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота<br>кнопки</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39; },\n    text : &#39;Small&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Medium&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    text : &#39;Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39; },\n    text : &#39;X-large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Типы кнопок <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки-ссылки (<code>_type_link</code>) и кнопки отправки формы (<code>_type_submit</code>).\nВ случак кнопки-ссылки, дополнительно во входных данных необходимо указать обязательный атрибут <code>url</code>. В таком случае кнопка получает тег <code>&lt;a&gt;</code>, а значение <code>url</code> становится атрибутом <code>href</code>.</p>\n<p><strong>Кнопка-ссылка</strong></p>\n<!-- bem-example: touch-pad.examples/select/El0pc_bZgByjhimDRiJmaUa0ubw -->\n\n<p><strong>Кнопка отправки формы</strong></p>\n<!-- bem-example: touch-pad.examples/select/gtF_RY9_ivjSx1sADQLwlLOSzmo -->\n\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_disabled-\">Неактивна <code>_disabled</code></h4>\n<p>В состоянии «неактивна» кнопка видна, но недоступна для действий пользователя.</p>\n<p>Такая кнопка не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<!-- bem-example: touch-pad.examples/select/VrNTsucLZEWlatBulG8rqd0wHxQ -->\n\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>focused</code> со значением <code>true</code> кнопка всегда находится в фокусе. Нажатие по ней можно выполнить клавишей <code>Space</code> или <code>Enter</code>.</p>\n<!-- bem-example: touch-pad.examples/select/ByAZ1dHx4rZKUf9zbxuHmfOmGNs -->\n\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие «наведение курсором» на кнопку.</p>\n<h4 id=\"-_pressed-\">Нажатие <code>_pressed</code></h4>\n<p>Определяет состояние «нажатие на кнопку» (действие).</p>\n<h4 id=\"-_togglable-\">Залипание <code>_togglable</code></h4>\n<p>Позволяет реализовать залипание кнопки. Допустимые значения: <code>check</code> и <code>radio</code>.</p>\n<!-- bem-example: touch-pad.examples/select/NYbJzppv5-r9T8LQ0_-SaNLJWds -->\n\n<h4 id=\"-_action-\">Визуальное выделение <code>_action</code></h4>\n<p>Визуально выделяет кнопку на странице.</p>\n<!-- bem-example: touch-pad.examples/select/X1_VUgD2DCMkTeRUN6Vd4diR7Yk -->\n\n<h4 id=\"-_pseudo-\">Псевдокнопка <code>_pseudo</code></h4>\n<p>При выборе модификатора <code>pseudo</code> со значением <code>true</code>, кнопка получает прозрачный фон.</p>\n<!-- bem-example: touch-pad.examples/select/h_ijyu_mqbPaJBB22OxZERaFyZA -->\n\n<p>В неактивном состоянии границы псевдокнопки исчезают и она сливается со страницей.</p>\n<!-- bem-example: touch-pad.examples/select/igxPz7KCvCVG6TTxlXRYzE2_5pI -->\n\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"__text\">__text</h3>\n<p>Технический элемент. Обрамляет текст кнопки.\nНужен для позиционирования текста внутри кнопки, в том числе для случаев использования вместе с иконкой.</p>\n<!-- bem-example: touch-pad.examples/select/RQ8YcvhxhqjSwO3I3VjLBOanRns -->\n\n<h1 id=\"control\">control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"../attach/attach.ru.md\">attach</a></li>\n<li><a href=\"../button/button.ru.md\">button</a></li>\n<li><a href=\"../checkbox/checkbox.ru.md\">checkbox</a></li>\n<li><a href=\"../input/input.ru.md\">input</a></li>\n<li><a href=\"../link/link.ru.md\">link</a></li>\n<li><a href=\"../menu/menu.ru.md\">menu</a></li>\n<li><a href=\"../radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n\n<h1 id=\"menu\">menu</h1>\n<p>Блок <code>menu</code> используется для создания различных типов меню и селектов.</p>\n<p>Он предоставляет возможность изменять размер и внешний вид блоков меню, управлять поведением вложенных блоков – пунктов меню или селекта.</p>\n<p>В результате BEMHTML-преобразований на странице блок становится HTML-элементом с тегом <code>&lt;div&gt;</code> и свойством <code>role=&quot;menu&quot;</code>. HTML-элементом, содащим набор переключателей – пунктов меню (блок <code>menu-item</code>).</p>\n<h2 id=\"-\">Варианты использования меню</h2>\n<p>Блок <code>menu</code> служит для создания различных типов меню:</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Описание</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Меню-переключатель</td>\n        <td>Применяется для создания меню или селектов, позволяющих только одиночный выбор.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;, \n        mode : &#39;radio&#39;\n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Селект с множественным выбором (<code>_mode_check</code>)</td>\n        <td>При щелчке мышью по пункту меню его состояние меняется на противоположное. Если пункт был активен – он деактивируется и наоборот.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;,\n        mode : &#39;check&#39;\n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n<tr>\n        <td>Простой список (без модификатора <code>_mode</code>)</td>\n        <td>При щелчке мышью по пункту меню его состояние не меняется. Модификатор <code>_cheked</code> не устанавливается.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;,\n        mode : &#39;check&#39;\n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr><br></table>\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения, установленные браузером по умолчанию (<em>default</em>).</p>\n<p>Наглядно показано на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<!-- bem-example: touch-pad.examples/select/vAAUvyJpkNyuM0yEru7LP3dZ7xE -->\n\n\n<h4 id=\"simple\">simple</h4>\n<!-- bem-example: touch-pad.examples/select/JgK_lg3CEjumbM6ThTKEOcNpfH0 -->\n\n\n<h4 id=\"normal\">normal</h4>\n<!-- bem-example: touch-pad.examples/select/MGiZ5_2bYS32yaxnY5iD9OevjVk -->\n\n\n<h3 id=\"-_size-\">Размеры меню <code>_size</code></h3>\n<p>Задает размер всем типам меню. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер/Параметры</th>\n        <th>Размер шрифта</th>\n        <th>Высота строки <code>line-heigh</code></th>\n        <th>Левый отступ <code>padding-left</code></th>\n        <th>Отступ <code>padding</code></th>\n        <th>Размер &quot;галочки&quot; для темы normal</code></th>\n    </tr>\n    <tr>\n        <td>s</td>\n        <td>13px</td>\n        <td>24px</td>\n        <td>30px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        mode : &#39;check&#39;,\n        size : &#39;s&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>m</td>\n        <td>13px</td>\n        <td>24px</td>\n        <td>30px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        mode : &#39;check&#39;,\n        size : &#39;m&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>l</td>\n        <td>15px</td>\n        <td>28px</td>\n        <td>34px</td>\n        <td>15px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        mode : &#39;check&#39;,\n        size : &#39;l&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>xl</td>\n        <td>15px</td>\n        <td>32px</td>\n        <td>40px</td>\n        <td>15px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        mode : &#39;check&#39;,\n        size : &#39;xl&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-_mode-\">Способ выбора пунктов <code>_mode</code></h3>\n<p>Модификатор <code>_mode</code> управляет поведением пунктов меню при щелчке по ним мышью, например, возможностью множественного выбора пунктов меню.</p>\n<p>Доступны следующие значения модификатора:</p>\n<ul>\n<li><code>check</code> – селект. Пункт, по которому был произведен щелчек мышью, изменит состояние на противоположное и будет менять состояние при повторных щелчках. Доступна возможность множественного выбора пунктов;</li>\n<li><code>radio</code> – переключатель. При щелчке мышью будет производиться переключение активных пунктов меню. При повторном щелчке пункт, по которому он был произведен, останется <strong>активным</strong>. Множественный выбор недоступен;</li>\n<li><code>radio-check</code> – переключатель. При щелчке мышью будет производиться переключение активных пунктов меню. При повторном щелчке пункт, по которому он был произведен, станет <strong>неактивным</strong>. Множественный выбор недоступен.</li>\n</ul>\n<p>Реализован во всех темах блока.</p>\n<table>\n    <tr>\n        <th>Выбор пунктов</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Только один (<code>_mode_radio</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        mode : &#39;radio&#39;\n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            mods : { checked : true },\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Множественный выбор или ни одного (<code>_mode_check</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        mode : &#39;check&#39;\n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            mods : { checked : true },\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Один или ни одного (<code>_mode_radio-check</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        mode : &#39;radio-check&#39;\n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            mods : { checked : true },\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<p>Реализован во всех темах блока.</p>\n<!-- bem-example: touch-pad.examples/select/lFNP7KamARohsQ5DCX0QQZU1ACQ -->\n\n\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__group\">__group</h3>\n<p>Элемент <code>__group</code> служит для группировки пунктов меню. Пункты, которые нужно сгруппировать, помещаются в поле <code>content</code> элемента. Группы визуально отделяются серой чертой.</p>\n<p>Например:</p>\n<!-- bem-example: touch-pad.examples/select/WSrgcU6mXH0StKcrKnckCnH3lrc -->\n\n\n<h3 id=\"__group-title\">__group-title</h3>\n<p>Элемент позволяет задать заголовок для группы пунктов меню, создаваемой с помощью элемента <code>__group</code>.</p>\n<p>Например:</p>\n<!-- bem-example: touch-pad.examples/select/yGGZayW6DClbboVCxBRriqv3YcU -->\n\n\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>menu</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>menu-item</code></li>\n<li><code>dom</code></li>\n<li><code>keyboard</code></li>\n<li><code>control</code></li>\n</ul>\n\n<h1 id=\"menu-item\">menu-item</h1>\n<p>Блок <code>menu-item</code> служит для создания пунктов меню или селекта. Используется внутри блока <code>menu</code>. Блок <code>menu-item</code> предоставляет возможность изменять состояние, содержимое и тип пунктов меню.</p>\n<p>Блок <code>menu-item</code> в результате BEMHTML-преобразований на странице становится HTML-элементом с тегом <code>&lt;div&gt;</code> со свойством <code>role=&quot;menuitem&quot;</code>.</p>\n<h2 id=\"-\">Варианты использования пунктов меню</h2>\n<p>Блок <code>menu-item</code> служит для создания различных типов пунктов меню:</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Описание</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Переключатель</td>\n        <td>Применяется для любых выпадающих списков, табов, пунктов меню и селектов и т.п. Используется по умолчанию.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    val : 1,\n    content : &#39;Selector value&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Ссылка</td>\n        <td>Элемент меню со ссылкой. Блок <code>link</code> помещается в поле <code>content</code> BEMJSON-декларации блока. Так же требуется установить блоку модификатор <code>type</code> в значение <code>link</code>.\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    mods : { type : &#39;link&#39; },\n    val : 2,\n    content : {\n        block : &#39;link&#39;,\n        url : &#39;#&#39;,\n        content : &#39;Link 1&#39;\n    }\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td><code>String|Number</code></td>\n        <td>Значение, возвращаемое пунктом меню, если он выбран.</td>\n    </tr>\n</table>\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<ul>\n<li>simple   </li>\n<li>normal  </li>\n</ul>\n<p>Без указания темы к блоку применяются значения, установленные браузером по умолчанию (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<!-- bem-example: touch-pad.examples/select/eV0q9qK02nCPsMxztjMtbDnRz7U -->\n\n\n<h4 id=\"simple\">simple</h4>\n<!-- bem-example: touch-pad.examples/select/BxhdTuPatcCVRdT_1B8cW6OHGQ0 -->\n\n\n<h4 id=\"normal\">normal</h4>\n<!-- bem-example: touch-pad.examples/select/snjxOm4SOT8_nFgCXdf2BKaL_Xs -->\n\n\n<h3 id=\"-_type-\">Типы блока <code>_type</code></h3>\n<p>Модификатор <code>_type</code> в значении <code>_link</code> позволяет создавать пункт меню-ссылку. Блок <code>link</code> при этом помещается в поле <code>content</code> BEMJSON-декларации блока. Если модификатор <code>_type_link</code> не установлен, вложенная ссылка будет доступна для действий пользователя при установленном модификаторе <code>_disabled</code>.</p>\n<p>Реализован во всех темах блока.</p>\n<!-- bem-example: touch-pad.examples/select/47lHiiyDspaBs5AiC22G42Y-N_o -->\n\n\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии &quot;неактивен&quot; пункт меню отображается, но недоступен для действий пользователя.  </p>\n<p>Такой пункт меню не изменяет состояние при щелчке мышью. Если для блока установлен модификатор <code>_type_link</code>, переход по ссылке не осуществляется. </p>\n<p>Реализован во всех темах блока.</p>\n<!-- bem-example: touch-pad.examples/select/00ejmLqt61w5ksAsfBl7KgE4dBE -->\n\n\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие &quot;наведение курсором&quot; на пункт меню.</p>\n<p>Реализован во всех темах блока.</p>\n<p>Автоматически выставляется при наведении указателем мыши на пункт меню.</p>\n<!-- bem-example: touch-pad.examples/select/Sgw4iIN4STar-QE05xyBmgntftw -->\n\n\n<h4 id=\"-_checked-\">Выбранный пункт меню <code>_checked</code></h4>\n<p>Модификатор задает выбранный пункт меню.</p>\n<!-- bem-example: touch-pad.examples/select/T77G-B0x1-Z9ZaPqpW_TAskNFI8 -->\n\n\n<p>В блоке <code>menu</code> модификатор <code>_checked</code> устанавливается для пункта при щелчке мышью:</p>\n<!-- bem-example: touch-pad.examples/select/sURVY49aNm3TBC1XVeOG1Q5_vi8 -->\n\n\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>menu-item</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n</ul>\n\n<h1 id=\"popup\">popup</h1>\n<p>Блок <code>popup</code> используется для создания выпадающих элементов и позволяет изменять их состояние, поведение и внешний вид. Блок отображается поверх остальных элементов страницы.</p>\n<p>Попап может быть вызван различными элементами страницы, например, кнопками или псевдоссылками.</p>\n<p>В момент первого показа (установка модификатора <code>_visible</code>) DOM-элемент блока создается в конце <code>&lt;body&gt;</code>.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<!-- bem-example: touch-pad.examples/select/Uhdsvnf2MsxKNrQy7w6uLKTxdek -->\n\n\n<h4 id=\"simple\">simple</h4>\n<!-- bem-example: touch-pad.examples/select/7PzT7oA6awlAKgFGXccAdhfz0n0 -->\n\n\n<h4 id=\"normal\">normal</h4>\n<!-- bem-example: touch-pad.examples/select/L1MMDUGHLM4djlDaj5mhiKHvDH8 -->\n\n\n<h3 id=\"-_visible-\">Видимый <code>_visible</code></h3>\n<p>Модификатор, отвечающий за видимость блока. При значении модификатора <code>false</code> блок не отображается.</p>\n<!-- bem-example: touch-pad.examples/select/m6WdfiXJP4RkxnBzEuzumr9C4w0 -->\n\n\n<h3 id=\"-_direction-\">Расположение относительно родителя <code>_direction</code></h3>\n<p>Модификатор управляет положением попапа на странице относительно вызвавшего его блока. Расположение блока определяется автоматически, исходя из массива допустимых расположений и положения родителя на странице.</p>\n<p>Выбранное расположение влияет на направление анимации раскрытия.</p>\n<p>По умолчанию используется следующий массив допустимых расположений:</p>\n<table>\n    <tr>\n        <th> Направление раскрытия </td>\n        <th> Индекс в массиве </td>\n    </tr>\n        <td> bottom-left </td>\n        <td> 0 </td>\n    </tr>\n    <tr>\n        <td> bottom-center </td>\n       <td> 1 </td>\n   </tr>\n    <tr>\n        <td> bottom-right</td>\n        <td> 2 </td>\n    </tr>\n    <tr>\n        <td> top-left </td>\n        <td> 3 </td>\n    </tr>\n    <tr>\n        <td> top-center </td>\n        <td> 4 </td>\n    </tr>\n    <tr>\n        <td> top-right </td>\n        <td> 5 </td>\n    </tr>\n    <tr>\n        <td> right-top </td>\n        <td> 6 </td>\n    </tr>\n    <tr>\n        <td> right-center </td>\n        <td> 7 </td>\n    </tr>\n    <tr>\n        <td> right-bottom </td>\n        <td> 8 </td>\n    </tr>\n    <tr>\n        <td> left-top </td>\n        <td> 9 </td>\n    </tr>\n    <tr>\n        <td> left-center </td>\n        <td> 10 </td>\n    </tr>\n    <tr>\n        <td> left-bottom </td>\n        <td> 11 </td>\n    </tr>\n</table>\n\n<p>Чтобы управлять расположением попапа, можно ограничить массив расположений, оставив только требуемые. Пользовательский массив нужно передать в качестве JS-параметра с ключом <code>directions</code>. При этом из значений массива будет выбрано наиболее подходящее, исходя из положения родителя на странице.</p>\n<p>Например, если требуется, чтобы попап раскрывался над родителем:</p>\n<!-- bem-example: touch-pad.examples/select/ROJZHxrl71CFbWiWU5Ry_Q0Jbhw -->\n\n\n<p>Или разместить попап справа по центру:</p>\n<!-- bem-example: touch-pad.examples/select/VE0JWgs-I2gVU8suKC3_eTK29EE -->\n\n\n<h3 id=\"-_autoclosable-\">Автоматическое скрытие <code>_autoclosable</code></h3>\n<p>Модификатор отвечает за автоматическое скрытие попапа при клике вне блока. При установке модификатора <code>_autoclosable</code> в значении <code>_true</code> блок будет скрываться при щелчке за его пределами (будет снят модификатор <code>_visible</code>).</p>\n<!-- bem-example: touch-pad.examples/select/M1T2dIuSVeBoluZEMgCmA90Stgc -->\n\n\n<h2 id=\"-popup-\">Взаимосвязи между popup&#39;ами</h2>\n<p>Так как попап выносит себя в конец <code>&lt;body&gt;</code>, чтобы перекрывать другие элементы страницы, возникает необходимость в построении взаимосвязей. Блок умеет выстраивать связи Parent → [ Child, Child, ... ]. Для этого он выполняет проверку, вложен ли блок, вызывающий попап в другой <code>popup</code>. Потомки знают о наличии родителя.\nЕсли бы этих взаимосвязей не было, то родительский попап (при наличии модификатора <code>autoclosable</code> со значением <code>true</code>) закрылся бы при клике внутри дочернего.</p>\n<p>Другими словами модификатор <code>autoclosable</code> со значением <code>true</code> означает, что попап закроется сам и закроет свои дочерние блоки при клике за пределами его самого и дочерних попапов.</p>\n<p>Дочерние блоки popup можно рассматривать в виде цепочки 1 → 2 → 3 → 4. При клике на втором попапе – закрываются третий и четвертый. При клике в первом – закрываются второй, третий, четвертый. При клике за пределами любого попапа из цепочки – закроются все.</p>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>popup</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n<li><code>objects</code></li>\n<li><code>functions__throttle</code></li>\n<li><code>keyboard</code></li>\n<li><code>ua</code></li>\n<li><code>jquery__event_pointer</code></li>\n</ul>\n"},"en":{"name":"select","examples":[{"url":"touch-pad.tests/select/gemini"},{"url":"touch-pad.tests/select/simple"}],"description":"<h1 id=\"button\">button</h1>\n<p>The <code>button</code> block is used for different types of buttons creation. It allows you to manage size, sate, content and appearance of a button.</p>\n<h2 id=\"button-use-cases\">Button use cases</h2>\n<ul>\n<li>button – is used to create the majority of web inteface buttons. Used by default.</li>\n<li>link-button – a button that provides link functionality. Must have a mandatory modifier <code>type</code> with <code>link</code> value.</li>\n<li>action button – a button designed to send data to the server (submit). Must be always located inside a form. Sets <code>type</code> modifier with <code>submit</code> value in BEMJSON to create an action button.</li>\n</ul>\n<h2 id=\"valid-block-s-attributes\">Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in corresponding fields of block&#39;s BEMJSON file:</p>\n<table>\n    <tr>\n        <th>Attributes</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Text of a button.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Button with an icon provided by an <code>icon</code> block.</td>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>URL address. It is used only if <code>button_type_link</code> modifier is specified. In this case a button\n            acts as a link and <code>url</code> value is represented as a <code>href</code> attribute.\n        </td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Unique identifier of a button.</td>\n    </tr>\n    <tr>\n        <td>tabindex</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Defines tab order between the buttons.</td>\n    </tr>\n    <tr>\n        <td>value</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Value to be sent to a server. It is empty by default.</td>\n    </tr>\n</table>\n\n<p>The other valid block&#39;s attributes could be specified in the <code>attrs</code> field in BEMJSON.</p>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"_theme\">_theme</h3>\n<p>The block supports the following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>If a <code>theme</code> modifier is not specified, the native representation (<em>default</em>) of a control is available.</p>\n<p>Following examples demonstrate this:</p>\n<p><strong>default</strong></p>\n<!-- bem-example: touch-pad.examples/select/b7paW80CenjDPGtPNxSCdPuUKqg -->\n\n<p><strong>simple</strong></p>\n<!-- bem-example: touch-pad.examples/select/8MGVemijL_tqZt4Z3DsedAxNwDo -->\n\n<p><strong>normal</strong></p>\n<!-- bem-example: touch-pad.examples/select/u1hTHzxMhorqFlZaZXNkPIBN4WU -->\n\n<h3 id=\"_size\">_size</h3>\n<p>Mandatory modifier that is available for <em>normal</em> theme only.</p>\n<p>Provides all types of buttons with the <code>size</code> value.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following examples demonstrate this:</p>\n<table>\n  <tr>\n    <th>Size</th>\n    <th>Font size</th>\n    <th>Button height</th>\n    <th>Example</th>\n  </tr>\n  <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39; },\n    text : &#39;Small&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Medium&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    text : &#39;Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39; },\n    text : &#39;X-large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"_type\">_type</h3>\n<p>The block could be represented as a <code>link-button</code> (<code>button_type_link</code>).</p>\n<p>This button type has mandatory attribute <code>url</code> that should be specified in BEMJSON input data. A link-button has an <code>&lt;a&gt;</code> attribute. <code>url</code> value becomes <code>href</code> attribute.</p>\n<pre><code>{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;link&#39; },\n    url : &#39;#&#39;,\n    text : &#39;Link-button&#39;\n}\n</code></pre><h3 id=\"button-s-states\">Button&#39;s states</h3>\n<h4 id=\"_disabled\">_disabled</h4>\n<p>If <code>disabled</code> modifier has <code>true</code> value, button is visible but not available for user action.</p>\n<p>Disabled button cannot be focused by pressing a <code>Tab</code> or on mouse click.</p>\n<pre><code class=\"lang-bemjsom\">{\n    block : &#39;button&#39;,\n    text : &#39;Disabled&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true }\n}\n</code></pre>\n<h4 id=\"_focused\">_focused</h4>\n<p>If <code>focused</code> modifier has <code>true</code> value, the button is always focused. You can click the focused button using <code>Space</code> or <code>Enter</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<!-- bem-example: touch-pad.examples/select/UkvwYMbpDOkZaq5dm0uIlVbQ9GA -->\n\n<h4 id=\"_hovered\">_hovered</h4>\n<p>Defines &quot;hover&quot; action.</p>\n<h4 id=\"_pressed\">_pressed</h4>\n<p>Defines &quot;pressed&quot; state of a button.</p>\n<h4 id=\"_togglable\">_togglable</h4>\n<p>Defines a state of the pressed button when the first click presses the button, and the second returns it to its original state.</p>\n<!-- bem-example: touch-pad.examples/select/xAkZMTZIyMq8S8Cc5mWrpqEj5Cc -->\n\n<h4 id=\"_action\">_action</h4>\n<p>Visually highlights a button on a page.</p>\n<!-- bem-example: touch-pad.examples/select/X1_VUgD2DCMkTeRUN6Vd4diR7Yk -->\n\n<h4 id=\"_pseudo\">_pseudo</h4>\n<p>If <code>pseudo</code> modifier has <code>true</code> value, the button background becomes transparent.</p>\n<!-- bem-example: touch-pad.examples/select/GVMyNpdJjINIl0Ab_qhtsWRf_YA -->\nIf pseudo button is disabled, its boarders disappear.\n\n<!-- bem-example: touch-pad.examples/select/fc2vxXBIzzk2stACB-J9vRKlYQ4 -->\n\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<h3 id=\"__text\">__text</h3>\n<p>This auxiliary element sets a text position inside the button.</p>\n<!-- bem-example: touch-pad.examples/select/t_3HDmaOrqYMmf-3NPSa4KJZWBY -->\n\n<h2 id=\"block-s-dependencies\">Block&#39;s dependencies</h2>\n<ul>\n<li><code>control</code>, that provides public API for the controls</li>\n<li><code>i-bem__dom</code></li>\n<li><code>keyboard</code></li>\n</ul>\n\n<h1 id=\"control\">control</h1>\n<p>Auxiliary block designed for common functionality implementation to provide the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library with <code>focused</code> and <code>disabled</code> states:</p>\n<ul>\n<li><a href=\"../attach/attach.en.md\">attach</a></li>\n<li><a href=\"../button/button.en.md\">button</a></li>\n<li><a href=\"../checkbox/checkbox.en.md\">checkbox</a></li>\n<li><a href=\"../input/input.en.md\">input</a></li>\n<li><a href=\"../link/link.en.md\">link</a></li>\n<li><a href=\"../menu/menu.en.md\">menu</a></li>\n<li><a href=\"../radio/radio.en.md\">radio</a></li>\n</ul>\n<p>The <code>control</code> block provides valid <code>tabIndex</code> attribute value depending on the current state of a block.</p>\n<p>The block uses following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns a control&#39;s value.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If control name is not available, returns an empty string.</td>\n    </tr>\n</table>\n\n<h1 id=\"menu\">menu</h1>\n<p>A <code>menu</code> block is used for creation of various types of menus and lists. It allows to manage state, behavior and appearance of menus.</p>\n<p>As a result of BEMHTML transformations, a block will be rendered to a <code>&lt;div&gt;</code> HTML element, with <code>role=&quot;menu&quot;</code> attribute set. The block&#39;s HTML element contains a set of switches – the <code>menu-item</code> blocks.</p>\n<p>It allow to manage the appearance, state and size of a menu blocks as well as manage the nested <code>menu-items</code> block&#39;s appearance.</p>\n<h2 id=\"menu-use-cases\">menu use cases</h2>\n<p>A <code>menu</code> block is used for creation of following menu types:</p>\n<table>\n    <tr>\n        <th>Type</th>\n        <th>Description</th>\n        <th>Example</th>\n    </tr>\n    <tr>\n        <td>Switch menu</td>\n        <td>Used for creation of lists with a single selectable item.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;, \n        mode : &#39;radio&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>A multi selectable list. (<code>_mode_check</code>)</td>\n        <td>Clicking on a list items will perform item&#39;s state switching to opposite. If an item was active it will be deactivated, and vice versa.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;,\n        mode : &#39;check&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n<tr>\n        <td>Basic list (with <code>_mode</code> modifier is unset)</td>\n        <td>Menu item&#39;s state will not change on mouse click. A <code>_cheked</code> state modifier will not be toggled.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;\n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"the-themes-_theme-\">The themes <code>_theme</code></h3>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>If a <code>_theme</code> modifier is not set, browser defaults (<code>default</code>) will be applied to the block.</p>\n<p>For example:</p>\n<h4 id=\"default\">default</h4>\n<!-- bem-example: touch-pad.examples/select/vAAUvyJpkNyuM0yEru7LP3dZ7xE -->\n\n<h4 id=\"simple\">simple</h4>\n<!-- bem-example: touch-pad.examples/select/JgK_lg3CEjumbM6ThTKEOcNpfH0 -->\n\n<h4 id=\"normal\">normal</h4>\n<!-- bem-example: touch-pad.examples/select/MGiZ5_2bYS32yaxnY5iD9OevjVk -->\n\n<h3 id=\"the-sizes-_size-\">The sizes <code>_size</code></h3>\n<p>Mandatory modifier. Available for <em>normal</em> theme only.\nProvides a size value to all types of radio groups.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<table>\n    <tr>\n        <th>A <code>_size</code> value</th>\n        <th>Font size</th>\n        <th>Line height <code>line-heigh</code></th>\n        <th>Left padding <code>padding-left</code></th>\n        <th>Global <code>padding</code></th>\n        <th>The tick&#39;s icon size for normal theme</code></th>\n    </tr>\n    <tr>\n        <td>s</td>\n        <td>13px</td>\n        <td>24px</td>\n        <td>30px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        mode : &#39;check&#39;, \n        size : &#39;s&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>m</td>\n        <td>13px</td>\n        <td>24px</td>\n        <td>30px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        mode : &#39;check&#39;, \n        size : &#39;m&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>l</td>\n        <td>15px</td>\n        <td>28px</td>\n        <td>34px</td>\n        <td>15px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        mode : &#39;check&#39;, \n        size : &#39;l&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>xl</td>\n        <td>15px</td>\n        <td>32px</td>\n        <td>40px</td>\n        <td>15px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        mode : &#39;check&#39;, \n        size : &#39;xl&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"menu-item-selection-options-_mode-\">Menu item selection options <code>_mode</code></h3>\n<p>A <code>_mode</code> modifier defines a menu item&#39;s reaction on mouse click. For example, it controls multiple items selectability.</p>\n<p>Following modifier values are available:</p>\n<ul>\n<li><code>check</code> – a selectable list. A menu item will change it&#39;s state to opposite on each mouse click. An active item will become inactive and vice versa. Multiple choice is available;</li>\n<li><code>radio</code> – a switcher. Inactive menu item will be activated on mouse click. On re-clicking the menu item will remain <strong>active</strong>. Multiple choice not available;</li>\n<li><code>radio-check</code> – a switcher. Inactive menu item will be activated on mouse click. On re-clicking the active menu item will become <strong>inactive</strong>. Multiple choice not available.</li>\n</ul>\n<p>Available for all block themes.</p>\n<table>\n    <tr>\n        <th>List items selectability</th>\n        <th>Example</th>\n    </tr>\n    <tr>\n        <td>Only one (<code>_mode_radio</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        mode : &#39;radio&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            mods : { checked : true },\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Plural selection or none (<code>_mode_check</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        mode : &#39;check&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            mods : { checked : true },\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>One or none (<code>_mode_radio-check</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        mode : &#39;radio-check&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            mods : { checked : true },\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"block-s-states\">Block&#39;s states</h3>\n<h4 id=\"in-focus-_focused-\">In focus <code>_focused</code></h4>\n<p>A <code>_focused</code> modifier is automatically toggles for the block when it is in focus. For example, on mouse click or by <code>Tab</code> key press.</p>\n<p>Available for all block themes.</p>\n<!-- bem-example: touch-pad.examples/select/2y_zCWFJ78bAFa8UEqIdsRPc3qM -->\n\n<h2 id=\"the-block-s-elements\">The block&#39;s elements</h2>\n<p>The <code>menu</code> block is visually represented by following elements:</p>\n<h3 id=\"__group\">__group</h3>\n<p>A <code>__group</code> element is used for menu items grouping. An Items that needed grouping should be placed to the element BEMJSON declaration&#39;s <code>content</code> field. The group elements are visually separated by a gray line.</p>\n<p>For example:</p>\n<!-- bem-example: touch-pad.examples/select/WSrgcU6mXH0StKcrKnckCnH3lrc -->\n\n\n<h3 id=\"__group-title\">__group-title</h3>\n<p>This element allows to create a title for a menu items group, created using a <code>_group</code> element.</p>\n<p>For example:</p>\n<!-- bem-example: touch-pad.examples/select/8LCJ2Asb6uR2ZHALf5iscb_n2RU -->\n\n<h2 id=\"dependencies\">Dependencies</h2>\n<p>The block depends on:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>menu-item</code></li>\n<li><code>dom</code></li>\n<li><code>keyboard</code></li>\n<li><code>control</code></li>\n</ul>\n\n<h1 id=\"menu-item\">menu item</h1>\n<p>A <code>menu-item</code> block is used for creation of various types of menu and list items. It is used inside a <code>menu</code> block. The <code>menu-item</code> block allows to manage state, content and type of menu items.</p>\n<p>As a result of BEMHTML transformations block will be rendered to a <code>&lt;div&gt;</code> HTML element, with <code>role=&quot;menuitem&quot;</code> attribute set.</p>\n<h2 id=\"menu-item-use-cases\">menu item use cases</h2>\n<p>The block helps to create following menu item types:</p>\n<table>\n    <tr>\n        <th>Type</th>\n        <th>Description</th>\n        <th>An example</th>\n    </tr>\n    <tr>\n        <td>A switch element</td>\n        <td>Is used to set up a dropdowns, tab menus, lists and menu items, etc.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    val : 1,\n    content : &#39;Selector value&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>A link element (<code>_type_link</code>)</td>\n        <td>An element with nested depended link. A <code>link</code> block should be placed into block&#39;s BEMJSON declaration <code>content</code> field. The <code>_type_link</code> modifier is required.\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    mods : { type : &#39;link&#39; },\n    val : 2,\n    content : {\n        block : &#39;link&#39;,\n        url : &#39;#&#39;,\n        content : &#39;Link 1&#39;\n    }\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h2 id=\"valid-block-s-attributes\">Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes can be specified in the corresponding fields of block&#39;s BEMJSON declaration:</p>\n<table>\n    <tr>\n        <th align=\"center\">Attributes</th>\n        <th align=\"center\">Type</th>\n        <th align=\"center\">Description</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td><code>String|Number</code></td>\n        <td>A value returned by menu item if selected.</td>\n    </tr>\n</table>\n\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"the-themes-_theme-\">The themes <code>_theme</code></h3>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>If a <code>_theme</code> modifier is not set, the browser defaults (<code>default</code>) will be applied to the block.</p>\n<p>For example:</p>\n<h4 id=\"default\">default</h4>\n<!-- bem-example: touch-pad.examples/select/eV0q9qK02nCPsMxztjMtbDnRz7U -->\n\n<h4 id=\"simple\">simple</h4>\n<!-- bem-example: touch-pad.examples/select/BxhdTuPatcCVRdT_1B8cW6OHGQ0 -->\n\n<h4 id=\"normal\">normal</h4>\n<!-- bem-example: touch-pad.examples/select/snjxOm4SOT8_nFgCXdf2BKaL_Xs -->\n\n\n<h3 id=\"block-s-states\">Block&#39;s states</h3>\n<h3 id=\"inactive-_disabled-\">Inactive <code>_disabled</code></h3>\n<p>A <code>_disabled</code> modifier helps to create an inactive menu item. Inactive menu item is displayed, but not available for user actions.  </p>\n<p>If a <code>_type_link</code> modifier is set for the block with a nested link, the link will not be followed on mouse click.</p>\n<p>Available for all block themes.</p>\n<!-- bem-example: touch-pad.examples/select/00ejmLqt61w5ksAsfBl7KgE4dBE -->\n\n\n<h4 id=\"mouse-over-_hovered-\">Mouse over <code>_hovered</code></h4>\n<p>This modifier is automatically toggled when the mouse pointer is over the block. </p>\n<p>Available for all block themes.</p>\n<!-- bem-example: touch-pad.examples/select/Sgw4iIN4STar-QE05xyBmgntftw -->\n\n\n<h4 id=\"selected-menu-item-_checked-\">Selected menu item <code>_checked</code></h4>\n<p>Modifier defines the selected menu item.</p>\n<!-- bem-example: touch-pad.examples/select/T77G-B0x1-Z9ZaPqpW_TAskNFI8 -->\n\n\n<p>For the <code>menu-item</code> blocks nested in a <code>menu</code> block <code>_checked</code> state toggles automatically on mouse click. </p>\n<!-- bem-example: touch-pad.examples/select/sURVY49aNm3TBC1XVeOG1Q5_vi8 -->\n\n<h2 id=\"dependencies\">Dependencies</h2>\n<p>The block depends on:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n</ul>\n\n<h1 id=\"popup\">popup</h1>\n<p>A <code>popup</code> block is used for popups creation. It allows to manage state, behavior and appearance of popups. Block is displayed in front of all other page elements.</p>\n<p>Popup can be displayed by different page elements like pseudo links or buttons.</p>\n<p>At the moment of first display (<code>_visible</code> modifier toggle) block&#39;s DOM element is created in the end of document <code>&lt;body&gt;</code>.</p>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"the-themes-_theme-\">The themes <code>_theme</code></h3>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>If a <code>_theme</code> modifier is not set, browser defaults (<code>default</code>) will be applied to block.</p>\n<h4 id=\"default\">default</h4>\n<!-- bem-example: touch-pad.examples/select/Uhdsvnf2MsxKNrQy7w6uLKTxdek -->\n\n\n<h4 id=\"simple\">simple</h4>\n<!-- bem-example: touch-pad.examples/select/7PzT7oA6awlAKgFGXccAdhfz0n0 -->\n\n\n<h4 id=\"normal\">normal</h4>\n<!-- bem-example: touch-pad.examples/select/L1MMDUGHLM4djlDaj5mhiKHvDH8 -->\n\n<h3 id=\"visibility-_visible-\">Visibility <code>_visible</code></h3>\n<p>A <code>_visible</code> modifier allow to control block visibility. If it&#39;s not set, block will not be displayed.</p>\n<!-- bem-example: touch-pad.examples/select/m6WdfiXJP4RkxnBzEuzumr9C4w0 -->\n\n\n<h3 id=\"alignment-respect-to-its-parent-_direction-\">Alignment respect to its parent <code>_direction</code></h3>\n<p>Modifier controls the position of popup window relative to the block which opened it – popup&#39;s alignment. Popup window&#39;s position is detected automatically basing on the admissible directions array and the parent block&#39;s position.</p>\n<p>Chosen alignment will affect the opening animation direction.</p>\n<p>By default following admissible directions array is used:</p>\n<table>\n    <tr>\n        <th> Direction </td>\n        <th> Index in array </td>\n    </tr>\n        <td> bottom-left </td>\n        <td> 0 </td>\n    </tr>\n    <tr>\n        <td> bottom-center </td>\n       <td> 1 </td>\n   </tr>\n    <tr>\n        <td> bottom-right</td>\n        <td> 2 </td>\n    </tr>\n    <tr>\n        <td> top-left </td>\n        <td> 3 </td>\n    </tr>\n    <tr>\n        <td> top-center </td>\n        <td> 4 </td>\n    </tr>\n    <tr>\n        <td> top-right </td>\n        <td> 5 </td>\n    </tr>\n    <tr>\n        <td> right-top </td>\n        <td> 6 </td>\n    </tr>\n    <tr>\n        <td> right-center </td>\n        <td> 7 </td>\n    </tr>\n    <tr>\n        <td> right-bottom </td>\n        <td> 8 </td>\n    </tr>\n    <tr>\n        <td> left-top </td>\n        <td> 9 </td>\n    </tr>\n    <tr>\n        <td> left-center </td>\n        <td> 10 </td>\n    </tr>\n    <tr>\n        <td> left-bottom </td>\n        <td> 11 </td>\n    </tr>\n</table>\n\n<p>To control the popup window position you can provide directions array with desired directions set only. According to parent block&#39;s position on a page the most suitable directions will be chosen among the provided values.</p>\n<p>For example, if the popup window should be opened at the top of the parent block:</p>\n<!-- bem-example: touch-pad.examples/select/ROJZHxrl71CFbWiWU5Ry_Q0Jbhw -->\n\n\n<p>Or if it should be opened strictly at the center-right position:</p>\n<!-- bem-example: touch-pad.examples/select/VE0JWgs-I2gVU8suKC3_eTK29EE -->\n\n\n<h3 id=\"automatic-closure-_autoclosable-\">Automatic closure  <code>_autoclosable</code></h3>\n<p>With <code>_autoclosable</code> modifier toggled block will automatically hide away on mouse click outside popup window (<code>_visible</code> modifier will be removed).</p>\n<!-- bem-example: touch-pad.examples/select/M1T2dIuSVeBoluZEMgCmA90Stgc -->\n\n\n<h2 id=\"relations-between-popup-s\">Relations between popup&#39;s</h2>\n<p>As long as popup&#39;s parent block itself can be nested in another popup block there is a need in a popup&#39;s relations handling. Block can handle Parent → [ Child, Child, ... ] relations by checking if the parent block is nested in another popup block. So, the children knows about the parent blocks existence.</p>\n<p>If there were no such relations, the parent popup block will be closed on mouse click on the child block regardless of the fact that <code>_autoclosable</code> modifier is set to <code>true</code>.</p>\n<p>This means that with <code>autoclosable</code> modifier toggled block will close itself and close all of it children on mouse click outside block&#39;s window or it child&#39;s window.</p>\n<p>Child popup blocks can be regarded as a chain of 1 → 2 → 3 → 4. By clicking on the second element of chain, third and forth will be closed. By clicking on first, the second, third and forth will be closed. On click outside of any popup window of the chain element all popups will be closed.</p>\n<h2 id=\"dependencies\">Dependencies</h2>\n<p>The block depends on:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n<li><code>objects</code></li>\n<li><code>functions__throttle</code></li>\n<li><code>keyboard</code></li>\n<li><code>ua</code></li>\n<li><code>jquery__event_pointer</code></li>\n</ul>\n"}}
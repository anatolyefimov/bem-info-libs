{"en":{"name":"input","examples":[{"content":[{"url":"touch-pad.examples/input/0jZ6y8S1ANsxfMm_E1peUdEhyy0/0jZ6y8S1ANsxfMm_E1peUdEhyy0.en"},{"url":"touch-pad.examples/input/4hhBI_vwtFJlpwXu8DnFh6HdrYY/4hhBI_vwtFJlpwXu8DnFh6HdrYY.en"},{"url":"touch-pad.examples/input/_rQiPCz_bRgjryQQWFEhXhyJnyM/_rQiPCz_bRgjryQQWFEhXhyJnyM.en"},{"url":"touch-pad.examples/input/b18rvMU7reGrqw4kb0MSTpvQ3YI/b18rvMU7reGrqw4kb0MSTpvQ3YI.en"},{"url":"touch-pad.examples/input/CdWLw8cu0kAjbKLZFrp_sw7N67s/CdWLw8cu0kAjbKLZFrp_sw7N67s.en"},{"url":"touch-pad.examples/input/hwtIQVRUxvCPVxAJgWKBqBRt6Is/hwtIQVRUxvCPVxAJgWKBqBRt6Is.en"},{"url":"touch-pad.examples/input/JCaTuV74Ua-xND0IW39wBPdvHBI/JCaTuV74Ua-xND0IW39wBPdvHBI.en"},{"url":"touch-pad.examples/input/m1GvVMb4ZI4DvaKjyQWVNZLyquA/m1GvVMb4ZI4DvaKjyQWVNZLyquA.en"},{"url":"touch-pad.examples/input/r1ntKHWLCj3QPfaejFd3aVNqDNo/r1ntKHWLCj3QPfaejFd3aVNqDNo.en"},{"url":"touch-pad.examples/input/SwtjmJjtMXak9KKSsPMLXihNiQI/SwtjmJjtMXak9KKSsPMLXihNiQI.en"},{"url":"touch-pad.examples/input/TOwrkpCDAmLABnXxE-2IBwxsCXo/TOwrkpCDAmLABnXxE-2IBwxsCXo.en"},{"url":"touch-pad.examples/input/U1jetXgNoFl9qXtgecJy3MmnnJ0/U1jetXgNoFl9qXtgecJy3MmnnJ0.en"},{"url":"touch-pad.examples/input/yAehEbulTw29FYJa_ye7ntQkTkU/yAehEbulTw29FYJa_ye7ntQkTkU.en"}]}],"description":[{"content":"<h1 id=\"input\">input</h1>\n<p>The <strong>input</strong> block is intended to create different types of text fields:</p>\n<ul>\n<li>textarea</li>\n<li>password field</li>\n<li>search form</li>\n</ul>\n<p>In MSIE8 block <strong>input</strong> degrades to a native control <code>&lt;input attribute&gt;</code>; a text field is renedered as native text area <code>&lt;textarea attribute&gt;</code>.</p>\n<h2 id=\"available-block-s-attributes\">Available block&#39;s attributes</h2>\n<p>Available block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n    <tr>\n        <th>Attribute</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>String</td>\n        <td>Value to be sent to the server. It is empty by default.</td>\n    </tr>\n    <tr>\n        <td>placeholder</td>\n        <td>String</td>\n        <td>Text to be replaced. Has an empty value by default.</td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>String</td>\n        <td>Unique block modifier. The value is randomly generated by default. Could be specified manually.</td>\n    </tr>\n    <tr>\n        <td>label</td>\n        <td><code>string</code></td>\n        <td>Lable above an input field.</td>\n    </tr>\n</table>\n\n\n<p>Available block&#39;s attributes that could be provided in <code>attrs</code> field in BEMJSON:</p>\n<ul>\n<li>name (<em>common</em>)</li>\n<li>tabindex (<em>common</em>)</li>\n<li>spellcheck (<em>common</em>)</li>\n<li>accesskey (<em>common</em>)</li>\n<li>rows (<code>_textarea</code>)</li>\n<li>cols (<code>_textarea</code>)</li>\n<li>readonly (<code>_textarea</code>)</li>\n<li>wrap (<code>_textarea</code>)</li>\n<li>maxlength (<code>_textarea</code>)</li>\n</ul>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"-_theme-\"><code>_theme</code></h3>\n<p>The block is available in the following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>If the theme is not specified the block obtains default values:</p>\n<ul>\n<li>Input field type: text field</li>\n<li>Width: 100%</li>\n<li>Theme: native representation</li>\n<li>Text area size: <code>cols:10</code>, <code>rows:10</code></li>\n</ul>\n<p>Following example demonstrates this:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    placeholder : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;simple&#39; },\n    placeholder : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39; },\n    placeholder : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_type-\"><code>_type</code></h3>\n<p>The following types of <strong>input</strong> block are available:</p>\n<ul>\n<li><code>_textarea</code></li>\n<li><code>_password</code></li>\n<li><code>_search</code></li>\n</ul>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<table>\n    <tr>\n        <th>Type / Realisation</th>\n        <th>default</th>\n        <th>simple</th>\n        <th>normal</th>\n    </tr>\n    <tr>\n        <td> <code>_textarea</code></td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { type : &#39;textarea&#39; },\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        type : &#39;textarea&#39;\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        type : &#39;textarea&#39;\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td> <code>_password</code></td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    placeholder : &#39;default&#39;,\n    mods : { type : &#39;password&#39; }\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        type : &#39;password&#39;\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        type : &#39;password&#39;\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td> <code>_search</code></td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { type : &#39;search&#39; },\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        type : &#39;search&#39;\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        type : &#39;search&#39;\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"block-s-state\">Block&#39;s state</h3>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If block is disabled all its elements become unavailable for user&#39;s action.</p>\n<p>The <strong>input</strong> block is active by default even it disabled modifier is not specified.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, disabled : true },\n    val : &#39;disabled&#39;\n}\n</code></pre>\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>The input field is focused if a block has a <code>_focused</code> modifier with <code>true</code> vlue.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<pre><code>{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, focused : true },\n    val : &#39;focused&#39;\n}\n</code></pre><h3 id=\"-_has-clear-\"><code>_has-clear</code></h3>\n<p>A <code>clear</code> cross element appears in the input field if a block has a <code>_has-clear</code> modifier with <code>true</code> value.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<table>\n    <tr>\n        <th>default</th>\n        <th>simple</th>\n        <th>normal</th>\n    </tr>\n    <tr>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { &#39;has-clear&#39; : true },\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        &#39;has-clear&#39; : true\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        &#39;has-clear&#39; : true\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<hr>\n<p><strong>NB</strong> Be aware the modifier <code>has-clear</code> is not available for a <code>search field</code> in <em>simple</em> theme.</p>\n<hr>\n<h3 id=\"-_has-label-\"><code>_has-label</code></h3>\n<p>A lable (<code>__label</code> element) above the input field is available if a block has a <code>_has-label</code> modifier with <code>true</code> value.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<table>\n    <tr>\n        <th>default</th>\n        <th>simple</th>\n        <th>normal</th>\n    </tr>\n    <tr>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { &#39;has-clear&#39; : true },\n    label : &#39;Label&#39;,\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        &#39;has-label&#39; : true\n    },\n    label : &#39;Label&#39;,\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        &#39;has-label&#39; : true\n    },\n    label : &#39;Label&#39;,\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<p>The following elements provide visual representation of a <strong>input</strong> block:</p>\n<h3 id=\"__box\">__box</h3>\n<p>A mandatory element.</p>\n<p>An element fot input field forming (native input field is hidden).</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>A button (cross element) intended to clear an input field content.</p>\n<p>The cross element is unavailable if a block has a <code>has-clear</code> modifier with <code>false</code> value.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, &#39;has-clear&#39; : true },\n    label : &#39;label&#39;\n}\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>A mndatory element.</p>\n<p>This element is processed by BEMHTML or BH template engine to a native <code>&lt;input attribute&gt;</code> control.</p>\n<h3 id=\"__label\">__label</h3>\n<p>A lablel above an input field.</p>\n<p>This element provides a lable above an input field. In HTML is rendered as a <code>&lt;label&gt;</code> tag. A lable is linked with an <code>&lt;input&gt;</code> tag by the unique <code>id</code> identifier, that is generated random by default.</p>\n<p>Click the input field to set a <code>focused</code> modifier.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, &#39;has-label&#39; : true },\n    label : &#39;label&#39;\n}\n</code></pre>\n<h2 id=\"block-s-dependencies\">Block&#39;s dependencies</h2>\n<p>An <strong>input</strong> block depends on:</p>\n<ul>\n<li><code>base-control</code>, that provides public API;</li>\n<li><code>i-bem__dom</code> block.</li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"}]},"ru":{"name":"input","examples":[{"content":[{"url":"touch-pad.examples/input/0jZ6y8S1ANsxfMm_E1peUdEhyy0/0jZ6y8S1ANsxfMm_E1peUdEhyy0.ru"},{"url":"touch-pad.examples/input/4hhBI_vwtFJlpwXu8DnFh6HdrYY/4hhBI_vwtFJlpwXu8DnFh6HdrYY.ru"},{"url":"touch-pad.examples/input/_rQiPCz_bRgjryQQWFEhXhyJnyM/_rQiPCz_bRgjryQQWFEhXhyJnyM.ru"},{"url":"touch-pad.examples/input/b18rvMU7reGrqw4kb0MSTpvQ3YI/b18rvMU7reGrqw4kb0MSTpvQ3YI.ru"},{"url":"touch-pad.examples/input/CdWLw8cu0kAjbKLZFrp_sw7N67s/CdWLw8cu0kAjbKLZFrp_sw7N67s.ru"},{"url":"touch-pad.examples/input/hwtIQVRUxvCPVxAJgWKBqBRt6Is/hwtIQVRUxvCPVxAJgWKBqBRt6Is.ru"},{"url":"touch-pad.examples/input/JCaTuV74Ua-xND0IW39wBPdvHBI/JCaTuV74Ua-xND0IW39wBPdvHBI.ru"},{"url":"touch-pad.examples/input/m1GvVMb4ZI4DvaKjyQWVNZLyquA/m1GvVMb4ZI4DvaKjyQWVNZLyquA.ru"},{"url":"touch-pad.examples/input/r1ntKHWLCj3QPfaejFd3aVNqDNo/r1ntKHWLCj3QPfaejFd3aVNqDNo.ru"},{"url":"touch-pad.examples/input/SwtjmJjtMXak9KKSsPMLXihNiQI/SwtjmJjtMXak9KKSsPMLXihNiQI.ru"},{"url":"touch-pad.examples/input/TOwrkpCDAmLABnXxE-2IBwxsCXo/TOwrkpCDAmLABnXxE-2IBwxsCXo.ru"},{"url":"touch-pad.examples/input/U1jetXgNoFl9qXtgecJy3MmnnJ0/U1jetXgNoFl9qXtgecJy3MmnnJ0.ru"},{"url":"touch-pad.examples/input/yAehEbulTw29FYJa_ye7ntQkTkU/yAehEbulTw29FYJa_ye7ntQkTkU.ru"}]}],"description":[{"content":"<h1 id=\"input\">input</h1>\n<p>Блок <code>input</code> служит для создания различных типов текстовых полей:</p>\n<ul>\n<li>поле ввода (значение по умолчанию);</li>\n<li>текстовая область;</li>\n<li>поле с паролем;</li>\n<li>поисковая форма.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Значение, отправляемое на сервер. По умолчанию пустое.</td>\n    </tr>\n    <tr>\n        <td>placeholder</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Подсказка в поле ввода.</td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Уникальный идентификатор блока. По умолчанию генерируется случайным образом, если явно не задан в BEMJSON.</td>\n    </tr>\n    <tr>\n        <td>label</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Метка над полем ввода.</td>\n    </tr>\n</table>\n\n\n<p>Другие допустимые атрибуты блока могут быть заданы в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    placeholder : &#39;default&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;simple&#39; },\n    placeholder : &#39;simple&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39; },\n    placeholder : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры <code>_size</code></h3>\n<p>Задает размер всем типам текстовых полей. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота<br>строки</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;s&#39; },\n    placeholder : &#39;Small&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39; },\n    placeholder : &#39;Medium&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;l&#39; },\n    placeholder : &#39;Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;xl&#39; },\n    placeholder : &#39;X-Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Типы <code>_type</code></h3>\n<p>Блок представлен следующими типами:</p>\n<ul>\n<li>текстовая область (<code>_textarea</code>)</li>\n<li>поле с паролем (<code>_password</code>)</li>\n<li>поисковая форма (<code>_search</code>)</li>\n</ul>\n<p>Без указания типа поля блок <code>input</code> по умолчанию получает значение <code>&lt;input type=&quot;text&quot;/&gt;</code>.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Реализация</th>\n    </tr>\n    <tr>\n        <td>\n            <code>_textarea</code>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;textarea&#39; },\n    placeholder : &#39;Тексторвая область&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>_password</code>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39;, type : &#39;password&#39; },\n    placeholder : &#39;Поле с паролем&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>_search</code>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;search&#39; },\n    placeholder : &#39;Поисковая форма&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии блока «неактивен» поле ввода и все его элементы становятся недоступными для действий пользователя.</p>\n<p>Если модификатор <code>_disabled</code> не установлен, инпут по умолчанию активен.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    val : &#39;Неактивно&#39;\n}\n</code></pre>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>_focused</code> со значением <code>true</code> поле ввода находится в фокусе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    val : &#39;В фокусе&#39;\n}\n</code></pre>\n<h3 id=\"-_has-clear-\">Очистка содержимого <code>_has-clear</code></h3>\n<p>Модификатор <code>_has-clear</code> в значении <code>_true</code> отображает в инпуте крестик для очистки содержимого (элемент <code>__clear</code>).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, &#39;has-clear&#39; : true },\n    placeholder : &#39;Добавлен крестик для очистки содержимого&#39;\n}\n</code></pre>\n<h3 id=\"-_has-label-\">Метка над полем ввода <code>_has-label</code></h3>\n<p>Модификатор <code>_has-label</code> в значении <code>_true</code> указывает на наличие метки над полем ввода (элемент <code>__label</code>).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, &#39;has-label&#39; : true },\n    label : &#39;Label&#39;,\n    placeholder : &#39;Метка над полем ввода&#39;\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__box\">__box</h3>\n<p>Обязательный элемент.</p>\n<p>Элемент, рисующий поля ввода (поля нативного инпута скрыты).</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Кнопка очистки содержимого инпута («крестик»).</p>\n<p>По умолчанию модификатор <code>_has-label</code> имеет значение <code>_false</code>, при котором крестик не отображается. Для отображения крестика нужно установить модификатор в значение <code>_true</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39;, &#39;has-clear&#39; : true },\n    placeholder : &#39;Добавлен крестик для очистки содержимого&#39;\n}\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>Обязательный элемент.</p>\n<p>BEMHTML- или BH-шаблоном преобразуется в нативный контрол <code>&lt;input&gt;</code>.</p>\n<h3 id=\"__label\">__label</h3>\n<p>Метка над полем ввода.\nЭлемент добавляет метку с тегом <code>&lt;label&gt;</code> над полем ввода. Связь метки с тэгом <code>&lt;input&gt;</code> устанавливается с помощью идентификатора <code>id</code>, который может генерироваться автоматически.\nПри щелчке кнопкой мыши на метку в поле ввода будет установлен фокус.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, &#39;has-label&#39; : true },\n    label : &#39;Метка над полем ввода&#39;\n}\n</code></pre>\n<h2 id=\"-\">Зависимости блока</h2>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"}]}}
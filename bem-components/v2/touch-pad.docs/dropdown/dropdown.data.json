{"en":{"name":"dropdown","examples":[{"content":[{"url":"touch-pad.examples/dropdown/3LxBJkGCYdsRIM3jgENaGnBRRuI/3LxBJkGCYdsRIM3jgENaGnBRRuI.en"},{"url":"touch-pad.examples/dropdown/7xwP-2BJ2nd_leTd5MyNfCK8-wA/7xwP-2BJ2nd_leTd5MyNfCK8-wA.en"},{"url":"touch-pad.examples/dropdown/8Fm0DE_2FJy1NDrA8TqWefQAcRg/8Fm0DE_2FJy1NDrA8TqWefQAcRg.en"},{"url":"touch-pad.examples/dropdown/T2LPHF5xz8GwGt4VOGdjyOJF_lA/T2LPHF5xz8GwGt4VOGdjyOJF_lA.en"},{"url":"touch-pad.examples/dropdown/TZQCpS37p6PxRpc44EhMDX395AA/TZQCpS37p6PxRpc44EhMDX395AA.en"},{"url":"touch-pad.examples/dropdown/vkuviqNPhqQ2uV_ZhFfhVegfskc/vkuviqNPhqQ2uV_ZhFfhVegfskc.en"},{"url":"touch-pad.examples/dropdown/WcgFmT2l-N83y2w6hRJ-qqSpzkY/WcgFmT2l-N83y2w6hRJ-qqSpzkY.en"},{"url":"touch-pad.examples/dropdown/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y.en"}]}],"description":[{"content":""}]},"ru":{"name":"dropdown","examples":[{"content":[{"url":"touch-pad.examples/dropdown/3LxBJkGCYdsRIM3jgENaGnBRRuI/3LxBJkGCYdsRIM3jgENaGnBRRuI.ru"},{"url":"touch-pad.examples/dropdown/7xwP-2BJ2nd_leTd5MyNfCK8-wA/7xwP-2BJ2nd_leTd5MyNfCK8-wA.ru"},{"url":"touch-pad.examples/dropdown/8Fm0DE_2FJy1NDrA8TqWefQAcRg/8Fm0DE_2FJy1NDrA8TqWefQAcRg.ru"},{"url":"touch-pad.examples/dropdown/T2LPHF5xz8GwGt4VOGdjyOJF_lA/T2LPHF5xz8GwGt4VOGdjyOJF_lA.ru"},{"url":"touch-pad.examples/dropdown/TZQCpS37p6PxRpc44EhMDX395AA/TZQCpS37p6PxRpc44EhMDX395AA.ru"},{"url":"touch-pad.examples/dropdown/vkuviqNPhqQ2uV_ZhFfhVegfskc/vkuviqNPhqQ2uV_ZhFfhVegfskc.ru"},{"url":"touch-pad.examples/dropdown/WcgFmT2l-N83y2w6hRJ-qqSpzkY/WcgFmT2l-N83y2w6hRJ-qqSpzkY.ru"},{"url":"touch-pad.examples/dropdown/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y.ru"}]}],"description":[{"content":"<h1 id=\"dropdown\">dropdown</h1>\n<p>Блок <code>dropdown</code> используется для создания выпадающих элементов и позволяет изменять их состояние, поведение и внешний вид. Блок состоит из двух компонентов – управляющего компонента и попапа (блок <code>popup</code>), который отображается поверх остальных элементов страницы.</p>\n<p>Управляющий компонент при щелчке мышью вызывает попап (устанавливает для блока <code>popup</code> модификатор <code>_visible</code>).</p>\n<p>В зависимости от значения модификатора <code>_switcher</code>,  управляющим компонентом может служить ссылка, псевдоссылка или кнопка.</p>\n<h2 id=\"-\">Допустимые параметры блока</h2>\n<p>Допустимые параметры блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>switcher</td>\n        <td><code>String|BEMJSON</code></td>\n        <td>Текст управляющего компонента. Может содержать фрагмент BEMJSON, например, если нужно обернуть управляющий компонент в другой блок или передать ему дополнительные параметры. </td>\n    </tr>\n    <tr>\n        <td>popup</td>\n        <td><code>String|BEMJSON</code></td>\n        <td>Текст или фрагмент BEMJSON, отображаемый во всплывающем окне <code>popup</code>. BEMJSON при этом будет преобразован в HTML.</td>\n    </tr>\n</table>\n\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : { switcher : &#39;link&#39; },\n    switcher : &#39;link&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : { switcher : &#39;link&#39;, theme : &#39;simple&#39; },\n    switcher : &#39;link&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : { switcher : &#39;link&#39;, theme : &#39;normal&#39; },\n    switcher : &#39;link&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-_switcher-\">Управляющий компонент <code>_switcher</code></h3>\n<p>Обязательный модификатор.</p>\n<p>Модификатор отвечает за то, какой блок будет использоваться в качестве управляющего компонента:</p>\n<ul>\n<li><code>_switcher_link</code> - ссылка. В качестве управляющего компонента используется блок <code>link</code>.</li>\n<li><code>_switcher_button</code> - кнопка. В качестве управляющего компонента используется блок <code>button</code>.</li>\n</ul>\n<p>Реализован во всех темах.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    switcher : &#39;button&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-_disabled-\">Неактивен <code>_disabled</code></h3>\n<p>В состоянии &quot;неактивен&quot; дропдаун отображается, но недоступен для действий пользователя.</p>\n<p>Для такого блока не будет устанавливаться состояние <code>_opened</code> при щелчке мышью по управляющему компоненту.</p>\n<p>При установке для блока модификатора <code>_disabled</code>, для компонентов блока не будут производиться следующие действия:</p>\n<ul>\n<li>Блок </code>popup – установка модификатора <code>_visible</code>;</li>\n<li>Управляющий компонент <code>link</code> – установка состояния <code>_focused</code>. Ссылка не получает фокус по щелчку мышью или по нажатию клавиши <code>Tab</code>;</li>\n<li>Управляющий компонент <code>button</code>:<ul>\n<li>установка состояния <code>_focused</code>. Кнопка не получает фокус по щелчку мышью или по нажатию клавиши <code>Tab</code>;</li>\n<li>установка состояния <code>_hovered</code> при наведении указателем мыши.</li>\n</ul>\n</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;,\n        disabled : true\n    },\n    switcher : &#39;button&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_opened-\">Открыт <code>_opened</code></h4>\n<p>Модификатор <code>_opened</code> в значении <code>true</code> автоматически выставляется блоку при щелчке мышью по управляющему компоненту блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;,\n        opened : true\n    },\n    switcher : &#39;button&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<p>Модификатор снимается при повторном щелчке мышью по управляющему компоненту или за пределами попапа (зависит от наличия модификатора <code>_autoclosable</code> блока <code>popup</code>).</p>\n<h2 id=\"bemjson-switcher-popup-\">BEMJSON в атрибутах <code>switcher</code> и <code>popup</code></h2>\n<p>Атрибуты управляющего компонента и попапа могут содержать фрагмент БЭМ-дерева, например, если нужно обернуть управляющий компонент в другой блок или передать ему дополнительные параметры.</p>\n<p>Например, можно сделать кнопку управляющего компонента &quot;залипающей&quot;:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    switcher : {\n        block : &#39;button&#39;,\n        mods : { togglable : &#39;true&#39; },\n        text : &#39;custom button&#39;\n    },\n    popup : &#39;Popup message&#39;\n}\n</code></pre>\n<p>Или создать на основе блока выпадающий селект:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    switcher : &#39;Dropdown menu&#39;,\n    popup : {\n        block : &#39;menu&#39;,\n        mods : {\n            theme : &#39;normal&#39;,\n            size : &#39;xl&#39;,\n            select : &#39;check&#39;\n        },\n        content : [\n            {\n                block : &#39;menu-item&#39;,\n                val : 1,\n                content : &#39;First item&#39;\n            },\n            {\n                block : &#39;menu-item&#39;,\n                val : 2,\n                content : &#39;Second item&#39;\n            }\n        ]\n    }\n}\n</code></pre>\n<h2 id=\"-\">Зависимости блока</h2>\n<p>Блок <code>dropdown</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>dom</code></li>\n<li><code>popup</code></li>\n<li><code>button</code>/<code>link</code> (в зависимости от управляющего компонента <code>_switcher</code>)</li>\n</ul>\n\n<h1 id=\"popup\">popup</h1>\n<p>Блок <code>popup</code> используется для создания выпадающих элементов и позволяет изменять их состояние, поведение и внешний вид. Блок отображается поверх остальных элементов страницы.</p>\n<p>Попап может быть вызван различными элементами страницы, например, кнопками или псевдоссылками.</p>\n<p>В момент первого показа (установка модификатора <code>_visible</code>) DOM-элемент блока создается в конце <code>&lt;body&gt;</code>.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    content : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;simple&#39; },\n    content : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39; },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_visible-\">Видимый <code>_visible</code></h3>\n<p>Модификатор, отвечающий за видимость блока. При значении модификатора <code>false</code> блок не отображается.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39;, visible : true },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_direction-\">Расположение относительно родителя <code>_direction</code></h3>\n<p>Модификатор управляет положением попапа на странице, относительно вызвавшего его блока. Расположение блока определяется автоматически, исходя из массива допустимых расположений и положения родителя на странице.</p>\n<p>Выбранное расположение влияет на направление анимации раскрытия.</p>\n<p>По умолчанию используется следующий массив допустимых расположений:</p>\n<table>\n    <tr>\n        <th> Направление раскрытия </td>\n        <th> Индекс в массиве </td>\n    </tr>\n        <td> bottom-left </td>\n        <td> 0 </td>\n    </tr>\n    <tr>\n        <td> bottom-center </td>\n       <td> 1 </td>\n   </tr>\n    <tr>\n        <td> bottom-right</td>\n        <td> 2 </td>\n    </tr>\n    <tr>\n        <td> top-left </td>\n        <td> 3 </td>\n    </tr>\n    <tr>\n        <td> top-center </td>\n        <td> 4 </td>\n    </tr>\n    <tr>\n        <td> top-right </td>\n        <td> 5 </td>\n    </tr>\n    <tr>\n        <td> right-top </td>\n        <td> 6 </td>\n    </tr>\n    <tr>\n        <td> right-center </td>\n        <td> 7 </td>\n    </tr>\n    <tr>\n        <td> right-bottom </td>\n        <td> 8 </td>\n    </tr>\n    <tr>\n        <td> left-top </td>\n        <td> 9 </td>\n    </tr>\n    <tr>\n        <td> left-center </td>\n        <td> 10 </td>\n    </tr>\n    <tr>\n        <td> left-bottom </td>\n        <td> 11 </td>\n    </tr>\n</table>\n\n<p>Чтобы управлять расположением попапа, можно ограничить массив расположений, оставив только требуемые. Пользовательский массив нужно передать в качестве JS-параметра с ключом <code>directions</code>. При этом, из значений массива будет выбрано наиболее подходящее, исходя из положения родителя на странице.</p>\n<p>Например, если требуется, чтобы попап раскрывался над родителем:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { autoclosable : true, theme: &#39;simple&#39; },\n    js : { directions : [&#39;top-left&#39;, &#39;top-center&#39;, &#39;top-right&#39;] },\n    content : &#39;Hello, world!&#39;\n}\n</code></pre>\n<p>Или разместить попап справа по центру:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { autoclosable : true, theme: &#39;simple&#39; },\n    js : { directions : [&#39;right-center&#39;] },\n    content : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-_autoclosable-\">Автоматическое скрытие <code>_autoclosable</code></h3>\n<p>Модификатор отвечает за автоматическое скрытие попапа при клике вне блока. При установке модификатора <code>_autoclosable</code> в значении <code>_true</code> блок будет скрываться при щелчке за его пределами (будет снят модификатор <code>_visible</code>).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39;, autoclosable : true },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h2 id=\"-popup-\">Взаимосвязи между popup&#39;ами</h2>\n<p>Так как попап выносит себя в конец <code>&lt;body&gt;</code>, чтобы перекрывать другие элементы страницы, возникает необходимость в построении взаимосвязей. Блок умеет выстраивать связи Parent → [ Child, Child, ... ]. Для этого он выполняет проверку, вложен ли блок, вызывающий попап в другой <code>popup</code>. Потомки знают о наличии родителя.\nЕсли бы этих взаимосвязей не было, то родительский попап (при наличии модификатора <code>autoclosable</code> со значением <code>true</code>) закрылся бы при клике внутри дочернего.</p>\n<p>Другими словами, модификатор <code>autoclosable</code> со значением <code>true</code> означает, что попап закроется сам и закроет свои дочерние блоки при клике за пределами его самого и дочерних попапов.</p>\n<p>Дочерние блоки popup можно рассматривать в виде цепочки 1 → 2 → 3 → 4. При клике на 2-ом попапе – закрываются 3, 4. При клике в 1 – закрываются 2, 3, 4. При клике за пределами любого попапа из цепочки – закроются все.</p>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>popup</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n<li><code>objects</code></li>\n<li><code>functions__throttle</code></li>\n<li><code>keyboard</code></li>\n<li><code>ua</code></li>\n<li><code>jquery__event_pointer</code></li>\n</ul>\n"}]}}
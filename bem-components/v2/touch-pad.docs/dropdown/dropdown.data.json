{"ru":{"name":"dropdown","examples":[],"description":"<h1 id=\"dropdown\">dropdown</h1>\n<p>Блок <code>dropdown</code> используется для создания выпадающих элементов и позволяет изменять их состояние, поведение и внешний вид.</p>\n<p>Блок состоит из двух компонентов:</p>\n<ul>\n<li>управляющий компонент. В зависимости от значения модификатора <code>switcher</code> управляющим компонентом может служить ссылка, псевдоссылка или кнопка.</li>\n<li>попап (блок <a href=\"../popup/popup.ru.md\">popup</a>). Управляющий компонент при щелчке мышью вызывает попап (устанавливает для блока <code>popup</code> модификатор <code>visible</code>). Попап всегда отображается поверх остальных элементов страницы. Щелчок вне зоны попапа автоматически скрывает его (<code>{ autoclosable : true }</code>).</li>\n</ul>\n<h2 id=\"Специализированные-поля-блока\">Специализированные поля блока</h2>\n<p>Список зарезервированных полей входного BEMJSON:</p>\n<div class=\"table-container\"><table>\n    <tr>\n        <th>Поле</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>switcher</td>\n        <td><code>String</code></td>\n        <td>Текст управляющего компонента. Может содержать фрагмент BEMJSON, например, если нужно обернуть управляющий компонент в другой блок или передать ему дополнительные параметры. </td>\n    </tr>\n    <tr>\n        <td>popup</td>\n        <td><code>String|BEMJSON</code></td>\n        <td>Текст или фрагмент BEMJSON, отображаемый во всплывающем окне <code>popup</code>. BEMJSON при этом будет преобразован в HTML.</td>\n    </tr>\n</table></div>\n\n<p>При необходимости дополнительные HTML-атрибуты блока могут быть заданы в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"Модификаторы-блока\">Модификаторы блока</h2>\n<h3 id=\"Темы-`_theme`\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal (<strong>Важно:</strong> При выборе темы <code>normal</code> необходимо указывать обязательный модификатор <a href=\"#size\">size</a>.)</li>\n</ul>\n<p>Без указания модификатора <code>theme</code> отображается <a href=\"#default\">нативный</a> вид контрола.</p>\n<p>Наглядно показано на примерах ниже:</p>\n<p><a name=\"default\"></a>\n<strong>default</strong></p>\n<p><strong>simple</strong></p>\n<p><strong>normal</strong></p>\n<h3 id=\"Управляющий-компонент-`_switcher`\">Управляющий компонент <code>_switcher</code></h3>\n<p>Модификатор отвечает за то, какой блок будет использоваться в качестве управляющего компонента:</p>\n<ul>\n<li><code>link</code> - ссылка. В качестве управляющего компонента используется блок <code>link</code>.</li>\n<li><code>button</code> - кнопка. В качестве управляющего компонента используется блок <code>button</code>.</li>\n</ul>\n<h3 id=\"Состояния-блока\">Состояния блока</h3>\n<h4 id=\"Неактивен-`_disabled`\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии «неактивен» управляющий компонент блока виден, но недоступен для действий пользователя. К неактивному блоку применяются дополнительные стили, чтобы выделить его на странице.</p>\n<p>Неактивному блоку не могут быть назначены следующие модификаторы:</p>\n<ul>\n<li><code>opened</code> – <code>popup</code> блок не может быть открыт нажатием на управляющий компонент;</li>\n<li><code>visible</code> - <code>popup</code> блок не может быть показан;</li>\n<li>управляющий компонент не может получить модификатор <code>focused</code>;</li>\n<li>Управляющий компонент <code>button</code> не может получить модификатор <code>hovered</code> при наведении указателем мыши.</li>\n</ul>\n<h4 id=\"Открыт-`_opened`\">Открыт <code>_opened</code></h4>\n<p>Модификатор <code>opened</code> в значении <code>true</code> автоматически выставляется блоку при щелчке мышью по управляющему компоненту блока.</p>\n<h2 id=\"BEMJSON-в-атрибутах-`switcher`-и-`popup`\">BEMJSON в атрибутах <code>switcher</code> и <code>popup</code></h2>\n<p>Атрибуты управляющего компонента и попапа могут содержать фрагмент БЭМ-дерева. Например, если нужно обернуть управляющий компонент в другой блок или передать ему дополнительные параметры.</p>\n<p>Например, можно сделать кнопку управляющего компонента &quot;залипающей&quot;:</p>\n<p>Или создать на основе блока выпадающий селект:</p>\n"},"en":{"name":"dropdown","examples":[],"description":"<h1 id=\"dropdown\">dropdown</h1>\n<p><code>dropdown</code> block is used to create different dropdown types, manage their state, behavior and appearance on a page.</p>\n<p>Block consist of two components:</p>\n<ul>\n<li><p>control component. Button, link or pseudo link can be used as a control component. The value of <a href=\"#switcher\">switcher</a> modifier defines a control component type.</p>\n</li>\n<li><p>popup (<a href=\"../popup/popup.md\">popup</a> block). Mouse click on the control component opens <code>popup</code> that is always displayed above all other elements on a page. In this case <code>popup</code> automatically obtains <code>visible</code> and <code>opened</code> modifiers. Clicking outside the popup area hides it automatically (<code>{ autoclosable : true }</code>).</p>\n</li>\n</ul>\n<h2 id=\"Custom-fields-of-a-block\">Custom fields of a block</h2>\n<p>The following custom fields could be specified in BEMJSON declaration of the block:</p>\n<div class=\"table-container\"><table>\n    <tr>\n        <th>Custom field name</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>switcher</td>\n        <td><code>String</code></td>\n        <td>Text of the control component. May contain a string with text label or BEMJSON description of nested BEM entities. For example, it allows to implement the control component by other block or propagate additional attribute values.</td>\n    </tr>\n       <tr>\n        <td>popup</td>\n        <td><code>String|BEMJSON</code></td>\n        <td>Text value or BEMJSON description of popup window content.</td>\n    </tr>\n</table></div>\n\n<p>Additional required HTML attributes could be specified in <code>attrs</code> field of BEMJSON.</p>\n<h2 id=\"Modifiers-of-a-block\">Modifiers of a block</h2>\n<h3 id=\"_theme\">_theme</h3>\n<p>Block supports the following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal (<strong>NB!</strong> Choosing a theme <code>normal</code> requires additional modifier <a href=\"#size\"><code>size</code></a>.)</li>\n</ul>\n<p>If <code>theme</code> modifier is not specified, <a href=\"#native\">native</a> representation of a control is applied.</p>\n<p>See following examples:</p>\n<p><a name=\"native\"></a>\n<strong>default</strong></p>\n<p><strong>simple</strong></p>\n<p><strong>normal</strong></p>\n<p><a name=\"switcher\"></a></p>\n<h3 id=\"_switcher\">_switcher</h3>\n<p><code>switcher</code> modifier is used to specify a control component. The following values are available:</p>\n<ul>\n<li><code>link</code> - creates a pseudo link that opens popup. Block <code>link</code> is used as a control component.</li>\n<li><code>button</code> - creates a button that opens popup. Block <code>button</code> is used as a control component.</li>\n</ul>\n<h3 id=\"States-of-a-block\">States of a block</h3>\n<h4 id=\"_disabled\">_disabled</h4>\n<p><code>disabled</code> modifier is used to make block visible but not available for user action. In most cases to mark out the disabled block on a page, additional styles are applied.</p>\n<p><code>disabled</code> modifier prevents the following modifiers to be applied:</p>\n<ul>\n<li><code>popup</code> cannot be opened by clicking a mouse and get <code>opened</code> modifier;</li>\n<li><code>popup</code> block cannot get <code>visible</code> modifier;</li>\n<li>control component cannot be <code>focused</code>;</li>\n<li><code>button</code> control component cannot get <code>hovered</code> modifier.</li>\n</ul>\n<h4 id=\"_opened\">_opened</h4>\n<p><code>opened</code> modifier is set automatically on mouse click on a control component when <code>popup</code> is opened. The second click closes <code>popup</code> – <code>opened</code> modifier is removed.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : { switcher : &#39;button&#39;, theme : &#39;normal&#39;, size : &#39;m&#39;, opened : true },\n    switcher : &#39;Button&#39;,`\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h2 id=\"BEMJSON-value-of-`switcher`-and-`popup`-attributes\">BEMJSON value of <code>switcher</code> and <code>popup</code> attributes</h2>\n<p>Control component and popup attributes can contain BEM entities that can be used for different purposes:</p>\n<ul>\n<li>to wrap or modify a control component;</li>\n<li>to propagate additional attribute values to a control component;</li>\n<li>to create nested content in popup window.</li>\n</ul>\n<p>For example, you can make a button control component toggleable:</p>\n<p>Or make dropdown list selector based on a block:</p>\n"}}
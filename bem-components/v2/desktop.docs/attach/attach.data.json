{"ru":{"name":"attach","examples":[{"url":"desktop.tests/attach/gemini"},{"url":"desktop.tests/attach/simple"}],"description":"<h1 id=\"attach\">attach</h1>\n<p>Блок <code>attach</code> служит для загрузки файла, предназначенного для отправки на сервер.</p>\n<p>По умолчанию блок визуально представлен кнопкой на основе блока <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a>, открывающей системное окно загрузки файла, и текстовым сообщением «Файл не выбран». После загрузки файла отображаются следующие элементы:</p>\n<ul>\n<li>иконка файла (блок <code>icon</code>);</li>\n<li>имя файла (элемент <code>text</code>);</li>\n<li>крестик для отмены (элемент <code>clear</code>).</li>\n</ul>\n<p>Не позволяет прикреплять несколько файлов и не поддерживает drag-and-drop.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы оформления  <code>_theme</code></h3>\n<p>Блок представлен только в теме <em>simple</em>.</p>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно показано на примерах ниже:</p>\n<p><strong>default</strong></p>\n<!-- bem-example: desktop.examples/attach/2LkwTGo-4d7fxgnG4skRO2tHoic -->\n<strong>simple</strong>\n\n<!-- bem-example: desktop.examples/attach/nwytMff5nyXPoczzUvwVbgD7YQQ -->\n\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии блока «неактивен» кнопка выбора становится недоступной для действий пользователя.</p>\n<p>Если модификатор <code>disabled</code> не выбран, кнопка по умолчанию активна.</p>\n<!-- bem-example: desktop.examples/attach/TlYDF2oQVo93Y7ocT-4hcsjHHB8 -->\n\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__button\">__button</h3>\n<p>Обязательный элемент.\nКнопка выбора файла. Открывает системное окно загрузки файла. Создается на основе блока <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a> и использует его поведение (JS) и внешний вид (CSS). Контент кнопки задается во входных данных.</p>\n<!-- bem-example: desktop.examples/attach/c3tTTsQQpS_wyaTRUODJQMWC3x8 -->\n\n<h3 id=\"__control\">__control</h3>\n<p>Нативный контрол «прикрепить файл».</p>\n<p>Преобразуется BEMHTML- и BH-шаблонами в нативный элемент прикрепления файла с атрибутами <code>&lt;input class=&quot;attach__control&quot; type=&quot;file&quot;&gt;</code>.</p>\n<h3 id=\"__no-file\">__no-file</h3>\n<p>Элемент для отображения текста, когда файл не выбран.</p>\n<p>Если тема <em>simple</em> не указана для блока <code>attach</code>, будет отображаться значение нативного контрола «Файл не выбран».</p>\n<h3 id=\"__file\">__file</h3>\n<p>Контейнер с информацией о прикрепленном файле.</p>\n<p>Формируется из следующих элементов блока:</p>\n<ul>\n<li><code>__text</code></li>\n<li><code>__clear</code></li>\n</ul>\n<p>Может содержать блок <code>icon</code>. В зависимости от типа файла блоку <code>icon</code> добавляется соответствующий модификатор, которому будет назначена иконка типа файла.</p>\n<h3 id=\"__text\">__text</h3>\n<p>Имя файла. Появляется после прикрепления файла.</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Кнопка отмены выбранного файла (крестик). Появляется после прикрепления файла.</p>\n<p>Элемент реализован для темы <em>simple</em>.</p>\n\n<h1 id=\"control\">control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"../attach/attach.ru.md\">attach</a></li>\n<li><a href=\"../button/button.ru.md\">button</a></li>\n<li><a href=\"../checkbox/checkbox.ru.md\">checkbox</a></li>\n<li><a href=\"../input/input.ru.md\">input</a></li>\n<li><a href=\"../link/link.ru.md\">link</a></li>\n<li><a href=\"../menu/menu.ru.md\">menu</a></li>\n<li><a href=\"../radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n\n<h1 id=\"button\">button</h1>\n<p>Блок <code>button</code> используется для создания различных типов кнопок и предоставляет возможность изменять их размер, состояние, содержимое и внешний вид.</p>\n<h2 id=\"-\">Варианты использования кнопок</h2>\n<ul>\n<li>Обычная кнопка – применяется для любых кнопок веб-интерфейса. Используется по умолчанию.</li>\n<li>Кнопка-ссылка – применяется для перехода по ссылке. Задается модификатором <code>type</code> со значением <code>link</code>.</li>\n<li>Кнопка отправки формы – предназначена для отправки данных формы на сервер (submit). Задается модификатором <code>type</code> со значением <code>submit</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает текст кнопки.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code></td>\n        <td>Кнопка с иконкой, которая формируется блоком <code>icon</code>.</td>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Адрес ссылки. Применяется только при наличии модификатора блока <code>button_type_link</code>. Кнопка становится ссылкой, а значение <code>url</code> – атрибутом <code>href</code>.</td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Уникальный идентификатор кнопки.</td>\n    </tr>\n    <tr>\n        <td>tabindex</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Определяет последовательность перехода между кнопками при нажатии на <code>Tab</code>.</td>\n    </tr>\n    <tr>\n        <td>value</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Значение, отправляемое на сервер. По умолчанию пустое.</td>\n    </tr>\n</table>\n\n<p>Другие допустимые атрибуты блока могут задаваться в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно показано на примерах ниже:</p>\n<p><strong>default</strong></p>\n<!-- bem-example: desktop.examples/attach/pxTNfkqsHxpJmDhwS0QK2QBs3ZY -->\n\n<p><strong>simple</strong></p>\n<!-- bem-example: desktop.examples/attach/KtCevfKa_rzm7MTQMzA65Z0ZREU -->\n\n<p><strong>normal</strong></p>\n<!-- bem-example: desktop.examples/attach/Rb77AVqNcSM2UUBxbCkUkHULKWc -->\n\n<h3 id=\"-_size-\">Размеры кнопок <code>_size</code></h3>\n<p>Обязательный модификатор. Задает размер всем типам кнопок.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>кнопки</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота<br>кнопки</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39; },\n    text : &#39;Small&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Medium&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    text : &#39;Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39; },\n    text : &#39;X-large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Типы кнопок <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки-ссылки (<code>_type_link</code>) и кнопки отправки формы (<code>_type_submit</code>).\nВ случак кнопки-ссылки, дополнительно во входных данных необходимо указать обязательный атрибут <code>url</code>. В таком случае кнопка получает тег <code>&lt;a&gt;</code>, а значение <code>url</code> становится атрибутом <code>href</code>.</p>\n<p><strong>Кнопка-ссылка</strong></p>\n<!-- bem-example: desktop.examples/attach/El0pc_bZgByjhimDRiJmaUa0ubw -->\n\n<p><strong>Кнопка отправки формы</strong></p>\n<!-- bem-example: desktop.examples/attach/gtF_RY9_ivjSx1sADQLwlLOSzmo -->\n\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_disabled-\">Неактивна <code>_disabled</code></h4>\n<p>В состоянии «неактивна» кнопка видна, но недоступна для действий пользователя.</p>\n<p>Такая кнопка не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<!-- bem-example: desktop.examples/attach/VrNTsucLZEWlatBulG8rqd0wHxQ -->\n\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>focused</code> со значением <code>true</code> кнопка всегда находится в фокусе. Нажатие по ней можно выполнить клавишей <code>Space</code> или <code>Enter</code>.</p>\n<!-- bem-example: desktop.examples/attach/ByAZ1dHx4rZKUf9zbxuHmfOmGNs -->\n\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие «наведение курсором» на кнопку.</p>\n<h4 id=\"-_pressed-\">Нажатие <code>_pressed</code></h4>\n<p>Определяет состояние «нажатие на кнопку» (действие).</p>\n<h4 id=\"-_togglable-\">Залипание <code>_togglable</code></h4>\n<p>Позволяет реализовать залипание кнопки. Допустимые значения: <code>check</code> и <code>radio</code>.</p>\n<!-- bem-example: desktop.examples/attach/NYbJzppv5-r9T8LQ0_-SaNLJWds -->\n\n<h4 id=\"-_action-\">Визуальное выделение <code>_action</code></h4>\n<p>Визуально выделяет кнопку на странице.</p>\n<!-- bem-example: desktop.examples/attach/X1_VUgD2DCMkTeRUN6Vd4diR7Yk -->\n\n<h4 id=\"-_pseudo-\">Псевдокнопка <code>_pseudo</code></h4>\n<p>При выборе модификатора <code>pseudo</code> со значением <code>true</code>, кнопка получает прозрачный фон.</p>\n<!-- bem-example: desktop.examples/attach/h_ijyu_mqbPaJBB22OxZERaFyZA -->\n\n<p>В неактивном состоянии границы псевдокнопки исчезают и она сливается со страницей.</p>\n<!-- bem-example: desktop.examples/attach/igxPz7KCvCVG6TTxlXRYzE2_5pI -->\n\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"__text\">__text</h3>\n<p>Технический элемент. Обрамляет текст кнопки.\nНужен для позиционирования текста внутри кнопки, в том числе для случаев использования вместе с иконкой.</p>\n<!-- bem-example: desktop.examples/attach/RQ8YcvhxhqjSwO3I3VjLBOanRns -->\n\n<h1 id=\"icon\">icon</h1>\n<p>Блок <code>icon</code> используется в качестве графического элемента в других блоках. В HTML представлен тегом <code>&lt;i&gt;</code>. Иконка задается через свойство <code>background</code> и, соответственно, не имеет возможности фоллбека.</p>\n<p>Иконку можно передать как через модификатор, так и через поле <code>url</code>:</p>\n<!-- bem-example: desktop.examples/attach/b2PchFG0vbxDCGt-_1VzrN-GK0 -->\n\n<!-- bem-example: desktop.examples/attach/bek_pi0vSgei-mm8QD-H3qy_E0c -->\n\n<!-- bem-example: desktop.examples/attach/bqsLdaiup-wWnOz-fYrlos47T_c -->\n\n<!-- bem-example: desktop.examples/attach/w_tWuwVyYuwv7N6i7jChuJOj8Vc -->\n"},"en":{"name":"attach","examples":[{"url":"desktop.tests/attach/gemini"},{"url":"desktop.tests/attach/simple"}],"description":"<h1 id=\"attach\">attach</h1>\n<p><code>attach</code> block is used to upload a file to be sent to a server.</p>\n<p>This block is visually represented by:</p>\n<ul>\n<li>button (<code>button</code> element is based on the <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a> block) that opens a system window for a file upload;</li>\n<li>text message &quot;No file selected&quot;.</li>\n</ul>\n<p>When file upload is complete, the following elements become available:</p>\n<ul>\n<li>file icon (<code>icon</code> block);</li>\n<li>file name (<code>text</code> element);</li>\n<li>deletion cross element (<code>clear</code> element).</li>\n</ul>\n<p>Block functionality does not support:</p>\n<ul>\n<li>more than one file attaching;</li>\n<li>drag-and-drop.</li>\n</ul>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"_theme\">_theme</h3>\n<p>The block supports only a theme called <em>simple</em>.</p>\n<p>If theme is not specified, only native representation of the block is available (<em>default</em>).</p>\n<p>See the following examples for demonstration:</p>\n<p><strong>default</strong></p>\n<!-- bem-example: desktop.examples/attach/ZFs05u8kewAq9F9n8d6YPWyDNgk -->\n<strong>simple</strong>\n\n<!-- bem-example: desktop.examples/attach/8pRQhEhxOlmCQHlJitiM8RB4UoE -->\n\n<h3 id=\"block-states\">Block states</h3>\n<h4 id=\"_disabled\">_disabled</h4>\n<p>If block is disabled, a file selection button becomes unavailable for user&#39;s manipulations.</p>\n<p>The button is active by default, even if <code>disabled</code> modifier is not specified.</p>\n<!-- bem-example: desktop.examples/attach/AkDH5qgUPbMKtFX988WrjrO4Yog -->\n\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<p>The block is visually represented by the following elements:</p>\n<h3 id=\"__button\">__button</h3>\n<p>A mandatory element.</p>\n<p>A file selection button. It is designed for opening a system window for file upload. It is based on <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a> block and inherits its behavior (JS) and formatting (CSS). Content of a button should be specified in input data.</p>\n<!-- bem-example: desktop.examples/attach/0e8PrnldKFxjKeNoH1_3eiHXjqM -->\n\n<h3 id=\"__control\">__control</h3>\n<p>A native control for file attaching.</p>\n<p>It is rendered by BEMHTML and BH template engines as a native control of file attaching with attributes: <code>&lt;input class=&quot;attach__control&quot; type=&quot;file&quot;&gt;</code>.</p>\n<h3 id=\"__no-file\">__no-file</h3>\n<p>Element for description rendering with no file selected.</p>\n<p>If a theme <em>simple</em> is not declared, the text message &quot;no file selected&quot; is used by default.</p>\n<h3 id=\"__file\">__file</h3>\n<p>A container with attached file information.</p>\n<p>It consists of the following elements of the block:</p>\n<ul>\n<li><code>text</code></li>\n<li><code>clear</code></li>\n</ul>\n<p>The element could contain an <code>icon</code> block. Depending on a file type an <code>icon</code> block could obtain corresponding modifier that specifies a type file icon to be assigned.</p>\n<h3 id=\"__text\">__text</h3>\n<p>File name. It becomes available when you have attached the file.</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Clear attachment button (deletion cross element). It becomes available when you have attched the file.</p>\n<p>The element is available for a <em>simple</em> theme of <code>attach</code> block.</p>\n\n<h1 id=\"control\">control</h1>\n<p>Auxiliary block designed for common functionality implementation to provide the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library with <code>focused</code> and <code>disabled</code> states:</p>\n<ul>\n<li><a href=\"../attach/attach.en.md\">attach</a></li>\n<li><a href=\"../button/button.en.md\">button</a></li>\n<li><a href=\"../checkbox/checkbox.en.md\">checkbox</a></li>\n<li><a href=\"../input/input.en.md\">input</a></li>\n<li><a href=\"../link/link.en.md\">link</a></li>\n<li><a href=\"../menu/menu.en.md\">menu</a></li>\n<li><a href=\"../radio/radio.en.md\">radio</a></li>\n</ul>\n<p>The <code>control</code> block provides valid <code>tabIndex</code> attribute value depending on the current state of a block.</p>\n<p>The block uses following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns a control&#39;s value.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If control name is not available, returns an empty string.</td>\n    </tr>\n</table>\n\n<h1 id=\"button\">button</h1>\n<p>The <code>button</code> block is used for different types of buttons creation. It allows you to manage size, sate, content and appearance of a button.</p>\n<h2 id=\"button-use-cases\">Button use cases</h2>\n<ul>\n<li>button – is used to create the majority of web inteface buttons. Used by default.</li>\n<li>link-button – a button that provides link functionality. Must have a mandatory modifier <code>type</code> with <code>link</code> value.</li>\n<li>action button – a button designed to send data to the server (submit). Must be always located inside a form. Sets <code>type</code> modifier with <code>submit</code> value in BEMJSON to create an action button.</li>\n</ul>\n<h2 id=\"valid-block-s-attributes\">Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in corresponding fields of block&#39;s BEMJSON file:</p>\n<table>\n    <tr>\n        <th>Attributes</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Text of a button.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Button with an icon provided by an <code>icon</code> block.</td>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>URL address. It is used only if <code>button_type_link</code> modifier is specified. In this case a button\n            acts as a link and <code>url</code> value is represented as a <code>href</code> attribute.\n        </td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Unique identifier of a button.</td>\n    </tr>\n    <tr>\n        <td>tabindex</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Defines tab order between the buttons.</td>\n    </tr>\n    <tr>\n        <td>value</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Value to be sent to a server. It is empty by default.</td>\n    </tr>\n</table>\n\n<p>The other valid block&#39;s attributes could be specified in the <code>attrs</code> field in BEMJSON.</p>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"_theme\">_theme</h3>\n<p>The block supports the following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>If a <code>theme</code> modifier is not specified, the native representation (<em>default</em>) of a control is available.</p>\n<p>Following examples demonstrate this:</p>\n<p><strong>default</strong></p>\n<!-- bem-example: desktop.examples/attach/b7paW80CenjDPGtPNxSCdPuUKqg -->\n\n<p><strong>simple</strong></p>\n<!-- bem-example: desktop.examples/attach/8MGVemijL_tqZt4Z3DsedAxNwDo -->\n\n<p><strong>normal</strong></p>\n<!-- bem-example: desktop.examples/attach/u1hTHzxMhorqFlZaZXNkPIBN4WU -->\n\n<h3 id=\"_size\">_size</h3>\n<p>Mandatory modifier that is available for <em>normal</em> theme only.</p>\n<p>Provides all types of buttons with the <code>size</code> value.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following examples demonstrate this:</p>\n<table>\n  <tr>\n    <th>Size</th>\n    <th>Font size</th>\n    <th>Button height</th>\n    <th>Example</th>\n  </tr>\n  <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39; },\n    text : &#39;Small&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Medium&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    text : &#39;Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39; },\n    text : &#39;X-large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"_type\">_type</h3>\n<p>The block could be represented as a <code>link-button</code> (<code>button_type_link</code>).</p>\n<p>This button type has mandatory attribute <code>url</code> that should be specified in BEMJSON input data. A link-button has an <code>&lt;a&gt;</code> attribute. <code>url</code> value becomes <code>href</code> attribute.</p>\n<pre><code>{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;link&#39; },\n    url : &#39;#&#39;,\n    text : &#39;Link-button&#39;\n}\n</code></pre><h3 id=\"button-s-states\">Button&#39;s states</h3>\n<h4 id=\"_disabled\">_disabled</h4>\n<p>If <code>disabled</code> modifier has <code>true</code> value, button is visible but not available for user action.</p>\n<p>Disabled button cannot be focused by pressing a <code>Tab</code> or on mouse click.</p>\n<pre><code class=\"lang-bemjsom\">{\n    block : &#39;button&#39;,\n    text : &#39;Disabled&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true }\n}\n</code></pre>\n<h4 id=\"_focused\">_focused</h4>\n<p>If <code>focused</code> modifier has <code>true</code> value, the button is always focused. You can click the focused button using <code>Space</code> or <code>Enter</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<!-- bem-example: desktop.examples/attach/UkvwYMbpDOkZaq5dm0uIlVbQ9GA -->\n\n<h4 id=\"_hovered\">_hovered</h4>\n<p>Defines &quot;hover&quot; action.</p>\n<h4 id=\"_pressed\">_pressed</h4>\n<p>Defines &quot;pressed&quot; state of a button.</p>\n<h4 id=\"_togglable\">_togglable</h4>\n<p>Defines a state of the pressed button when the first click presses the button, and the second returns it to its original state.</p>\n<!-- bem-example: desktop.examples/attach/xAkZMTZIyMq8S8Cc5mWrpqEj5Cc -->\n\n<h4 id=\"_action\">_action</h4>\n<p>Visually highlights a button on a page.</p>\n<!-- bem-example: desktop.examples/attach/X1_VUgD2DCMkTeRUN6Vd4diR7Yk -->\n\n<h4 id=\"_pseudo\">_pseudo</h4>\n<p>If <code>pseudo</code> modifier has <code>true</code> value, the button background becomes transparent.</p>\n<!-- bem-example: desktop.examples/attach/GVMyNpdJjINIl0Ab_qhtsWRf_YA -->\nIf pseudo button is disabled, its boarders disappear.\n\n<!-- bem-example: desktop.examples/attach/fc2vxXBIzzk2stACB-J9vRKlYQ4 -->\n\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<h3 id=\"__text\">__text</h3>\n<p>This auxiliary element sets a text position inside the button.</p>\n<!-- bem-example: desktop.examples/attach/t_3HDmaOrqYMmf-3NPSa4KJZWBY -->\n\n<h2 id=\"block-s-dependencies\">Block&#39;s dependencies</h2>\n<ul>\n<li><code>control</code>, that provides public API for the controls</li>\n<li><code>i-bem__dom</code></li>\n<li><code>keyboard</code></li>\n</ul>\n\n<h1 id=\"icon\">icon</h1>\n<p><code>&lt;i&gt;</code>-based block for using as a graphical element in other blocks, not for independent usage. Icon is set as <code>background</code> property and unables to fallback.</p>\n<p>In BEMJSON you can use both the modifier and the <code>url</code> field for an icon representation:\n<!-- bem-example: desktop.examples/attach/b2PchFG0vbxDCGt-_1VzrN-GK0 --></p>\n<!-- bem-example: desktop.examples/attach/bek_pi0vSgei-mm8QD-H3qy_E0c -->\n\n<!-- bem-example: desktop.examples/attach/ozTrvWSbAw8rmCSYD_YNMb4uO80 -->\n\n<!-- bem-example: desktop.examples/attach/w_tWuwVyYuwv7N6i7jChuJOj8Vc -->\n"}}
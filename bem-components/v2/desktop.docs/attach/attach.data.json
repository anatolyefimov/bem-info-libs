{"ru":{"name":"attach","examples":[{"content":[{"url":"desktop.tests/attach/simple/simple.ru"}]}],"description":[{"content":"<h1 id=\"attach\">attach</h1>\n<p>Блок <code>attach</code> служит для загрузки файла, предназначенного для отправки на сервер.</p>\n<p>По умолчанию блок визуально представлен кнопкой на основе блока <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a>, открывающей системное окно загрузки файла, и текстовым сообщением «Файл не выбран». После загрузки файла отображаются следующие элементы:</p>\n<ul>\n<li>иконка файла (блок <code>icon</code>);</li>\n<li>имя файла (<code>__text</code>);</li>\n<li>крестик для отмены (<code>__clear</code>).</li>\n</ul>\n<p>Не позволяет прикреплять несколько файлов и не поддерживает drag-and-drop.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы оформления  <code>_theme</code></h3>\n<p>Блок представлен только в теме <em>simple</em>.</p>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    button : &#39;Выберите файл&#39;,\n    noFileText : &#39;Файл не выбран&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    mods : { theme : &#39;simple&#39; },\n    button : &#39;Выберите файл&#39;,\n    noFileText : &#39;Файл не выбран&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии блока «неактивен» кнопка выбора становится недоступной для действий пользователя.</p>\n<p>Если модификатор <code>disabled</code> не выбран, кнопка по умолчанию активна.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    mods : { theme : &#39;simple&#39;, disabled : true },\n    button : &#39;Выберите файл&#39;,\n    noFileText : &#39;файл не выбран&#39;\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__button\">__button</h3>\n<p>Обязательный элемент.\nКнопка выбора файла. Открывает системное окно загрузки файла. Создается на основе блока <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a> и использует его поведение (JS) и внешний вид (CSS). Контент кнопки задается во входных данных.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    mods : { theme : &#39;simple&#39; },\n    button : {\n        block : &#39;button&#39;,\n        mods : { theme : &#39;simple&#39; },\n        icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; },\n        text: &#39;Выберите файл&#39;\n        }\n    },\n    noFileText : &#39;Файл не выбран&#39;\n}\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>Нативный контрол «прикрепить файл».</p>\n<p>Преобразуется BEMHTML- и BH-шаблонами в нативный элемент прикрепления файла с атрибутами <code>&lt;input class=&quot;attach__control&quot; type=&quot;file&quot;&gt;</code>.</p>\n<h3 id=\"__no-file\">__no-file</h3>\n<p>Элемент для отображения текста, когда файл не выбран.</p>\n<p>Если тема <em>simple</em> не указана для блока <code>attach</code>, будет отображаться значение нативного контрола – «Файл не выбран».</p>\n<h3 id=\"__file\">__file</h3>\n<p>Контейнер с информацией о прикрепленном файле.</p>\n<p>Формируется из следующих элементов блока:</p>\n<ul>\n<li><code>__text</code></li>\n<li><code>__clear</code></li>\n</ul>\n<p>Может содержать блок <code>icon</code>. В зависимости от типа файла, блоку <code>icon</code> добавляется соответствующий модификатор, которому будет назначена иконка типа файла.</p>\n<h3 id=\"__text\">__text</h3>\n<p>Имя файла. Появляется после прикрепления файла.</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Кнопка отмены выбранного файла (крестик). Появляется после прикрепления файла.</p>\n<p>Элемент реализован для темы <em>simple</em>.</p>\n<h3 id=\"-\">Зависимости блока</h3>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n<li><code>icon</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n\n<h1 id=\"button\">button</h1>\n<p>Блок <code>button</code> используется для создания различных типов кнопок и предоставляет возможность изменять их размер, состояние, содержимое и внешний вид.</p>\n<h2 id=\"-\">Варианты использования кнопок</h2>\n<ul>\n<li>Обычная кнопка – применяется для любых кнопок веб-интерфейса; используется по умолчанию.</li>\n<li>Кнопка-ссылка – применяется для перехода по ссылке. Задается модификатором <code>_type</code> со значением <code>_link</code>.</li>\n<li>Кнопка действия – предназначена для отправки данных на сервер (submit). Всегда располагается в форме. Задается через атрибут блока <code>type</code> со значением <code>submit</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает текст кнопки.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code></td>\n        <td>Кнопка с иконкой, которая формируется блоком <code>icon</code>.</td>\n    </tr>\n    <tr>\n        <td>type</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Преобразует обычную кнопку в кнопку действия. Допустимое значение атрибута – <code>submit</code>.</td>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Адрес ссылки. Применяется только при наличии модификатора блока <code>_type_link</code>. Кнопка становится ссылкой, а значение <code>url</code> атрибутом <code>href</code>.</td>\n    </tr>\n</table>\n\n<p>Другие допустимые атрибуты блока могут задаваться в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Тема не указана&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;Тема simple&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Тема normal&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры кнопок <code>_size</code></h3>\n<p>Задает размер всем типам кнопок. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>кнопки</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота<br>кнопки</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39; },\n    text : &#39;Small&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Medium&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    text : &#39;Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39; },\n    text : &#39;X-large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Типы кнопок <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки-ссылки (<code>_type_link</code>).\nДополнительно во входных данных необходимо указать обязательный атрибут <code>url</code>. В таком случае кнопка получает тег <code>&lt;a&gt;</code>, а значение <code>url</code> становится атрибутом <code>href</code>.</p>\n<pre><code>{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;link&#39; },\n    url : &#39;#&#39;,\n    text : &#39;Кнопка-ссылка&#39;\n}\n</code></pre><h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_disabled-\">Неактивна <code>_disabled</code></h4>\n<p>В состоянии «неактивна» кнопка видна, но недоступна для действий пользователя.</p>\n<p>Такая кнопка не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<pre><code class=\"lang-bemjsom\">{\n    block : &#39;button&#39;,\n    text : &#39;Неактивна&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true }\n}\n</code></pre>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>focused</code> со значением <code>true</code> кнопка всегда находится в фокусе. Нажатие по ней можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;В фокусе&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true }\n}\n</code></pre>\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие «наведение курсором» на кнопку.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Наведение курсором&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, hovered : true }\n}\n</code></pre>\n<h4 id=\"-_pressed-\">Нажатие <code>_pressed</code></h4>\n<p>Определяет состояние «нажатие на кнопку» (действие).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка нажата&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pressed : true }\n}\n</code></pre>\n<h4 id=\"-_togglable-\">Залипание <code>_togglable</code></h4>\n<p>Определяет состояние кнопки в нажатом состоянии, когда первый клик по кнопке нажимает ее, а второй возвращает в исходное состояние.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка зажата&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, togglable : true }\n}\n</code></pre>\n<h4 id=\"-_action-\">Визуальное выделение <code>_action</code></h4>\n<p>Визуально выделяет кнопку на странице.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, action : true },\n    type : &#39;submit&#39;,\n    text : &#39;Action&#39;\n}\n</code></pre>\n<h4 id=\"-_pseudo-\">Псевдокнопка <code>_pseudo</code></h4>\n<p>При выборе модификатора <code>_pseudo</code> со значением <code>true</code>, кнопка получает прозрачный фон.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true },\n    text : &#39;Псевдокнопка&#39;\n}\n</code></pre>\n<p>В неактивном состоянии границы псевдокнопки исчезают и она сливается со страницей.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true, disabled : true },\n    text : &#39;Псевдокнопка&#39;\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"__text\">__text</h3>\n<p>Технический элемент. Обрамляет текст кнопки.\nНужен для позиционирования текста внутри кнопки, в том числе для случаев использования вместе с иконкой.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        mods : { action : &#39;download&#39; }\n    },\n    text : &#39;Кнопка с иконкой&#39;\n}\n</code></pre>\n<h2 id=\"-\">Зависимости</h2>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n<li><code>keyboard</code></li>\n</ul>\n\n<h1 id=\"icon\">icon</h1>\n<p>Блок <code>icon</code> используется в качестве графического элемента в других блоках. В HTML представлен тегом <code>&lt;i&gt;</code>. Иконка задается через свойство <code>background</code> и, соответственно, не имеет возможности фоллбека.</p>\n<p>Иконку можно передать как через модификатор, так и через поле <code>url</code>:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;icon&#39;,\n    mods : { social : &#39;twitter&#39; }\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;icon&#39;,\n    url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка с иконкой&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;with icon&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n}\n</code></pre>\n"}]},"en":{"name":"attach","examples":[{"content":[{"url":"desktop.tests/attach/simple/simple.en"}]}],"description":[{"content":"<h1 id=\"attach\">attach</h1>\n<p>The <strong>attach</strong> block is used to send a file to a server.</p>\n<p>The block is visually represented by:</p>\n<ul>\n<li>button (<code>__button</code> based on the <a href=\"../button/\">button</a> block) that opens a system window for a file download</li>\n<li>deletion cross element (<code>__clear</code>)</li>\n</ul>\n<p>Block functionality does not support:</p>\n<ul>\n<li>more than one file attaching</li>\n<li>drag-and-drop</li>\n</ul>\n<p>Block <strong>attach</strong> provides native control functionality. The control is hidden. In MSIE8 block <strong>attach</strong> is rendered as native control <code>&lt;input type=&quot;file&quot;&gt;</code>.</p>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"themes-of-a-block\">Themes of a block</h3>\n<p><code>_theme</code></p>\n<p>The block supports only the <em>simple</em> theme.</p>\n<p>If theme is not specified, the block applies only default values:</p>\n<ul>\n<li>Theme of a button: native representation of a button by the browser.</li>\n<li>Localization: en</li>\n<li>Button&#39;s message text (<code>__button</code>): &quot;Choose file&quot;</li>\n<li>Text message rendered with no file selected (<code>__no-file</code>): &quot;no file selected&quot;</li>\n</ul>\n<p>Following example demonstrates this:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39; },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h3 id=\"block-state\">Block state</h3>\n<p><code>_disabled_true</code></p>\n<ul>\n<li>disabled\nIf block is disabled a file selection button becomes unavailable for user&#39;s manipulations.</li>\n</ul>\n<p>The button is active by default.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { disabled : true },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39;, disabled : true },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<p>The block is visually represented by the following elements:</p>\n<h3 id=\"__button\">__button</h3>\n<p>A mandatory element.</p>\n<p>A file selection button. It aims to open the system window for a file download. It is based on a <a href=\"../button/\">button</a> block and inherites its behavior (JS) and formatting (CSS).</p>\n<p>If a theme <em>simple</em> is not declared, the button&#39;s text &quot;Choose file&quot; is used by default.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39; },\n        button : {\n            block : &#39;button&#39;,\n            mods : { theme : &#39;simple&#39; },\n            icon : { elem : &#39;icon&#39; }\n        },\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>A native control of file attaching.</p>\n<p>It is rendered by BEMHTML and BH template engines as a native control of file attaching with attributes: <code>&lt;input class=&quot;file-name&quot; type=&quot;file&quot;&gt;</code>.</p>\n<h3 id=\"__no-file\">__no-file</h3>\n<p>Element for description rendering with no file selected.</p>\n<p>If a theme <em>simple</em> is not declared, the text message &quot;no file selected&quot; is used by default.</p>\n<h3 id=\"__file\">__file</h3>\n<p>A container for a attached file information.</p>\n<p>It consists of the following block&#39;s elements:</p>\n<ul>\n<li><code>__text</code></li>\n<li><code>__clear</code></li>\n</ul>\n<h3 id=\"__text\">__text</h3>\n<p>File name. It appears after some file is attached.</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Clear attachment button (deletion cross element). It appears after some file is attached.</p>\n<p>The element is available for a <em>simple</em> theme of <strong>attach</strong> block.</p>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n\n<h1 id=\"button\">button</h1>\n<p>The <strong>button</strong> block is used for different types of buttons creating. It allows you to manage size, sate, content and appearance of a button.</p>\n<p>In MSIE8 block <strong>button</strong> is rendered as native button <code>&lt;button&gt;</code>; <code>link-button</code> is rendered as native link <code>&lt;a&gt;</code>.</p>\n<h2 id=\"button-use-cases\">Button use cases</h2>\n<table>\n  <tr>\n    <th align=\"center\">Type</th>\n    <th align=\"center\">Description</th>\n    <th align=\"center\">Example</th>\n  </tr>\n  <tr>\n    <td>Button</td>\n    <td>Used by default.</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;\n  },\n  icon : {\n    block : &#39;icon&#39;,\n    mods : {\n      action : &#39;download&#39;\n    }\n  }\n}\n      </code></pre>\n    </td>\n   <tr>\n    <td>Link-button</td>\n    <td>A button that provides link functionality. <br>Has an optional attribute <code>url</code><br> to specify the address to which to <br>navigate.</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    type : &#39;link&#39;\n  },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n   </tr>\n   <tr>\n    <td>Action button</td>\n    <td>Designed to send data to the server (submit).<br> Always located in the form. <br>Set a <code>type</code> modifier with <code>submit</code> value in <br>BEMJSON to create an action button.\n    </td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : {\n      theme : &#39;normal&#39;,\n      size : &#39;m&#39;,\n      type : &#39;submit&#39;\n    },\n    text : &#39;button&#39;\n  }\n}\n      </code></pre>\n    </td>\n   </tr>\n</table>\n\n<h2 id=\"block-s-api\">Block&#39;s API</h2>\n<p>The public methods of the block are:</p>\n<table>\n  <tr>\n    <th align=\"center\">Method</th>\n    <th align=\"center\">Description</th>\n  </tr>\n  <tr>\n    <td>getText</td>\n    <td>Returns text of the button {String}.</td>\n  </tr>\n  <tr>\n    <td>setText</td>\n    <td>Sets text to the button.</td>\n  </tr>\n</table>\n\n<h2 id=\"valid-block-s-attributes\">Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n  <tr>\n    <th align=\"center\">Attributes</th>\n    <th align=\"center\">Type</th>\n    <th align=\"center\">Description</th>\n  </tr>\n  <tr>\n    <td>text</td>\n    <td>String</td>\n    <td>Text of the button.</td>\n   </tr>\n   <tr>\n    <td>icon</td>\n    <td>BEMJSON</td>\n    <td>The <strong>icon</strong> block.</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>String</td>\n    <td>URL address. If URL address is specified the <br>button provides a link functionality.</td>\n  </tr>\n</table>\n\n<p>The other valid block&#39;s attributes could be specified in the <code>attrs</code> field in BEMJSON.</p>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"the-themes-_theme-\">The themes <code>_theme</code></h3>\n<p>The block supports the follwing themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>It a <code>_theme</code> modifier is not specified the native representation (<code>default</code>) of a control is available.</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"the-sizes-_size-\">The sizes <code>_size</code></h3>\n<p>Mandatory modifier for <em>normal</em> theme only.\nProvides the size value to all types of buttons.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following example demonstrates this:</p>\n<table>\n  <tr>\n    <th align=\"center\">Size/Values</th>\n    <th align=\"center\">Font size</th>\n    <th align=\"center\">Button height</th>\n    <th align=\"center\">Example</th>\n  </tr>\n  <tr>\n    <th align=\"center\">s</th>\n    <td>13px</td>\n    <td>24px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;s&#39;\n  },\n  text : &#39;Small&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">m</th>\n    <td>13px</td>\n    <td>28px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;\n  },\n  text : &#39;Medium&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">l</th>\n    <td>15px</td>\n    <td>32px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;l&#39;\n  },\n  text : &#39;Large&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">xl</th>\n    <td>18px</td>\n    <td>38px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;xl&#39;\n  },\n  text : &#39;X-large&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"button-s-type-_type-\">Button&#39;s type <code>_type</code></h3>\n<p>The following types of button are available:</p>\n<ul>\n<li><p>link-button (<code>_link</code>). Has a mandatory attribute <code>url</code>. A link-button has an <code>&lt;a&gt;</code> attribute and the <code>url</code> value becomes a <code>href</code> attribute.</p>\n</li>\n<li><p>action  button (<code>_submit</code>). Should be a part of a form only.</p>\n</li>\n</ul>\n<p>The <code>_type</code> modifier is available for <em>simple</em> and <em>normal</em> themes.</p>\n<table>\n  <tr>\n    <th align=\"center\">Type/<br>Realisation</th>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td> <code>_link</code></td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : { type : &#39;link&#39; },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    type : &#39;link&#39;\n  },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <td><code>_submit</code></td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : { type : &#39;submit&#39; },\n    text : &#39;default&#39;\n}\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : {\n      theme : &#39;normal&#39;,\n      size : &#39;m&#39;,\n      type : &#39;submit&#39;\n    },\n    text : &#39;normal&#39;\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"button-s-states\">Button&#39;s states</h3>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If a <code>_disabled</code> modifier has <code>_true</code> value the button is visible, but is not available for user action.</p>\n<p>Disabled button cannot be focused by <code>Tab</code> pressing or mouse click.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_disabled_true&#39;,\n  mods : { disabled : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_disabled_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    disabled : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>If <code>focused</code> modifier has a <code>true</code> value the button is always focused. You can click the focused button using <code>Space</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<p>Available for all themes of block.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;_focused_true&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;,\n        focused : true\n    }\n}\n</code></pre>\n<h4 id=\"-_hovered-\"><code>_hovered</code></h4>\n<p>Defines the &quot;hover&quot; action.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_hovered_true&#39;,\n  mods : { hovered : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_hovered_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    hovered : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_pressed-\"><code>_pressed</code></h4>\n<p>Defines a &quot;pressed&quot; state of a button.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_pressed_true&#39;,\n  mods : { pressed : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_pressed_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    pressed : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_togglable-\"><code>_togglable</code></h4>\n<p>Determines the state of the pressed button when the first click the button presses it, and the second returns to its original state.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_togglable_true&#39;,\n  mods : { togglable : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_togglable_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    togglable : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_action-\"><code>_action</code></h4>\n<p>Visually detects the button on a page.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_action_true&#39;,\n  mods : { action : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_action_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    action : true\n  }\n}\n      </code></pre>\n  </td>\n  </tr>\n</table>\n\n<h4 id=\"pseudo-button-_pseudo-\">Pseudo button <code>_pseudo</code></h4>\n<p>If <code>pseudo</code> modifier has <code>true</code> value the button background becomes transparent. If pseudo button is disabled its boarders disappear.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true },\n    text : &#39;pseudo&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true, disabled : true },\n    text : &#39;pseudo&#39;\n}\n</code></pre>\n<h2 id=\"b-ock-s-elements\">B;ock&#39;s elements</h2>\n<p>The block is visually represented by the following elements:</p>\n<h3 id=\"__text\">__text</h3>\n<p>This element intended to set a text position in the button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } },\n    text : &#39;with icon&#39;\n}\n</code></pre>\n<h2 id=\"dependencies\">Dependencies</h2>\n<p>The <code>button</code> block depends on</p>\n<ul>\n<li><code>base-control</code>, that provides public API for the controls.<code>i-bem__dom</code></li>\n<li><code>i-bem__dom</code></li>\n</ul>\n\n<h1 id=\"icon\">icon</h1>\n<p><code>&lt;i&gt;</code>-based block for using as an element in other blocks, not for independent using. Picture is set as <code>background</code> property.</p>\n<p>In BEMJSON you can use both the modifier and the <code>url</code> field for a picture representation:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n     block : &#39;icon&#39;,\n     url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, mods : { social : &#39;twitter&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;checkbox&#39;,\n        mods : { theme : &#39;simple&#39;, type : &#39;button&#39; },\n        text : &#39;icon&#39;,\n        icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, url : &#39;../../../test.blocks/icon/_action/download.svg&#39; }\n    }\n</code></pre>\n"}]}}
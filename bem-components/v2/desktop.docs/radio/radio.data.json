{"en":{"name":"radio","examples":[{"content":[{"url":"desktop.examples/radio/L98T9NertqtVCJpvDLdlKg6huWI/L98T9NertqtVCJpvDLdlKg6huWI.en"},{"url":"desktop.examples/radio/pPPjX0UcGCQBYmUNCpE27JADBCU/pPPjX0UcGCQBYmUNCpE27JADBCU.en"},{"url":"desktop.examples/radio/RBPWsSDN_yrB6HXtmtrnXB3WSMY/RBPWsSDN_yrB6HXtmtrnXB3WSMY.en"},{"url":"desktop.examples/radio/TLM9QTv-Pjlfq-MNpduxyTgw0cg/TLM9QTv-Pjlfq-MNpduxyTgw0cg.en"},{"url":"desktop.examples/radio/wEYcA7ioT134yNzBSljZyhtiyg8/wEYcA7ioT134yNzBSljZyhtiyg8.en"},{"url":"desktop.examples/radio/xr-zTTUYS3DD_e4xJV6Yn3a3BPI/xr-zTTUYS3DD_e4xJV6Yn3a3BPI.en"},{"url":"desktop.examples/radio-group/3eOE97EmaqvVB-6XycKG7cpGY5Y/3eOE97EmaqvVB-6XycKG7cpGY5Y.en"},{"url":"desktop.examples/radio-group/3iTePRGPbj1_dKvtQGd2bMai-Ac/3iTePRGPbj1_dKvtQGd2bMai-Ac.en"},{"url":"desktop.examples/radio-group/7DyHwAbpYHpT5TcturqqL57OMbA/7DyHwAbpYHpT5TcturqqL57OMbA.en"},{"url":"desktop.examples/radio-group/8YPfPGsfRbco7RPs63oF47Bj5d8/8YPfPGsfRbco7RPs63oF47Bj5d8.en"},{"url":"desktop.examples/radio-group/z74-X9bjA8-9fMUlFI8AH9R8Dfo/z74-X9bjA8-9fMUlFI8AH9R8Dfo.en"}]}],"description":[{"content":"<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"}]},"ru":{"name":"radio","examples":[{"content":[{"url":"desktop.examples/radio/L98T9NertqtVCJpvDLdlKg6huWI/L98T9NertqtVCJpvDLdlKg6huWI.ru"},{"url":"desktop.examples/radio/pPPjX0UcGCQBYmUNCpE27JADBCU/pPPjX0UcGCQBYmUNCpE27JADBCU.ru"},{"url":"desktop.examples/radio/RBPWsSDN_yrB6HXtmtrnXB3WSMY/RBPWsSDN_yrB6HXtmtrnXB3WSMY.ru"},{"url":"desktop.examples/radio/TLM9QTv-Pjlfq-MNpduxyTgw0cg/TLM9QTv-Pjlfq-MNpduxyTgw0cg.ru"},{"url":"desktop.examples/radio/wEYcA7ioT134yNzBSljZyhtiyg8/wEYcA7ioT134yNzBSljZyhtiyg8.ru"},{"url":"desktop.examples/radio/xr-zTTUYS3DD_e4xJV6Yn3a3BPI/xr-zTTUYS3DD_e4xJV6Yn3a3BPI.ru"},{"url":"desktop.examples/radio-group/3eOE97EmaqvVB-6XycKG7cpGY5Y/3eOE97EmaqvVB-6XycKG7cpGY5Y.ru"},{"url":"desktop.examples/radio-group/3iTePRGPbj1_dKvtQGd2bMai-Ac/3iTePRGPbj1_dKvtQGd2bMai-Ac.ru"},{"url":"desktop.examples/radio-group/7DyHwAbpYHpT5TcturqqL57OMbA/7DyHwAbpYHpT5TcturqqL57OMbA.ru"},{"url":"desktop.examples/radio-group/8YPfPGsfRbco7RPs63oF47Bj5d8/8YPfPGsfRbco7RPs63oF47Bj5d8.ru"},{"url":"desktop.examples/radio-group/z74-X9bjA8-9fMUlFI8AH9R8Dfo/z74-X9bjA8-9fMUlFI8AH9R8Dfo.ru"}]}],"description":[{"content":"<h1 id=\"radio\">radio</h1>\n<p>Блок <code>radio</code> – «радиопереключатель», «радиокнопка». Используется для создания одиночных радиобоксов.</p>\n<p>В реализации блока используется функциональность нативного контрола <code>input</code> с атрибутом <code>type=&quot;radio&quot;</code> – <code>&lt;input name=&quot;name&quot; type=&quot;radio&quot;&gt;</code>, который скрывается при использовании модификатора <code>_theme</code>.</p>\n<p>Блок <code>radio</code> в результате BEMHTML-преобразований на странице отображается как HTML-тег <code>&lt;label&gt;</code> – контейнер, содержащий:</p>\n<ul>\n<li>элемент <code>radio__box</code>, содержащий скрытый контрол <code>input</code> (элемент <code>__control</code>);</li>\n<li>подпись к радиокнопке, если задан BEMJSON-параметр <code>text</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON-блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td><code>name</code></td>\n        <td><code>String|Number</code></td>\n        <td>Имя радиокнопки. Преобразуется в HTML-атрибут <code>name</code> вложенного блока <code>input</code>.</td>\n    </tr>\n    <tr>\n        <td><code>text</code></td>\n        <td><code>String|Number</code></td>\n        <td>Подпись, отображаемая для радиокнопки.</td>\n    </tr>\n    <tr>\n        <td><code>val</code></td>\n        <td><code>String|Number</code></td>\n        <td>Значение, возвращаемое контролом радиопереключателя <code>radio__control</code>, если выбрана текущая радиокнопка. Преобразуется в HTML-атрибут <code>value</code> вложенного блока <code>input</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    name : &#39;radio-simple&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;simple&#39; },\n    name : &#39;radio-simple&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры радиопереключателя <code>_size</code></h3>\n<p>Задает размер всем типам радиопереключателей. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>В зависимости от значения модификатора <code>_type</code>, доступны следующие размеры реализации блока:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Обычный радиопереключатель</th>\n        <th>Кнопочный радиопереключатель (<code>_type_button</code>)</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>–</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>–</td>\n        <td>+</td>\n</table>\n\n\n<h3 id=\"-_type-\">Тип радиопереключателя <code>_type</code></h3>\n<p>Модификатор <code>_type</code> со значением <code>_button</code> используется для создания кнопочного радиопереключателя – кнопки (блок <code>button</code>) с установленным модификатором <code>_togglable_radio</code>.</p>\n<p>При этом к блоку <code>button</code> примешивается блок <code>radio</code>, а контентом кнопки становится <code>radio__control</code>.</p>\n<p>Кроме того, при установленном модификаторе <code>_type_button</code> для блока задается HTML-атрибут <code>role=&quot;button&quot;</code>.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Кнопочный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        type : &#39;button&#39;\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-_disabled-\">Неактивен <code>_disabled</code></h3>\n<p>В состоянии «неактивен» радиопереключатель отображается, но недоступен для действий пользователя.</p>\n<p>Такой радиопереключатель не будет получать фокус (модификатор <code>_focused</code>).</p>\n<p>При установке модификатора <code>_disabled</code> для радиопереключателя не будут:</p>\n<ul>\n<li>устанавливаться модификаторы состояния <code>_hovered</code>, <code>_pressed</code> и <code>_focused</code>;</li>\n<li>изменяться значение модификатора <code>_checked</code>.</li>\n</ul>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, disabled : true },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        focused : true\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h4 id=\"-_checked-\">Выбран <code>_checked</code></h4>\n<p>Модификатор <code>_checked</code> указывает на то, что радиопереключатель выбран (отмечен).</p>\n<p>Модификатор устанавливается по:</p>\n<ul>\n<li>щелчку мыши по блоку (при повторных щелчках модификатор сохраняется);</li>\n<li>нажатию клавиш <code>Enter</code> или <code>Space</code> (возможность использования клавиши <code>Enter</code> зависит от браузера), если радиопереключатель находится в фокусе (модификатор <code>_focused</code>);</li>\n<li>нажатию клавиш стрелок, если фокус установлен на соседний радиопереключатель в радиогруппе или в блоке, содержащем несколько блоков <code>radio</code>.</li>\n</ul>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, checked : true },\n    name : &#39;radio-norma&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h4 id=\"-_type_button-\">Состояния, доступные с модификатором <code>_type_button</code></h4>\n<p>При установленном модификаторе <code>_type_button</code> к блоку <code>button</code> примешивается блок <code>radio</code>. Как следствие, для блока с модификатором <code>_type_button</code> доступны состояния блока <code>button</code>:</p>\n<ul>\n<li><code>_hovered</code> – под курсором;</li>\n<li><code>_pressed</code> – кнопка нажата.</li>\n</ul>\n<h2 id=\"-\">Элементы</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>__box</code> используется в стандартной реализации блока как контейнер, содержащий контрол радиокнопки (элемент <code>__control</code>). В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;span&gt;</code>.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>Элемент <code>__control</code> – контрол радиокнопки. В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;input&gt;</code> с атрибутом <code>type=&quot;radio&quot;</code>. По умолчанию элемент скрыт. В блоке используется только его функциональность.</p>\n<h2 id=\"-\">Зависимости</h2>\n<p>Блок <code>radio</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>jquery__event</code></li>\n<li><code>__box</code></li>\n<li><code>__control</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"}]}}
{
    "repo": "bem-components",
    "ref": "v2",
    "url": "http://github.com/bem/bem-components",
    "readme": {
        "en": "<h1 id=\"bem-components-library--!-build-status--https:--travis-ci-org-bem-bem-components-svg-branch=v2---https:--travis-ci-org-bem-bem-components---!-coverage-status--https:--coveralls-io-repos-bem-bem-components-badge-png-branch=v2---https:--coveralls-io-r-bem-bem-components-branch=v2-\">BEM Components Library <a href=\"https://travis-ci.org/bem/bem-components\"><img src=\"https://travis-ci.org/bem/bem-components.svg?branch=v2\" alt=\"Build Status\"></a> <a href=\"https://coveralls.io/r/bem/bem-components?branch=v2\"><img src=\"https://coveralls.io/repos/bem/bem-components/badge.png?branch=v2\" alt=\"Coverage Status\"></a></h1>\n<h2 id=\"что-это-\">Что это?</h2>\n<p>Библиотека блоков для управления формами.\nСодержит абстрагированные от дизайна базовые реализации.</p>\n<h2 id=\"использование\">Использование</h2>\n<p>Подключить библиотеку в проект любым известным способом.</p>\n<h2 id=\"поддерживаемые-браузеры\">Поддерживаемые браузеры</h2>\n<ul>\n<li>Desktop:<ul>\n<li>Firefox 24+</li>\n<li>Chrome last 2 versions</li>\n<li>Safari 6.0+</li>\n<li>Opera 12.1+</li>\n<li>Internet Explorer 9+</li>\n</ul>\n</li>\n<li>Touch-pad:<ul>\n<li>Android 4+</li>\n<li>iOS 5+</li>\n</ul>\n</li>\n<li>Touch-phone:<ul>\n<li>Android 4+</li>\n<li>iOS 6+</li>\n<li>Windows Phone 8+ (Internet Explorer 10+)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"состав\">Состав</h2>\n<h3 id=\"уровни\">Уровни</h3>\n<h3 id=\"блоки\">Блоки</h3>\n<h3 id=\"технологии\">Технологии</h3>\n<h2 id=\"история-изменений\">История изменений</h2>\n<p>История изменений доступна на <a href=\"CHANGELOG.md\">отдельной странице</a>.</p>\n<h2 id=\"миграция\">Миграция</h2>\n<p>Миграция описана на <a href=\"MIGRATION.md\">отдельной странице</a>.</p>\n<h2 id=\"разработка\">Разработка</h2>\n<h3 id=\"рабочая-копия\">Рабочая копия</h3>\n<ol>\n<li><p>Получаем исходники:</p>\n<pre><code class=\"lang-bash\">$ git clone -b v2 git://github.com/bem/bem-components.git\n$ cd bem-components\n</code></pre>\n</li>\n<li><p>Устанавливаем зависимости:</p>\n<pre><code class=\"lang-bash\">$ npm install\n</code></pre>\n<p>Для последующего запуска локально установленных bem-tools нам потребуется <code>export PATH=./node_modules/.bin:$PATH</code> или любой альтернативный способ.</p>\n</li>\n<li><p>Устанавливаем зависимые библиотеки:</p>\n<pre><code class=\"lang-bash\">$ bower-npm-install\n</code></pre>\n</li>\n<li><p>Собираем примеры и тесты:</p>\n<pre><code class=\"lang-bash\">$ bem make sets\n</code></pre>\n</li>\n<li><p>Запускаем разработческий сервер:</p>\n<pre><code class=\"lang-bash\">$ bem server\n</code></pre>\n</li>\n<li><p>Проверяем code-style</p>\n<pre><code class=\"lang-bash\">$ npm run lint\n</code></pre>\n</li>\n</ol>\n<h3 id=\"внесение-изменений\">Внесение изменений</h3>\n<ol>\n<li><a href=\"https://github.com/bem/bem-components/issues/new\">Создать issue</a> с описанием сути изменений.</li>\n<li>Определить в какую версию необходимо внести изменения.</li>\n<li>Сделать feature-branch с указанием номера issue и версии (<code>issues/&lt;номер issue&gt;@v&lt;номер версии&gt;</code>) на основе ветки версии.\nНапример для issue с номером 42 и версией 1: <code>git checkout -b issues/42@v1 v1</code>. Если изменения нужно внести в несколько версий, то для каждой из версий создаётся отдельная ветка.</li>\n<li>Внести изменения (для версии v2, можно локально проверить, что ничего не сломалось, запустив <code>npm test</code>).</li>\n<li>Закоммитить и сделать <code>push</code>. Если это необходимо, то нужно сделать <code>rebase</code> от базовой ветки версии.</li>\n<li>Создать pull-request на основе созданной ветки (или несколько pull-request&#39;ов для случая изменений в нескольких версиях).</li>\n<li>Любым способом связать pull-request и issue (например, c помощью <a href=\"https://github.com/blog/1506-closing-issues-via-pull-requests\">комментария</a>).</li>\n<li>Ждать закрытия pull-request и issue ;-)</li>\n</ol>\n<h3 id=\"модульное-тестирование\">Модульное тестирование</h3>\n",
        "ru": "<h1 id=\"bem-components-library--!-build-status--https:--travis-ci-org-bem-bem-components-svg-branch=v2---https:--travis-ci-org-bem-bem-components---!-coverage-status--https:--coveralls-io-repos-bem-bem-components-badge-png-branch=v2---https:--coveralls-io-r-bem-bem-components-branch=v2-\">BEM Components Library <a href=\"https://travis-ci.org/bem/bem-components\"><img src=\"https://travis-ci.org/bem/bem-components.svg?branch=v2\" alt=\"Build Status\"></a> <a href=\"https://coveralls.io/r/bem/bem-components?branch=v2\"><img src=\"https://coveralls.io/repos/bem/bem-components/badge.png?branch=v2\" alt=\"Coverage Status\"></a></h1>\n<h2 id=\"что-это-\">Что это?</h2>\n<p>Библиотека блоков для управления формами.\nСодержит абстрагированные от дизайна базовые реализации.</p>\n<h2 id=\"использование\">Использование</h2>\n<p>Подключить библиотеку в проект любым известным способом.</p>\n<h2 id=\"поддерживаемые-браузеры\">Поддерживаемые браузеры</h2>\n<ul>\n<li>Desktop:<ul>\n<li>Firefox 24+</li>\n<li>Chrome last 2 versions</li>\n<li>Safari 6.0+</li>\n<li>Opera 12.1+</li>\n<li>Internet Explorer 9+</li>\n</ul>\n</li>\n<li>Touch-pad:<ul>\n<li>Android 4+</li>\n<li>iOS 5+</li>\n</ul>\n</li>\n<li>Touch-phone:<ul>\n<li>Android 4+</li>\n<li>iOS 6+</li>\n<li>Windows Phone 8+ (Internet Explorer 10+)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"состав\">Состав</h2>\n<h3 id=\"уровни\">Уровни</h3>\n<h3 id=\"блоки\">Блоки</h3>\n<h3 id=\"технологии\">Технологии</h3>\n<h2 id=\"история-изменений\">История изменений</h2>\n<p>История изменений доступна на <a href=\"CHANGELOG.md\">отдельной странице</a>.</p>\n<h2 id=\"миграция\">Миграция</h2>\n<p>Миграция описана на <a href=\"MIGRATION.md\">отдельной странице</a>.</p>\n<h2 id=\"разработка\">Разработка</h2>\n<h3 id=\"рабочая-копия\">Рабочая копия</h3>\n<ol>\n<li><p>Получаем исходники:</p>\n<pre><code class=\"lang-bash\">$ git clone -b v2 git://github.com/bem/bem-components.git\n$ cd bem-components\n</code></pre>\n</li>\n<li><p>Устанавливаем зависимости:</p>\n<pre><code class=\"lang-bash\">$ npm install\n</code></pre>\n<p>Для последующего запуска локально установленных bem-tools нам потребуется <code>export PATH=./node_modules/.bin:$PATH</code> или любой альтернативный способ.</p>\n</li>\n<li><p>Устанавливаем зависимые библиотеки:</p>\n<pre><code class=\"lang-bash\">$ bower-npm-install\n</code></pre>\n</li>\n<li><p>Собираем примеры и тесты:</p>\n<pre><code class=\"lang-bash\">$ bem make sets\n</code></pre>\n</li>\n<li><p>Запускаем разработческий сервер:</p>\n<pre><code class=\"lang-bash\">$ bem server\n</code></pre>\n</li>\n<li><p>Проверяем code-style</p>\n<pre><code class=\"lang-bash\">$ npm run lint\n</code></pre>\n</li>\n</ol>\n<h3 id=\"внесение-изменений\">Внесение изменений</h3>\n<ol>\n<li><a href=\"https://github.com/bem/bem-components/issues/new\">Создать issue</a> с описанием сути изменений.</li>\n<li>Определить в какую версию необходимо внести изменения.</li>\n<li>Сделать feature-branch с указанием номера issue и версии (<code>issues/&lt;номер issue&gt;@v&lt;номер версии&gt;</code>) на основе ветки версии.\nНапример для issue с номером 42 и версией 1: <code>git checkout -b issues/42@v1 v1</code>. Если изменения нужно внести в несколько версий, то для каждой из версий создаётся отдельная ветка.</li>\n<li>Внести изменения (для версии v2, можно локально проверить, что ничего не сломалось, запустив <code>npm test</code>).</li>\n<li>Закоммитить и сделать <code>push</code>. Если это необходимо, то нужно сделать <code>rebase</code> от базовой ветки версии.</li>\n<li>Создать pull-request на основе созданной ветки (или несколько pull-request&#39;ов для случая изменений в нескольких версиях).</li>\n<li>Любым способом связать pull-request и issue (например, c помощью <a href=\"https://github.com/blog/1506-closing-issues-via-pull-requests\">комментария</a>).</li>\n<li>Ждать закрытия pull-request и issue ;-)</li>\n</ol>\n<h3 id=\"модульное-тестирование\">Модульное тестирование</h3>\n"
    },
    "migration": {
        "en": "<h1 id=\"миграция\">Миграция</h1>\n",
        "ru": "<h1 id=\"миграция\">Миграция</h1>\n"
    },
    "changelog": {
        "en": "<h1 id=\"история-изменений\">История изменений</h1>\n<h2 id=\"2-0-0\">2.0.0</h2>\n<h3 id=\"крупные-изменения\">Крупные изменения</h3>\n<ul>\n<li>Переход на модульную систему <a href=\"https://github.com/ymaps/modules\">https://github.com/ymaps/modules</a>.</li>\n</ul>\n<h3 id=\"остальные-изменения\">Остальные изменения</h3>\n<ul>\n<li>Понятия автофокуса для блока <code>input</code> изменено.\nБольше нет js-параметра <code>autoFocus</code>, вместо него нужно использовать модификатор <code>_autofocus_focused</code>.\nМодификатор <code>_autofocus_yes</code> теперь называется <code>_autofocus_hidden</code>.</li>\n</ul>\n",
        "ru": "<h1 id=\"история-изменений\">История изменений</h1>\n<h2 id=\"2-0-0\">2.0.0</h2>\n<h3 id=\"крупные-изменения\">Крупные изменения</h3>\n<ul>\n<li>Переход на модульную систему <a href=\"https://github.com/ymaps/modules\">https://github.com/ymaps/modules</a>.</li>\n</ul>\n<h3 id=\"остальные-изменения\">Остальные изменения</h3>\n<ul>\n<li>Понятия автофокуса для блока <code>input</code> изменено.\nБольше нет js-параметра <code>autoFocus</code>, вместо него нужно использовать модификатор <code>_autofocus_focused</code>.\nМодификатор <code>_autofocus_yes</code> теперь называется <code>_autofocus_hidden</code>.</li>\n</ul>\n"
    },
    "levels": [
        {
            "name": "desktop.docs",
            "blocks": [
                {
                    "name": "attach",
                    "jsdoc": "",
                    "data": {
                        "en": {
                            "name": "attach",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/attach/2LkwTGo-4d7fxgnG4skRO2tHoic/2LkwTGo-4d7fxgnG4skRO2tHoic.en"
                                        },
                                        {
                                            "url": "desktop.examples/attach/5xB7ZOo0QLcc5PePNxJjLhIa9oY/5xB7ZOo0QLcc5PePNxJjLhIa9oY.en"
                                        },
                                        {
                                            "url": "desktop.examples/attach/8cgGhCbp_iZMx8M367v3_N8eRcg/8cgGhCbp_iZMx8M367v3_N8eRcg.en"
                                        },
                                        {
                                            "url": "desktop.examples/attach/9cWvWwDSqNsB1vRw6nid96kdkoo/9cWvWwDSqNsB1vRw6nid96kdkoo.en"
                                        },
                                        {
                                            "url": "desktop.examples/attach/c3tTTsQQpS_wyaTRUODJQMWC3x8/c3tTTsQQpS_wyaTRUODJQMWC3x8.en"
                                        },
                                        {
                                            "url": "desktop.examples/attach/dMMLn3JVWVrtmilJB6c2-UUGyZc/dMMLn3JVWVrtmilJB6c2-UUGyZc.en"
                                        },
                                        {
                                            "url": "desktop.examples/attach/LYQ2mpdVgO15THXOFHSn3LtLeWc/LYQ2mpdVgO15THXOFHSn3LtLeWc.en"
                                        },
                                        {
                                            "url": "desktop.examples/attach/nwytMff5nyXPoczzUvwVbgD7YQQ/nwytMff5nyXPoczzUvwVbgD7YQQ.en"
                                        },
                                        {
                                            "url": "desktop.examples/attach/TlYDF2oQVo93Y7ocT-4hcsjHHB8/TlYDF2oQVo93Y7ocT-4hcsjHHB8.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"attach\">attach</h1>\n<p>The <strong>attach</strong> block is used to send a file to a server.</p>\n<p>The block is visually represented by:</p>\n<ul>\n<li>button (<code>__button</code> based on the <a href=\"../button/\">button</a> block) that opens a system window for a file download</li>\n<li>deletion cross element (<code>__clear</code>)</li>\n</ul>\n<p>Block functionality does not support:</p>\n<ul>\n<li>more than one file attaching</li>\n<li>drag-and-drop</li>\n</ul>\n<p>Block <strong>attach</strong> provides native control functionality. The control is hidden. In MSIE8 block <strong>attach</strong> is rendered as native control <code>&lt;input type=&quot;file&quot;&gt;</code>.</p>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"themes-of-a-block\">Themes of a block</h3>\n<p><code>_theme</code></p>\n<p>The block supports only the <em>simple</em> theme.</p>\n<p>If theme is not specified, the block applies only default values:</p>\n<ul>\n<li>Theme of a button: native representation of a button by the browser.</li>\n<li>Localization: en</li>\n<li>Button&#39;s message text (<code>__button</code>): &quot;Choose file&quot;</li>\n<li>Text message rendered with no file selected (<code>__no-file</code>): &quot;no file selected&quot;</li>\n</ul>\n<p>Following example demonstrates this:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39; },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h3 id=\"block-state\">Block state</h3>\n<p><code>_disabled_true</code></p>\n<ul>\n<li>disabled\nIf block is disabled a file selection button becomes unavailable for user&#39;s manipulations.</li>\n</ul>\n<p>The button is active by default.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { disabled : true },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39;, disabled : true },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<p>The block is visually represented by the following elements:</p>\n<h3 id=\"__button\">__button</h3>\n<p>A mandatory element.</p>\n<p>A file selection button. It aims to open the system window for a file download. It is based on a <a href=\"../button/\">button</a> block and inherites its behavior (JS) and formatting (CSS).</p>\n<p>If a theme <em>simple</em> is not declared, the button&#39;s text &quot;Choose file&quot; is used by default.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39; },\n        button : {\n            block : &#39;button&#39;,\n            mods : { theme : &#39;simple&#39; },\n            icon : { elem : &#39;icon&#39; }\n        },\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>A native control of file attaching.</p>\n<p>It is rendered by BEMHTML and BH template engines as a native control of file attaching with attributes: <code>&lt;input class=&quot;file-name&quot; type=&quot;file&quot;&gt;</code>.</p>\n<h3 id=\"__no-file\">__no-file</h3>\n<p>Element for description rendering with no file selected.</p>\n<p>If a theme <em>simple</em> is not declared, the text message &quot;no file selected&quot; is used by default.</p>\n<h3 id=\"__file\">__file</h3>\n<p>A container for a attached file information.</p>\n<p>It consists of the following block&#39;s elements:</p>\n<ul>\n<li><code>__text</code></li>\n<li><code>__clear</code></li>\n</ul>\n<h3 id=\"__text\">__text</h3>\n<p>File name. It appears after some file is attached.</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Clear attachment button (deletion cross element). It appears after some file is attached.</p>\n<p>The element is available for a <em>simple</em> theme of <strong>attach</strong> block.</p>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n\n<h1 id=\"button\">button</h1>\n<p>The <strong>button</strong> block is used for different types of buttons creating. It allows you to manage size, sate, content and appearance of a button.</p>\n<p>In MSIE8 block <strong>button</strong> is rendered as native button <code>&lt;button&gt;</code>; <code>link-button</code> is rendered as native link <code>&lt;a&gt;</code>.</p>\n<h2 id=\"button-use-cases\">Button use cases</h2>\n<table>\n  <tr>\n    <th align=\"center\">Type</th>\n    <th align=\"center\">Description</th>\n    <th align=\"center\">Example</th>\n  </tr>\n  <tr>\n    <td>Button</td>\n    <td>Used by default.</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;\n  },\n  icon : {\n    block : &#39;icon&#39;,\n    mods : {\n      action : &#39;download&#39;\n    }\n  }\n}\n      </code></pre>\n    </td>\n   <tr>\n    <td>Link-button</td>\n    <td>A button that provides link functionality. <br>Has an optional attribute <code>url</code><br> to specify the address to which to <br>navigate.</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    type : &#39;link&#39;\n  },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n   </tr>\n   <tr>\n    <td>Action button</td>\n    <td>Designed to send data to the server (submit).<br> Always located in the form. <br>Set a <code>type</code> modifier with <code>submit</code> value in <br>BEMJSON to create an action button.\n    </td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : {\n      theme : &#39;normal&#39;,\n      size : &#39;m&#39;,\n      type : &#39;submit&#39;\n    },\n    text : &#39;button&#39;\n  }\n}\n      </code></pre>\n    </td>\n   </tr>\n</table>\n\n<h2 id=\"block-s-api\">Block&#39;s API</h2>\n<p>The public methods of the block are:</p>\n<table>\n  <tr>\n    <th align=\"center\">Method</th>\n    <th align=\"center\">Description</th>\n  </tr>\n  <tr>\n    <td>getText</td>\n    <td>Returns text of the button {String}.</td>\n  </tr>\n  <tr>\n    <td>setText</td>\n    <td>Sets text to the button.</td>\n  </tr>\n</table>\n\n<h2 id=\"valid-block-s-attributes\">Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n  <tr>\n    <th align=\"center\">Attributes</th>\n    <th align=\"center\">Type</th>\n    <th align=\"center\">Description</th>\n  </tr>\n  <tr>\n    <td>text</td>\n    <td>String</td>\n    <td>Text of the button.</td>\n   </tr>\n   <tr>\n    <td>icon</td>\n    <td>BEMJSON</td>\n    <td>The <strong>icon</strong> block.</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>String</td>\n    <td>URL address. If URL address is specified the <br>button provides a link functionality.</td>\n  </tr>\n</table>\n\n<p>The other valid block&#39;s attributes could be specified in the <code>attrs</code> field in BEMJSON.</p>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"the-themes-_theme-\">The themes <code>_theme</code></h3>\n<p>The block supports the follwing themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>It a <code>_theme</code> modifier is not specified the native representation (<code>default</code>) of a control is available.</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"the-sizes-_size-\">The sizes <code>_size</code></h3>\n<p>Mandatory modifier for <em>normal</em> theme only.\nProvides the size value to all types of buttons.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following example demonstrates this:</p>\n<table>\n  <tr>\n    <th align=\"center\">Size/Values</th>\n    <th align=\"center\">Font size</th>\n    <th align=\"center\">Button height</th>\n    <th align=\"center\">Example</th>\n  </tr>\n  <tr>\n    <th align=\"center\">s</th>\n    <td>13px</td>\n    <td>24px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;s&#39;\n  },\n  text : &#39;Small&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">m</th>\n    <td>13px</td>\n    <td>28px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;\n  },\n  text : &#39;Medium&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">l</th>\n    <td>15px</td>\n    <td>32px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;l&#39;\n  },\n  text : &#39;Large&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">xl</th>\n    <td>18px</td>\n    <td>38px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;xl&#39;\n  },\n  text : &#39;X-large&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"button-s-type-_type-\">Button&#39;s type <code>_type</code></h3>\n<p>The following types of button are available:</p>\n<ul>\n<li><p>link-button (<code>_link</code>). Has a mandatory attribute <code>url</code>. A link-button has an <code>&lt;a&gt;</code> attribute and the <code>url</code> value becomes a <code>href</code> attribute.</p>\n</li>\n<li><p>action  button (<code>_submit</code>). Should be a part of a form only.</p>\n</li>\n</ul>\n<p>The <code>_type</code> modifier is available for <em>simple</em> and <em>normal</em> themes.</p>\n<table>\n  <tr>\n    <th align=\"center\">Type/<br>Realisation</th>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td> <code>_link</code></td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : { type : &#39;link&#39; },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    type : &#39;link&#39;\n  },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <td><code>_submit</code></td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : { type : &#39;submit&#39; },\n    text : &#39;default&#39;\n}\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : {\n      theme : &#39;normal&#39;,\n      size : &#39;m&#39;,\n      type : &#39;submit&#39;\n    },\n    text : &#39;normal&#39;\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"button-s-states\">Button&#39;s states</h3>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If a <code>_disabled</code> modifier has <code>_true</code> value the button is visible, but is not available for user action.</p>\n<p>Disabled button cannot be focused by <code>Tab</code> pressing or mouse click.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_disabled_true&#39;,\n  mods : { disabled : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_disabled_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    disabled : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>If <code>focused</code> modifier has a <code>true</code> value the button is always focused. You can click the focused button using <code>Space</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<p>Available for all themes of block.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;_focused_true&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;,\n        focused : true\n    }\n}\n</code></pre>\n<h4 id=\"-_hovered-\"><code>_hovered</code></h4>\n<p>Defines the &quot;hover&quot; action.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_hovered_true&#39;,\n  mods : { hovered : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_hovered_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    hovered : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_pressed-\"><code>_pressed</code></h4>\n<p>Defines a &quot;pressed&quot; state of a button.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_pressed_true&#39;,\n  mods : { pressed : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_pressed_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    pressed : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_togglable-\"><code>_togglable</code></h4>\n<p>Determines the state of the pressed button when the first click the button presses it, and the second returns to its original state.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_togglable_true&#39;,\n  mods : { togglable : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_togglable_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    togglable : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_action-\"><code>_action</code></h4>\n<p>Visually detects the button on a page.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_action_true&#39;,\n  mods : { action : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_action_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    action : true\n  }\n}\n      </code></pre>\n  </td>\n  </tr>\n</table>\n\n<h4 id=\"pseudo-button-_pseudo-\">Pseudo button <code>_pseudo</code></h4>\n<p>If <code>pseudo</code> modifier has <code>true</code> value the button background becomes transparent. If pseudo button is disabled its boarders disappear.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true },\n    text : &#39;pseudo&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true, disabled : true },\n    text : &#39;pseudo&#39;\n}\n</code></pre>\n<h2 id=\"b-ock-s-elements\">B;ock&#39;s elements</h2>\n<p>The block is visually represented by the following elements:</p>\n<h3 id=\"__text\">__text</h3>\n<p>This element intended to set a text position in the button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } },\n    text : &#39;with icon&#39;\n}\n</code></pre>\n<h2 id=\"dependencies\">Dependencies</h2>\n<p>The <code>button</code> block depends on</p>\n<ul>\n<li><code>base-control</code>, that provides public API for the controls.<code>i-bem__dom</code></li>\n<li><code>i-bem__dom</code></li>\n</ul>\n\n<h1 id=\"icon\">icon</h1>\n<p><code>&lt;i&gt;</code>-based block for using as an element in other blocks, not for independent using. Picture is set as <code>background</code> property.</p>\n<p>In BEMJSON you can use both the modifier and the <code>url</code> field for a picture representation:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n     block : &#39;icon&#39;,\n     url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, mods : { social : &#39;twitter&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;checkbox&#39;,\n        mods : { theme : &#39;simple&#39;, type : &#39;button&#39; },\n        text : &#39;icon&#39;,\n        icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, url : &#39;../../../test.blocks/icon/_action/download.svg&#39; }\n    }\n</code></pre>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "attach",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/attach/2LkwTGo-4d7fxgnG4skRO2tHoic/2LkwTGo-4d7fxgnG4skRO2tHoic.ru"
                                        },
                                        {
                                            "url": "desktop.examples/attach/5xB7ZOo0QLcc5PePNxJjLhIa9oY/5xB7ZOo0QLcc5PePNxJjLhIa9oY.ru"
                                        },
                                        {
                                            "url": "desktop.examples/attach/8cgGhCbp_iZMx8M367v3_N8eRcg/8cgGhCbp_iZMx8M367v3_N8eRcg.ru"
                                        },
                                        {
                                            "url": "desktop.examples/attach/9cWvWwDSqNsB1vRw6nid96kdkoo/9cWvWwDSqNsB1vRw6nid96kdkoo.ru"
                                        },
                                        {
                                            "url": "desktop.examples/attach/c3tTTsQQpS_wyaTRUODJQMWC3x8/c3tTTsQQpS_wyaTRUODJQMWC3x8.ru"
                                        },
                                        {
                                            "url": "desktop.examples/attach/dMMLn3JVWVrtmilJB6c2-UUGyZc/dMMLn3JVWVrtmilJB6c2-UUGyZc.ru"
                                        },
                                        {
                                            "url": "desktop.examples/attach/LYQ2mpdVgO15THXOFHSn3LtLeWc/LYQ2mpdVgO15THXOFHSn3LtLeWc.ru"
                                        },
                                        {
                                            "url": "desktop.examples/attach/nwytMff5nyXPoczzUvwVbgD7YQQ/nwytMff5nyXPoczzUvwVbgD7YQQ.ru"
                                        },
                                        {
                                            "url": "desktop.examples/attach/TlYDF2oQVo93Y7ocT-4hcsjHHB8/TlYDF2oQVo93Y7ocT-4hcsjHHB8.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"attach\">attach</h1>\n<p>Блок <code>attach</code> служит для загрузки файла, предназначенного для отправки на сервер.</p>\n<p>По умолчанию блок визуально представлен кнопкой на основе блока <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a>, открывающей системное окно загрузки файла, и текстовым сообщением «Файл не выбран». После загрузки файла отображаются следующие элементы:</p>\n<ul>\n<li>иконка файла (блок <code>icon</code>);</li>\n<li>имя файла (<code>__text</code>);</li>\n<li>крестик для отмены (<code>__clear</code>).</li>\n</ul>\n<p>Не позволяет прикреплять несколько файлов и не поддерживает drag-and-drop.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы оформления  <code>_theme</code></h3>\n<p>Блок представлен только в теме <em>simple</em>.</p>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    button : &#39;Выберите файл&#39;,\n    noFileText : &#39;Файл не выбран&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    mods : { theme : &#39;simple&#39; },\n    button : &#39;Выберите файл&#39;,\n    noFileText : &#39;Файл не выбран&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии блока «неактивен» кнопка выбора становится недоступной для действий пользователя.</p>\n<p>Если модификатор <code>disabled</code> не выбран, кнопка по умолчанию активна.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    mods : { theme : &#39;simple&#39;, disabled : true },\n    button : &#39;Выберите файл&#39;,\n    noFileText : &#39;файл не выбран&#39;\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__button\">__button</h3>\n<p>Обязательный элемент.\nКнопка выбора файла. Открывает системное окно загрузки файла. Создается на основе блока <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a> и использует его поведение (JS) и внешний вид (CSS). Контент кнопки задается во входных данных.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    mods : { theme : &#39;simple&#39; },\n    button : {\n        block : &#39;button&#39;,\n        mods : { theme : &#39;simple&#39; },\n        icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; },\n        text: &#39;Выберите файл&#39;\n        }\n    },\n    noFileText : &#39;Файл не выбран&#39;\n}\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>Нативный контрол «прикрепить файл».</p>\n<p>Преобразуется BEMHTML- и BH-шаблонами в нативный элемент прикрепления файла с атрибутами <code>&lt;input class=&quot;attach__control&quot; type=&quot;file&quot;&gt;</code>.</p>\n<h3 id=\"__no-file\">__no-file</h3>\n<p>Элемент для отображения текста, когда файл не выбран.</p>\n<p>Если тема <em>simple</em> не указана для блока <code>attach</code>, будет отображаться значение нативного контрола – «Файл не выбран».</p>\n<h3 id=\"__file\">__file</h3>\n<p>Контейнер с информацией о прикрепленном файле.</p>\n<p>Формируется из следующих элементов блока:</p>\n<ul>\n<li><code>__text</code></li>\n<li><code>__clear</code></li>\n</ul>\n<p>Может содержать блок <code>icon</code>. В зависимости от типа файла, блоку <code>icon</code> добавляется соответствующий модификатор, которому будет назначена иконка типа файла.</p>\n<h3 id=\"__text\">__text</h3>\n<p>Имя файла. Появляется после прикрепления файла.</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Кнопка отмены выбранного файла (крестик). Появляется после прикрепления файла.</p>\n<p>Элемент реализован для темы <em>simple</em>.</p>\n<h3 id=\"-\">Зависимости блока</h3>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n<li><code>icon</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n\n<h1 id=\"button\">button</h1>\n<p>Блок <code>button</code> используется для создания различных типов кнопок и предоставляет возможность изменять их размер, состояние, содержимое и внешний вид.</p>\n<h2 id=\"-\">Варианты использования кнопок</h2>\n<ul>\n<li>Обычная кнопка – применяется для любых кнопок веб-интерфейса; используется по умолчанию.</li>\n<li>Кнопка-ссылка – применяется для перехода по ссылке. Задается модификатором <code>_type</code> со значением <code>_link</code>.</li>\n<li>Кнопка действия – предназначена для отправки данных на сервер (submit). Всегда располагается в форме. Задается через атрибут блока <code>type</code> со значением <code>submit</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает текст кнопки.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code></td>\n        <td>Кнопка с иконкой, которая формируется блоком <code>icon</code>.</td>\n    </tr>\n    <tr>\n        <td>type</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Преобразует обычную кнопку в кнопку действия. Допустимое значение атрибута – <code>submit</code>.</td>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Адрес ссылки. Применяется только при наличии модификатора блока <code>_type_link</code>. Кнопка становится ссылкой, а значение <code>url</code> атрибутом <code>href</code>.</td>\n    </tr>\n</table>\n\n<p>Другие допустимые атрибуты блока могут задаваться в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Тема не указана&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;Тема simple&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Тема normal&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры кнопок <code>_size</code></h3>\n<p>Задает размер всем типам кнопок. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>кнопки</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота<br>кнопки</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39; },\n    text : &#39;Small&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Medium&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    text : &#39;Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39; },\n    text : &#39;X-large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Типы кнопок <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки-ссылки (<code>_type_link</code>).\nДополнительно во входных данных необходимо указать обязательный атрибут <code>url</code>. В таком случае кнопка получает тег <code>&lt;a&gt;</code>, а значение <code>url</code> становится атрибутом <code>href</code>.</p>\n<pre><code>{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;link&#39; },\n    url : &#39;#&#39;,\n    text : &#39;Кнопка-ссылка&#39;\n}\n</code></pre><h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_disabled-\">Неактивна <code>_disabled</code></h4>\n<p>В состоянии «неактивна» кнопка видна, но недоступна для действий пользователя.</p>\n<p>Такая кнопка не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<pre><code class=\"lang-bemjsom\">{\n    block : &#39;button&#39;,\n    text : &#39;Неактивна&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true }\n}\n</code></pre>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>focused</code> со значением <code>true</code> кнопка всегда находится в фокусе. Нажатие по ней можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;В фокусе&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true }\n}\n</code></pre>\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие «наведение курсором» на кнопку.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Наведение курсором&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, hovered : true }\n}\n</code></pre>\n<h4 id=\"-_pressed-\">Нажатие <code>_pressed</code></h4>\n<p>Определяет состояние «нажатие на кнопку» (действие).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка нажата&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pressed : true }\n}\n</code></pre>\n<h4 id=\"-_togglable-\">Залипание <code>_togglable</code></h4>\n<p>Определяет состояние кнопки в нажатом состоянии, когда первый клик по кнопке нажимает ее, а второй возвращает в исходное состояние.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка зажата&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, togglable : true }\n}\n</code></pre>\n<h4 id=\"-_action-\">Визуальное выделение <code>_action</code></h4>\n<p>Визуально выделяет кнопку на странице.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, action : true },\n    type : &#39;submit&#39;,\n    text : &#39;Action&#39;\n}\n</code></pre>\n<h4 id=\"-_pseudo-\">Псевдокнопка <code>_pseudo</code></h4>\n<p>При выборе модификатора <code>_pseudo</code> со значением <code>true</code>, кнопка получает прозрачный фон.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true },\n    text : &#39;Псевдокнопка&#39;\n}\n</code></pre>\n<p>В неактивном состоянии границы псевдокнопки исчезают и она сливается со страницей.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true, disabled : true },\n    text : &#39;Псевдокнопка&#39;\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"__text\">__text</h3>\n<p>Технический элемент. Обрамляет текст кнопки.\nНужен для позиционирования текста внутри кнопки, в том числе для случаев использования вместе с иконкой.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        mods : { action : &#39;download&#39; }\n    },\n    text : &#39;Кнопка с иконкой&#39;\n}\n</code></pre>\n<h2 id=\"-\">Зависимости</h2>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n<li><code>keyboard</code></li>\n</ul>\n\n<h1 id=\"icon\">icon</h1>\n<p>Блок <code>icon</code> используется в качестве графического элемента в других блоках. В HTML представлен тегом <code>&lt;i&gt;</code>. Иконка задается через свойство <code>background</code> и, соответственно, не имеет возможности фоллбека.</p>\n<p>Иконку можно передать как через модификатор, так и через поле <code>url</code>:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;icon&#39;,\n    mods : { social : &#39;twitter&#39; }\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;icon&#39;,\n    url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка с иконкой&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;with icon&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n}\n</code></pre>\n"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "base-control",
                    "data": {
                        "en": {
                            "name": "base-control",
                            "examples": [
                                {
                                    "content": []
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "base-control",
                            "examples": [
                                {
                                    "content": []
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "button",
                    "data": {
                        "en": {
                            "name": "button",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/button/3kp2wC_8uzAG3WG-EYBeTIUwwm4/3kp2wC_8uzAG3WG-EYBeTIUwwm4.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/4gW9GihAqFCGYBCeWUGRD3QWKOs/4gW9GihAqFCGYBCeWUGRD3QWKOs.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/BE2ng8JZ0bG4R2mK7GVvUGNYvjI/BE2ng8JZ0bG4R2mK7GVvUGNYvjI.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/bFydl8wb2VHVtMu2vxBMm6icZHg/bFydl8wb2VHVtMu2vxBMm6icZHg.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/ByAZ1dHx4rZKUf9zbxuHmfOmGNs/ByAZ1dHx4rZKUf9zbxuHmfOmGNs.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/CtrqIPRzZO-TkVaDLVKvRK4P0og/CtrqIPRzZO-TkVaDLVKvRK4P0og.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/fc2vxXBIzzk2stACB-J9vRKlYQ4/fc2vxXBIzzk2stACB-J9vRKlYQ4.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/GVMyNpdJjINIl0Ab_qhtsWRf_YA/GVMyNpdJjINIl0Ab_qhtsWRf_YA.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/h_ijyu_mqbPaJBB22OxZERaFyZA/h_ijyu_mqbPaJBB22OxZERaFyZA.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/igxPz7KCvCVG6TTxlXRYzE2_5pI/igxPz7KCvCVG6TTxlXRYzE2_5pI.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/k-SAhgMwGcp5dgunAdBbNhiPcPI/k-SAhgMwGcp5dgunAdBbNhiPcPI.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/KtCevfKa_rzm7MTQMzA65Z0ZREU/KtCevfKa_rzm7MTQMzA65Z0ZREU.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/niHjaElKr9LiqQpXkfl1vRlgwo8/niHjaElKr9LiqQpXkfl1vRlgwo8.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/pxTNfkqsHxpJmDhwS0QK2QBs3ZY/pxTNfkqsHxpJmDhwS0QK2QBs3ZY.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/QdeiBav-xLD1UHlT_oJYRBLcueI/QdeiBav-xLD1UHlT_oJYRBLcueI.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/Rb77AVqNcSM2UUBxbCkUkHULKWc/Rb77AVqNcSM2UUBxbCkUkHULKWc.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/RQ8YcvhxhqjSwO3I3VjLBOanRns/RQ8YcvhxhqjSwO3I3VjLBOanRns.en"
                                        },
                                        {
                                            "url": "desktop.examples/button/X1_VUgD2DCMkTeRUN6Vd4diR7Yk/X1_VUgD2DCMkTeRUN6Vd4diR7Yk.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"button\">button</h1>\n<p>The <strong>button</strong> block is used for different types of buttons creating. It allows you to manage size, sate, content and appearance of a button.</p>\n<p>In MSIE8 block <strong>button</strong> is rendered as native button <code>&lt;button&gt;</code>; <code>link-button</code> is rendered as native link <code>&lt;a&gt;</code>.</p>\n<h2 id=\"button-use-cases\">Button use cases</h2>\n<table>\n  <tr>\n    <th align=\"center\">Type</th>\n    <th align=\"center\">Description</th>\n    <th align=\"center\">Example</th>\n  </tr>\n  <tr>\n    <td>Button</td>\n    <td>Used by default.</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;\n  },\n  icon : {\n    block : &#39;icon&#39;,\n    mods : {\n      action : &#39;download&#39;\n    }\n  }\n}\n      </code></pre>\n    </td>\n   <tr>\n    <td>Link-button</td>\n    <td>A button that provides link functionality. <br>Has an optional attribute <code>url</code><br> to specify the address to which to <br>navigate.</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    type : &#39;link&#39;\n  },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n   </tr>\n   <tr>\n    <td>Action button</td>\n    <td>Designed to send data to the server (submit).<br> Always located in the form. <br>Set a <code>type</code> modifier with <code>submit</code> value in <br>BEMJSON to create an action button.\n    </td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : {\n      theme : &#39;normal&#39;,\n      size : &#39;m&#39;,\n      type : &#39;submit&#39;\n    },\n    text : &#39;button&#39;\n  }\n}\n      </code></pre>\n    </td>\n   </tr>\n</table>\n\n<h2 id=\"block-s-api\">Block&#39;s API</h2>\n<p>The public methods of the block are:</p>\n<table>\n  <tr>\n    <th align=\"center\">Method</th>\n    <th align=\"center\">Description</th>\n  </tr>\n  <tr>\n    <td>getText</td>\n    <td>Returns text of the button {String}.</td>\n  </tr>\n  <tr>\n    <td>setText</td>\n    <td>Sets text to the button.</td>\n  </tr>\n</table>\n\n<h2 id=\"valid-block-s-attributes\">Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n  <tr>\n    <th align=\"center\">Attributes</th>\n    <th align=\"center\">Type</th>\n    <th align=\"center\">Description</th>\n  </tr>\n  <tr>\n    <td>text</td>\n    <td>String</td>\n    <td>Text of the button.</td>\n   </tr>\n   <tr>\n    <td>icon</td>\n    <td>BEMJSON</td>\n    <td>The <strong>icon</strong> block.</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>String</td>\n    <td>URL address. If URL address is specified the <br>button provides a link functionality.</td>\n  </tr>\n</table>\n\n<p>The other valid block&#39;s attributes could be specified in the <code>attrs</code> field in BEMJSON.</p>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"the-themes-_theme-\">The themes <code>_theme</code></h3>\n<p>The block supports the follwing themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>It a <code>_theme</code> modifier is not specified the native representation (<code>default</code>) of a control is available.</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"the-sizes-_size-\">The sizes <code>_size</code></h3>\n<p>Mandatory modifier for <em>normal</em> theme only.\nProvides the size value to all types of buttons.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following example demonstrates this:</p>\n<table>\n  <tr>\n    <th align=\"center\">Size/Values</th>\n    <th align=\"center\">Font size</th>\n    <th align=\"center\">Button height</th>\n    <th align=\"center\">Example</th>\n  </tr>\n  <tr>\n    <th align=\"center\">s</th>\n    <td>13px</td>\n    <td>24px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;s&#39;\n  },\n  text : &#39;Small&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">m</th>\n    <td>13px</td>\n    <td>28px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;\n  },\n  text : &#39;Medium&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">l</th>\n    <td>15px</td>\n    <td>32px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;l&#39;\n  },\n  text : &#39;Large&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">xl</th>\n    <td>18px</td>\n    <td>38px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;xl&#39;\n  },\n  text : &#39;X-large&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"button-s-type-_type-\">Button&#39;s type <code>_type</code></h3>\n<p>The following types of button are available:</p>\n<ul>\n<li><p>link-button (<code>_link</code>). Has a mandatory attribute <code>url</code>. A link-button has an <code>&lt;a&gt;</code> attribute and the <code>url</code> value becomes a <code>href</code> attribute.</p>\n</li>\n<li><p>action  button (<code>_submit</code>). Should be a part of a form only.</p>\n</li>\n</ul>\n<p>The <code>_type</code> modifier is available for <em>simple</em> and <em>normal</em> themes.</p>\n<table>\n  <tr>\n    <th align=\"center\">Type/<br>Realisation</th>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td> <code>_link</code></td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : { type : &#39;link&#39; },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    type : &#39;link&#39;\n  },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <td><code>_submit</code></td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : { type : &#39;submit&#39; },\n    text : &#39;default&#39;\n}\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : {\n      theme : &#39;normal&#39;,\n      size : &#39;m&#39;,\n      type : &#39;submit&#39;\n    },\n    text : &#39;normal&#39;\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"button-s-states\">Button&#39;s states</h3>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If a <code>_disabled</code> modifier has <code>_true</code> value the button is visible, but is not available for user action.</p>\n<p>Disabled button cannot be focused by <code>Tab</code> pressing or mouse click.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_disabled_true&#39;,\n  mods : { disabled : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_disabled_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    disabled : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>If <code>focused</code> modifier has a <code>true</code> value the button is always focused. You can click the focused button using <code>Space</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<p>Available for all themes of block.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;_focused_true&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;,\n        focused : true\n    }\n}\n</code></pre>\n<h4 id=\"-_hovered-\"><code>_hovered</code></h4>\n<p>Defines the &quot;hover&quot; action.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_hovered_true&#39;,\n  mods : { hovered : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_hovered_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    hovered : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_pressed-\"><code>_pressed</code></h4>\n<p>Defines a &quot;pressed&quot; state of a button.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_pressed_true&#39;,\n  mods : { pressed : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_pressed_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    pressed : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_togglable-\"><code>_togglable</code></h4>\n<p>Determines the state of the pressed button when the first click the button presses it, and the second returns to its original state.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_togglable_true&#39;,\n  mods : { togglable : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_togglable_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    togglable : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_action-\"><code>_action</code></h4>\n<p>Visually detects the button on a page.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_action_true&#39;,\n  mods : { action : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_action_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    action : true\n  }\n}\n      </code></pre>\n  </td>\n  </tr>\n</table>\n\n<h4 id=\"pseudo-button-_pseudo-\">Pseudo button <code>_pseudo</code></h4>\n<p>If <code>pseudo</code> modifier has <code>true</code> value the button background becomes transparent. If pseudo button is disabled its boarders disappear.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true },\n    text : &#39;pseudo&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true, disabled : true },\n    text : &#39;pseudo&#39;\n}\n</code></pre>\n<h2 id=\"b-ock-s-elements\">B;ock&#39;s elements</h2>\n<p>The block is visually represented by the following elements:</p>\n<h3 id=\"__text\">__text</h3>\n<p>This element intended to set a text position in the button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } },\n    text : &#39;with icon&#39;\n}\n</code></pre>\n<h2 id=\"dependencies\">Dependencies</h2>\n<p>The <code>button</code> block depends on</p>\n<ul>\n<li><code>base-control</code>, that provides public API for the controls.<code>i-bem__dom</code></li>\n<li><code>i-bem__dom</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "button",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/button/3kp2wC_8uzAG3WG-EYBeTIUwwm4/3kp2wC_8uzAG3WG-EYBeTIUwwm4.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/4gW9GihAqFCGYBCeWUGRD3QWKOs/4gW9GihAqFCGYBCeWUGRD3QWKOs.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/BE2ng8JZ0bG4R2mK7GVvUGNYvjI/BE2ng8JZ0bG4R2mK7GVvUGNYvjI.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/bFydl8wb2VHVtMu2vxBMm6icZHg/bFydl8wb2VHVtMu2vxBMm6icZHg.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/ByAZ1dHx4rZKUf9zbxuHmfOmGNs/ByAZ1dHx4rZKUf9zbxuHmfOmGNs.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/CtrqIPRzZO-TkVaDLVKvRK4P0og/CtrqIPRzZO-TkVaDLVKvRK4P0og.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/fc2vxXBIzzk2stACB-J9vRKlYQ4/fc2vxXBIzzk2stACB-J9vRKlYQ4.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/GVMyNpdJjINIl0Ab_qhtsWRf_YA/GVMyNpdJjINIl0Ab_qhtsWRf_YA.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/h_ijyu_mqbPaJBB22OxZERaFyZA/h_ijyu_mqbPaJBB22OxZERaFyZA.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/igxPz7KCvCVG6TTxlXRYzE2_5pI/igxPz7KCvCVG6TTxlXRYzE2_5pI.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/k-SAhgMwGcp5dgunAdBbNhiPcPI/k-SAhgMwGcp5dgunAdBbNhiPcPI.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/KtCevfKa_rzm7MTQMzA65Z0ZREU/KtCevfKa_rzm7MTQMzA65Z0ZREU.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/niHjaElKr9LiqQpXkfl1vRlgwo8/niHjaElKr9LiqQpXkfl1vRlgwo8.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/pxTNfkqsHxpJmDhwS0QK2QBs3ZY/pxTNfkqsHxpJmDhwS0QK2QBs3ZY.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/QdeiBav-xLD1UHlT_oJYRBLcueI/QdeiBav-xLD1UHlT_oJYRBLcueI.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/Rb77AVqNcSM2UUBxbCkUkHULKWc/Rb77AVqNcSM2UUBxbCkUkHULKWc.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/RQ8YcvhxhqjSwO3I3VjLBOanRns/RQ8YcvhxhqjSwO3I3VjLBOanRns.ru"
                                        },
                                        {
                                            "url": "desktop.examples/button/X1_VUgD2DCMkTeRUN6Vd4diR7Yk/X1_VUgD2DCMkTeRUN6Vd4diR7Yk.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"button\">button</h1>\n<p>Блок <code>button</code> используется для создания различных типов кнопок и предоставляет возможность изменять их размер, состояние, содержимое и внешний вид.</p>\n<h2 id=\"-\">Варианты использования кнопок</h2>\n<ul>\n<li>Обычная кнопка – применяется для любых кнопок веб-интерфейса; используется по умолчанию.</li>\n<li>Кнопка-ссылка – применяется для перехода по ссылке. Задается модификатором <code>_type</code> со значением <code>_link</code>.</li>\n<li>Кнопка действия – предназначена для отправки данных на сервер (submit). Всегда располагается в форме. Задается через атрибут блока <code>type</code> со значением <code>submit</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает текст кнопки.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code></td>\n        <td>Кнопка с иконкой, которая формируется блоком <code>icon</code>.</td>\n    </tr>\n    <tr>\n        <td>type</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Преобразует обычную кнопку в кнопку действия. Допустимое значение атрибута – <code>submit</code>.</td>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Адрес ссылки. Применяется только при наличии модификатора блока <code>_type_link</code>. Кнопка становится ссылкой, а значение <code>url</code> атрибутом <code>href</code>.</td>\n    </tr>\n</table>\n\n<p>Другие допустимые атрибуты блока могут задаваться в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Тема не указана&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;Тема simple&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Тема normal&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры кнопок <code>_size</code></h3>\n<p>Задает размер всем типам кнопок. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>кнопки</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота<br>кнопки</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39; },\n    text : &#39;Small&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Medium&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    text : &#39;Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39; },\n    text : &#39;X-large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Типы кнопок <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки-ссылки (<code>_type_link</code>).\nДополнительно во входных данных необходимо указать обязательный атрибут <code>url</code>. В таком случае кнопка получает тег <code>&lt;a&gt;</code>, а значение <code>url</code> становится атрибутом <code>href</code>.</p>\n<pre><code>{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;link&#39; },\n    url : &#39;#&#39;,\n    text : &#39;Кнопка-ссылка&#39;\n}\n</code></pre><h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_disabled-\">Неактивна <code>_disabled</code></h4>\n<p>В состоянии «неактивна» кнопка видна, но недоступна для действий пользователя.</p>\n<p>Такая кнопка не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<pre><code class=\"lang-bemjsom\">{\n    block : &#39;button&#39;,\n    text : &#39;Неактивна&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true }\n}\n</code></pre>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>focused</code> со значением <code>true</code> кнопка всегда находится в фокусе. Нажатие по ней можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;В фокусе&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true }\n}\n</code></pre>\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие «наведение курсором» на кнопку.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Наведение курсором&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, hovered : true }\n}\n</code></pre>\n<h4 id=\"-_pressed-\">Нажатие <code>_pressed</code></h4>\n<p>Определяет состояние «нажатие на кнопку» (действие).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка нажата&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pressed : true }\n}\n</code></pre>\n<h4 id=\"-_togglable-\">Залипание <code>_togglable</code></h4>\n<p>Определяет состояние кнопки в нажатом состоянии, когда первый клик по кнопке нажимает ее, а второй возвращает в исходное состояние.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка зажата&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, togglable : true }\n}\n</code></pre>\n<h4 id=\"-_action-\">Визуальное выделение <code>_action</code></h4>\n<p>Визуально выделяет кнопку на странице.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, action : true },\n    type : &#39;submit&#39;,\n    text : &#39;Action&#39;\n}\n</code></pre>\n<h4 id=\"-_pseudo-\">Псевдокнопка <code>_pseudo</code></h4>\n<p>При выборе модификатора <code>_pseudo</code> со значением <code>true</code>, кнопка получает прозрачный фон.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true },\n    text : &#39;Псевдокнопка&#39;\n}\n</code></pre>\n<p>В неактивном состоянии границы псевдокнопки исчезают и она сливается со страницей.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true, disabled : true },\n    text : &#39;Псевдокнопка&#39;\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"__text\">__text</h3>\n<p>Технический элемент. Обрамляет текст кнопки.\nНужен для позиционирования текста внутри кнопки, в том числе для случаев использования вместе с иконкой.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        mods : { action : &#39;download&#39; }\n    },\n    text : &#39;Кнопка с иконкой&#39;\n}\n</code></pre>\n<h2 id=\"-\">Зависимости</h2>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n<li><code>keyboard</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "checkbox",
                    "data": {
                        "en": {
                            "name": "checkbox",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/checkbox/79qZiqVxBY5r5ZaX_gUFH7MMT5Y/79qZiqVxBY5r5ZaX_gUFH7MMT5Y.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/9OMss9AsUlfFVAPsG8SlTTcVlLI/9OMss9AsUlfFVAPsG8SlTTcVlLI.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/C7ZkQCq0ZPpMgf1piyMISEARwPc/C7ZkQCq0ZPpMgf1piyMISEARwPc.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/dOZ5XkX9ojCi2r9kiY4DJa4YWvA/dOZ5XkX9ojCi2r9kiY4DJa4YWvA.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/Dz3sVcJ6LQvatoLktNJM35QPIso/Dz3sVcJ6LQvatoLktNJM35QPIso.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/FSuk4Im9Ao4_75PdjgBzm3U8Zww/FSuk4Im9Ao4_75PdjgBzm3U8Zww.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/GSqTjc8TX7KG5JpqDbcpS1N0CZM/GSqTjc8TX7KG5JpqDbcpS1N0CZM.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/IMYtMHFDZhN_agFpLXmNIDTAK4Q/IMYtMHFDZhN_agFpLXmNIDTAK4Q.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/Lc_qQBikKsf-9GuBeR0FLc4-3k0/Lc_qQBikKsf-9GuBeR0FLc4-3k0.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/MiwyveGqb-Q3hDh6b5dvanmXUc0/MiwyveGqb-Q3hDh6b5dvanmXUc0.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/QcTYyDncRH6DrvinlVti5iujuxU/QcTYyDncRH6DrvinlVti5iujuxU.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/sae-WwdkdYcrwwgUC5hw2NDih4/sae-WwdkdYcrwwgUC5hw2NDih4.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/Sgn48vD0-J9Y9jIc1geFcHu6qVA/Sgn48vD0-J9Y9jIc1geFcHu6qVA.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/SojNrUmXHg8qOEVNxLMELyPxf1I/SojNrUmXHg8qOEVNxLMELyPxf1I.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/tU4ymq_plszDwGgrM91feVLkv6s/tU4ymq_plszDwGgrM91feVLkv6s.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/v-9BRGnxLdDNcDKCfuStYG9PRYU/v-9BRGnxLdDNcDKCfuStYG9PRYU.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/XI4uPzI90-UiMiWRig9noeu3mrg/XI4uPzI90-UiMiWRig9noeu3mrg.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/ZQpxZtXWq6x9EgytPp4qnULF16g/ZQpxZtXWq6x9EgytPp4qnULF16g.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/ZWO500NSNVuNcdNcItDCWIHDH3o/ZWO500NSNVuNcdNcItDCWIHDH3o.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox-group/E4bazg4TDlm1W1tmOFMVgeAT1k0/E4bazg4TDlm1W1tmOFMVgeAT1k0.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox-group/tnfPsUBEHfiKv4Ay-bSkmy06NTs/tnfPsUBEHfiKv4Ay-bSkmy06NTs.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox-group/uf6KFu6RRJ3CJRzlZj5THp-53ss/uf6KFu6RRJ3CJRzlZj5THp-53ss.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox-group/Yy5DRxHNPA5fsD-l76T556p1aMY/Yy5DRxHNPA5fsD-l76T556p1aMY.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"checkbox\">checkbox</h1>\n<p>Block <code>checkbox</code> is a graphical user interface element that permits the user to make a binary choice.</p>\n<p>The block creates a container that includes a native checkbox control (<code>control</code> element) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot; attributes&gt;</code> and uses its functionality. A native control is hidden. An <code>autocomplete</code> attribute is <code>off</code> by default.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;Label 1&#39;,\n    name: &#39;name1&#39;,\n    value: &#39;1&#39;\n}\n</code></pre>\n<h2 id=\"-valid-block-s-attributes\">## Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n    <tr>\n        <th>Attribute</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies text string value of a checkbox.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies a checkbox name. A mandatory attribute. The name part of the name/value pair associated with this element for the purposes of form submission.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n            <code>String</code>\n        <td>Specifies a checkbox value. The value part of the name/value pair associated with this element for the purposes of form submission.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>An icon that is rendered using an <code>icon</code> block.</td>\n    </tr>\n</table>\n\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"themes-_theme-\">Themes <code>_theme</code></h3>\n<p>The block supports the following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>It a <code>_theme</code> modifier is not specified the native representation (<em>default</em>) of a control is available.</p>\n<p>Following example demonstrates this:</p>\n<ul>\n<li><p>default</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      text : &#39;default&#39;,\n      name: &#39;default&#39;,\n      value: &#39;1&#39;\n  }\n</code></pre>\n</li>\n<li><p>simple</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      mods : { theme : &#39;simple&#39; },\n      text : &#39;Theme Simple&#39;,\n      name: &#39;simple&#39;,\n      value: &#39;2&#39;\n  }\n</code></pre>\n</li>\n<li><p>normal</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n      text : &#39;Theme Normal&#39;,\n      name: &#39;normal&#39;,\n      value: &#39;3&#39;\n  }\n</code></pre>\n</li>\n</ul>\n<h3 id=\"font-size-_size-\">Font size <code>_size</code></h3>\n<p>Mandatory modifier for <em>normal</em> theme only.\nProvides the font size value to the checkbox text elements.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following example demonstrates this:</p>\n<table>\n    <tr>\n        <th>Size/Parameters</th>\n        <th>Font size</th>\n        <th>String height</th>\n        <th>Example</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;s&#39;\n    },\n    text : &#39;Size S&#39;,\n    name: &#39;name1&#39;,\n    value: &#39;1&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Size M&#39;,\n    name: &#39;name2&#39;,\n    value: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Size L&#39;,\n    name: &#39;name3&#39;,\n    value: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    text : &#39;Size XL&#39;,\n    name: &#39;name4&#39;,\n    value: &#39;4&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"types-_type-\">Types <code>_type</code></h3>\n<p>The <code>checkbox</code> block can be rendered as a buttons. For this use a <code>type</code> modifier with a <code>button</code> value. In this case a <code>checked</code> state of a checkbox is defined by clicking the button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;,\n        type : &#39;button&#39;\n    },\n    text : &#39;Label&#39;,\n    name: &#39;button&#39;,\n    value: &#39;1&#39;\n}\n</code></pre>\n<h3 id=\"states-of-a-checkbox\">States of a checkbox</h3>\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>Checkbox is focused if a block has a <code>focused</code> modifier with a <code>true</code> value.</p>\n<p>You can tick off the focused checkbox using <code>Space</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    text : &#39;Focused&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, focused : true },\n    text : &#39;Focused&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If a <code>disabled</code> modifier has <code>true</code> value the checkbox is visible, but is not available for the user action.</p>\n<p>Disabled checkbox cannot be focused by <code>Tab</code> pressing or mouse click.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    text : &#39;Disabled&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, disabled : true },\n    text : &#39;Disabled&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_checked-\"><code>_checked</code></h4>\n<p>A <code>checked</code> modifier with <code>true</code> value ticks off the checkbox, or clicks a button if a checkbox has <code>{ type : &#39;button&#39; }</code> modifier.</p>\n<p>A <code>checked</code> modifier can be used for all checkboxes in the group.ппе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, checked : true },\n    text : &#39;Checked&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, checked : true },\n    text : &#39;Checked&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>The <code>box</code> element is used to draw the checkbox. A native checkbox is hidden.</p>\n<p>The <code>box</code> element is added to the block on a template engine level.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>The <code>control</code> element is used to provide native control checkbox functionality.</p>\n<p>The <code>control</code> element is added to the block on a template engine level.</p>\n<h2 id=\"block-s-dependencies\">Block&#39;s dependencies</h2>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "checkbox",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/checkbox/79qZiqVxBY5r5ZaX_gUFH7MMT5Y/79qZiqVxBY5r5ZaX_gUFH7MMT5Y.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/9OMss9AsUlfFVAPsG8SlTTcVlLI/9OMss9AsUlfFVAPsG8SlTTcVlLI.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/C7ZkQCq0ZPpMgf1piyMISEARwPc/C7ZkQCq0ZPpMgf1piyMISEARwPc.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/dOZ5XkX9ojCi2r9kiY4DJa4YWvA/dOZ5XkX9ojCi2r9kiY4DJa4YWvA.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/Dz3sVcJ6LQvatoLktNJM35QPIso/Dz3sVcJ6LQvatoLktNJM35QPIso.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/FSuk4Im9Ao4_75PdjgBzm3U8Zww/FSuk4Im9Ao4_75PdjgBzm3U8Zww.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/GSqTjc8TX7KG5JpqDbcpS1N0CZM/GSqTjc8TX7KG5JpqDbcpS1N0CZM.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/IMYtMHFDZhN_agFpLXmNIDTAK4Q/IMYtMHFDZhN_agFpLXmNIDTAK4Q.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/Lc_qQBikKsf-9GuBeR0FLc4-3k0/Lc_qQBikKsf-9GuBeR0FLc4-3k0.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/MiwyveGqb-Q3hDh6b5dvanmXUc0/MiwyveGqb-Q3hDh6b5dvanmXUc0.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/QcTYyDncRH6DrvinlVti5iujuxU/QcTYyDncRH6DrvinlVti5iujuxU.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/sae-WwdkdYcrwwgUC5hw2NDih4/sae-WwdkdYcrwwgUC5hw2NDih4.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/Sgn48vD0-J9Y9jIc1geFcHu6qVA/Sgn48vD0-J9Y9jIc1geFcHu6qVA.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/SojNrUmXHg8qOEVNxLMELyPxf1I/SojNrUmXHg8qOEVNxLMELyPxf1I.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/tU4ymq_plszDwGgrM91feVLkv6s/tU4ymq_plszDwGgrM91feVLkv6s.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/v-9BRGnxLdDNcDKCfuStYG9PRYU/v-9BRGnxLdDNcDKCfuStYG9PRYU.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/XI4uPzI90-UiMiWRig9noeu3mrg/XI4uPzI90-UiMiWRig9noeu3mrg.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/ZQpxZtXWq6x9EgytPp4qnULF16g/ZQpxZtXWq6x9EgytPp4qnULF16g.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox/ZWO500NSNVuNcdNcItDCWIHDH3o/ZWO500NSNVuNcdNcItDCWIHDH3o.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox-group/E4bazg4TDlm1W1tmOFMVgeAT1k0/E4bazg4TDlm1W1tmOFMVgeAT1k0.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox-group/tnfPsUBEHfiKv4Ay-bSkmy06NTs/tnfPsUBEHfiKv4Ay-bSkmy06NTs.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox-group/uf6KFu6RRJ3CJRzlZj5THp-53ss/uf6KFu6RRJ3CJRzlZj5THp-53ss.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox-group/Yy5DRxHNPA5fsD-l76T556p1aMY/Yy5DRxHNPA5fsD-l76T556p1aMY.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"checkbox\">checkbox</h1>\n<p>Блок <code>checkbox</code> («чекбокс») позволяет управлять параметром выбора с двумя состояниями – включено и выключено. Используется, когда необходимо выбрать более одного варианта из предложенных.</p>\n<p>Блок создает контейнер, содержащий нативный контрол чекбокс (элемент <code>__control</code>) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot;&gt;</code>, который скрывается при использовании модификатора <code>_theme</code>.</p>\n<p>Атрибут <code>autocomplete</code> принудительно переведен в состояние <code>off</code> для обеспечения корректной работы блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;Вариант 1&#39;,\n    name: &#39;name1&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение текстовой строке чекбокса.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает имя чекбокса. Обязательный атрибут. Является частью пары имя / значение (name / val), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение чекбокса. Является частью пары имя / значение (name / val), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Иконка, которая отображается с помощью блока <code>icon</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;default&#39;,\n    name: &#39;default&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;Тема Simple&#39;,\n    name: &#39;simple&#39;,\n    val: &#39;2&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Тема Normal&#39;,\n    name: &#39;normal&#39;,\n    val: &#39;3&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размер <code>_size</code></h3>\n<p>Задает размер шрифта.</p>\n<p>Обязательный модификатор. Реализован только в теме <em>normal</em>.</p>\n<p>Доступно два размера реализации блока: <strong>M</strong>, <strong>L</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>блока</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота строки<br>элемента <code>__box</code></th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Размер M&#39;,\n    name: &#39;name2&#39;,\n    val: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>17px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Размер L&#39;,\n    name: &#39;name3&#39;,\n    val: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Тип <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки (модификатор <code>_type</code> в значении <code>_button</code>). В таком случае выбор элемента происходит нажатием на кнопку.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39; },\n    text : &#39;Кнопка Normal&#39;,\n    name: &#39;button&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>_focused</code> со значением <code>_true</code> чекбокс всегда находится в фокусе. Если блок представлен в виде кнопки, она приобретает желтую тень. Нажатие по чекбоксу можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    text : &#39;В фокусе&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, focused : true },\n    text : &#39;В фокусе&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии «неактивен» чекбокс виден, но недоступен для действий пользователя.</p>\n<p>Такой чекбос не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    text : &#39;Неактивна&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, disabled : true },\n    text : &#39;Неактивна&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_checked-\">Отмечен <code>_checked</code></h4>\n<p>Модификатор <code>_checked</code> в значении <code>true</code> определяет, что чекбокс отмечен (выбран).</p>\n<p>Модификатор <code>_checked</code> может быть применен ко всем чекбоксам в группе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, checked : true },\n    text : &#39;Отмечен&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, checked : true },\n    text : &#39;Отмечен&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>__box</code> служит для отрисовки чекбокса, нативный чекбокс скрыт.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n<h3 id=\"-__control-\">Контрол <code>__control</code></h3>\n<p>Элемент <code>__control</code> служит для использования функциональности нативного контрола чекбокса.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n<h2 id=\"-\">Зависимости блока</h2>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "checkbox-group",
                    "jsdoc": "",
                    "data": {
                        "en": {
                            "name": "checkbox-group",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/checkbox-group/E4bazg4TDlm1W1tmOFMVgeAT1k0/E4bazg4TDlm1W1tmOFMVgeAT1k0.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox-group/tnfPsUBEHfiKv4Ay-bSkmy06NTs/tnfPsUBEHfiKv4Ay-bSkmy06NTs.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox-group/uf6KFu6RRJ3CJRzlZj5THp-53ss/uf6KFu6RRJ3CJRzlZj5THp-53ss.en"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox-group/Yy5DRxHNPA5fsD-l76T556p1aMY/Yy5DRxHNPA5fsD-l76T556p1aMY.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"checkbox\">checkbox</h1>\n<p>Block <code>checkbox</code> is a graphical user interface element that permits the user to make a binary choice.</p>\n<p>The block creates a container that includes a native checkbox control (<code>control</code> element) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot; attributes&gt;</code> and uses its functionality. A native control is hidden. An <code>autocomplete</code> attribute is <code>off</code> by default.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;Label 1&#39;,\n    name: &#39;name1&#39;,\n    value: &#39;1&#39;\n}\n</code></pre>\n<h2 id=\"-valid-block-s-attributes\">## Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n    <tr>\n        <th>Attribute</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies text string value of a checkbox.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies a checkbox name. A mandatory attribute. The name part of the name/value pair associated with this element for the purposes of form submission.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n            <code>String</code>\n        <td>Specifies a checkbox value. The value part of the name/value pair associated with this element for the purposes of form submission.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>An icon that is rendered using an <code>icon</code> block.</td>\n    </tr>\n</table>\n\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"themes-_theme-\">Themes <code>_theme</code></h3>\n<p>The block supports the following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>It a <code>_theme</code> modifier is not specified the native representation (<em>default</em>) of a control is available.</p>\n<p>Following example demonstrates this:</p>\n<ul>\n<li><p>default</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      text : &#39;default&#39;,\n      name: &#39;default&#39;,\n      value: &#39;1&#39;\n  }\n</code></pre>\n</li>\n<li><p>simple</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      mods : { theme : &#39;simple&#39; },\n      text : &#39;Theme Simple&#39;,\n      name: &#39;simple&#39;,\n      value: &#39;2&#39;\n  }\n</code></pre>\n</li>\n<li><p>normal</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n      text : &#39;Theme Normal&#39;,\n      name: &#39;normal&#39;,\n      value: &#39;3&#39;\n  }\n</code></pre>\n</li>\n</ul>\n<h3 id=\"font-size-_size-\">Font size <code>_size</code></h3>\n<p>Mandatory modifier for <em>normal</em> theme only.\nProvides the font size value to the checkbox text elements.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following example demonstrates this:</p>\n<table>\n    <tr>\n        <th>Size/Parameters</th>\n        <th>Font size</th>\n        <th>String height</th>\n        <th>Example</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;s&#39;\n    },\n    text : &#39;Size S&#39;,\n    name: &#39;name1&#39;,\n    value: &#39;1&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Size M&#39;,\n    name: &#39;name2&#39;,\n    value: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Size L&#39;,\n    name: &#39;name3&#39;,\n    value: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    text : &#39;Size XL&#39;,\n    name: &#39;name4&#39;,\n    value: &#39;4&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"types-_type-\">Types <code>_type</code></h3>\n<p>The <code>checkbox</code> block can be rendered as a buttons. For this use a <code>type</code> modifier with a <code>button</code> value. In this case a <code>checked</code> state of a checkbox is defined by clicking the button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;,\n        type : &#39;button&#39;\n    },\n    text : &#39;Label&#39;,\n    name: &#39;button&#39;,\n    value: &#39;1&#39;\n}\n</code></pre>\n<h3 id=\"states-of-a-checkbox\">States of a checkbox</h3>\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>Checkbox is focused if a block has a <code>focused</code> modifier with a <code>true</code> value.</p>\n<p>You can tick off the focused checkbox using <code>Space</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    text : &#39;Focused&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, focused : true },\n    text : &#39;Focused&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If a <code>disabled</code> modifier has <code>true</code> value the checkbox is visible, but is not available for the user action.</p>\n<p>Disabled checkbox cannot be focused by <code>Tab</code> pressing or mouse click.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    text : &#39;Disabled&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, disabled : true },\n    text : &#39;Disabled&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_checked-\"><code>_checked</code></h4>\n<p>A <code>checked</code> modifier with <code>true</code> value ticks off the checkbox, or clicks a button if a checkbox has <code>{ type : &#39;button&#39; }</code> modifier.</p>\n<p>A <code>checked</code> modifier can be used for all checkboxes in the group.ппе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, checked : true },\n    text : &#39;Checked&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, checked : true },\n    text : &#39;Checked&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>The <code>box</code> element is used to draw the checkbox. A native checkbox is hidden.</p>\n<p>The <code>box</code> element is added to the block on a template engine level.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>The <code>control</code> element is used to provide native control checkbox functionality.</p>\n<p>The <code>control</code> element is added to the block on a template engine level.</p>\n<h2 id=\"block-s-dependencies\">Block&#39;s dependencies</h2>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "checkbox-group",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/checkbox-group/E4bazg4TDlm1W1tmOFMVgeAT1k0/E4bazg4TDlm1W1tmOFMVgeAT1k0.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox-group/tnfPsUBEHfiKv4Ay-bSkmy06NTs/tnfPsUBEHfiKv4Ay-bSkmy06NTs.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox-group/uf6KFu6RRJ3CJRzlZj5THp-53ss/uf6KFu6RRJ3CJRzlZj5THp-53ss.ru"
                                        },
                                        {
                                            "url": "desktop.examples/checkbox-group/Yy5DRxHNPA5fsD-l76T556p1aMY/Yy5DRxHNPA5fsD-l76T556p1aMY.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"checkbox-group\">checkbox-group</h1>\n<p>Блок <code>checkbox-group</code> служит для отображения группы однотипных переключателей – чекбоксов (блоков <code>checkbox</code>). Любой из переключателей группы может быть либо активен, либо нет, вне зависимости от состояния других переключателей.</p>\n<p>Блок позволяет управлять внешним видом и состоянием вложенных переключателей. </p>\n<p>В результате BEMHTML-преобразований блок <code>checkbox-group</code> становится HTML-элементом с тегом <code>&lt;span&gt;</code> – контейнером, содержащим группу чекбоксов и подписи к ним.</p>\n<h2 id=\"-\">Допустимые параметры блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td><code>String</code></td>\n        <td>Имя группы чекбоксов. Преобразуется в HTML-атрибут <code>name</code> вложенного блока <code>input</code>.</td>\n    </tr>\n    <tr>\n        <td>options</td>\n        <td><code>Array</code></td>\n        <td>Массив хешей. Каждый хеш соответствует одному переключателю группы чекбоксов и содержит набор его параметров.</td>\n    </tr><br></table>\n\n<p>Среди параметров, передаваемых для переключателя в массиве хешей <code>option</code>, обязательными являются:</p>\n<ul>\n<li><code>val</code> (<code>String</code>|<code>Number</code>) – значение, возвращаемое выбранным чекбоксом (элемент <code>checkbox__control</code>);</li>\n<li><code>text</code>  (<code>String</code>) – подпись, отображаемая для текущего переключателя. </li>\n</ul>\n<p>Помимо обязательных параметров, в массиве <code>option</code> могут быть переданы любые параметры, допустимые для блока <code>checkbox</code>, например, модификаторы <code>_checked</code> или <code>_disabled</code>.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<ul>\n<li>simple   </li>\n<li>normal  </li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером. </p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox-group&#39;,\n    name : &#39;checkbox-default&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox-group&#39;,\n    mods : { theme : &#39;simple&#39; },\n    name : &#39;checkbox-simple&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox-group&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h3 id=\"-_size-\">Размер переключателей <code>_size</code></h3>\n<p>Модификатор <code>_size</code> устанавливает размер переключателей для всех типов групп чекбоксов. Обязательный модификатор. </p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>В зависимости от значения модификатора <code>_type</code>, доступны следующие размеры реализации блока:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Обычная группа чекбоксов и <code>_type_line</code></th>\n        <th>Кнопочная группа чекбоксов (<code>_type_button</code>)</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>–</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>–</td>\n        <td>+</td>\n</table>\n\n<p>Размеры, на примере темы <em>normal</em> с модификатором <code>_type_button</code>:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;s&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;xl&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-_type-\">Тип группы чекбоксов <code>_type</code></h3>\n<p>Доступны следующие значения модификатор <code>_type</code>:</p>\n<ul>\n<li>Модификатор <code>_type</code> со значением <code>button</code>. Используется для создания кнопочной группы чекбоксов – блока из кнопок-переключателей. </li>\n<li>Модификатор <code>_type</code> со значением <code>line</code> используется для создания группы чекбоксов с выравниванием в строку. После каждого переключателя группы, кроме последнего, автоматически добавляется отступ справа. Размер отступа зависит от значения модификатора <code>_size</code>. Реализован только в теме <em>normal</em>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычная группа чекбоксов</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;checkbox-button&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Кнопочная группа чекбоксов (<code>_type_button</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Строчная группа чекбоксов (<code>_type_line</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;line&#39; \n    },\n    name : &#39;checkbox-line&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr><br></table>\n\n\n<h3 id=\"-_disabled-\">Неактивна <code>_disabled</code></h3>\n<p>В состоянии &quot;неактивна&quot; группа чекбоксов отображается, но недоступна для действий пользователя.  </p>\n<p>Такая группа чекбоксов не будет получать фокус (модификатор <code>_focused</code>).</p>\n<p>При установке модификатора <code>_disabled</code> для группы, всем переключателям группы также устанавливается модификатор <code>_disabled</code>. Как следствие, для них не будут:</p>\n<ul>\n<li>устанавливаться модификаторы состояния <code>_hovered</code>, <code>_pressed</code> и <code>_focused</code>;</li>\n<li>изменяться значения модификатора <code>_checked</code>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39;,\n        disabled : true \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39;, checked : true }\n    ]\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда один из его элементов находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<p>Реализован во всех темах блока.</p>\n<h2 id=\"-\">Зависимости блока</h2>\n<p>Блок <code>checkbox-group</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>checkbox</code></li>\n<li><code>jquery</code></li>\n</ul>\n\n<h1 id=\"checkbox\">checkbox</h1>\n<p>Блок <code>checkbox</code> («чекбокс») позволяет управлять параметром выбора с двумя состояниями – включено и выключено. Используется, когда необходимо выбрать более одного варианта из предложенных.</p>\n<p>Блок создает контейнер, содержащий нативный контрол чекбокс (элемент <code>__control</code>) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot;&gt;</code>, который скрывается при использовании модификатора <code>_theme</code>.</p>\n<p>Атрибут <code>autocomplete</code> принудительно переведен в состояние <code>off</code> для обеспечения корректной работы блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;Вариант 1&#39;,\n    name: &#39;name1&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение текстовой строке чекбокса.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает имя чекбокса. Обязательный атрибут. Является частью пары имя / значение (name / val), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение чекбокса. Является частью пары имя / значение (name / val), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Иконка, которая отображается с помощью блока <code>icon</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;default&#39;,\n    name: &#39;default&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;Тема Simple&#39;,\n    name: &#39;simple&#39;,\n    val: &#39;2&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Тема Normal&#39;,\n    name: &#39;normal&#39;,\n    val: &#39;3&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размер <code>_size</code></h3>\n<p>Задает размер шрифта.</p>\n<p>Обязательный модификатор. Реализован только в теме <em>normal</em>.</p>\n<p>Доступно два размера реализации блока: <strong>M</strong>, <strong>L</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>блока</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота строки<br>элемента <code>__box</code></th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Размер M&#39;,\n    name: &#39;name2&#39;,\n    val: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>17px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Размер L&#39;,\n    name: &#39;name3&#39;,\n    val: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Тип <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки (модификатор <code>_type</code> в значении <code>_button</code>). В таком случае выбор элемента происходит нажатием на кнопку.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39; },\n    text : &#39;Кнопка Normal&#39;,\n    name: &#39;button&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>_focused</code> со значением <code>_true</code> чекбокс всегда находится в фокусе. Если блок представлен в виде кнопки, она приобретает желтую тень. Нажатие по чекбоксу можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    text : &#39;В фокусе&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, focused : true },\n    text : &#39;В фокусе&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии «неактивен» чекбокс виден, но недоступен для действий пользователя.</p>\n<p>Такой чекбос не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    text : &#39;Неактивна&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, disabled : true },\n    text : &#39;Неактивна&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_checked-\">Отмечен <code>_checked</code></h4>\n<p>Модификатор <code>_checked</code> в значении <code>true</code> определяет, что чекбокс отмечен (выбран).</p>\n<p>Модификатор <code>_checked</code> может быть применен ко всем чекбоксам в группе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, checked : true },\n    text : &#39;Отмечен&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, checked : true },\n    text : &#39;Отмечен&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>__box</code> служит для отрисовки чекбокса, нативный чекбокс скрыт.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n<h3 id=\"-__control-\">Контрол <code>__control</code></h3>\n<p>Элемент <code>__control</code> служит для использования функциональности нативного контрола чекбокса.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n<h2 id=\"-\">Зависимости блока</h2>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "dropdown",
                    "data": {
                        "en": {
                            "name": "dropdown",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/dropdown/3LxBJkGCYdsRIM3jgENaGnBRRuI/3LxBJkGCYdsRIM3jgENaGnBRRuI.en"
                                        },
                                        {
                                            "url": "desktop.examples/dropdown/7xwP-2BJ2nd_leTd5MyNfCK8-wA/7xwP-2BJ2nd_leTd5MyNfCK8-wA.en"
                                        },
                                        {
                                            "url": "desktop.examples/dropdown/8Fm0DE_2FJy1NDrA8TqWefQAcRg/8Fm0DE_2FJy1NDrA8TqWefQAcRg.en"
                                        },
                                        {
                                            "url": "desktop.examples/dropdown/T2LPHF5xz8GwGt4VOGdjyOJF_lA/T2LPHF5xz8GwGt4VOGdjyOJF_lA.en"
                                        },
                                        {
                                            "url": "desktop.examples/dropdown/TZQCpS37p6PxRpc44EhMDX395AA/TZQCpS37p6PxRpc44EhMDX395AA.en"
                                        },
                                        {
                                            "url": "desktop.examples/dropdown/vkuviqNPhqQ2uV_ZhFfhVegfskc/vkuviqNPhqQ2uV_ZhFfhVegfskc.en"
                                        },
                                        {
                                            "url": "desktop.examples/dropdown/WcgFmT2l-N83y2w6hRJ-qqSpzkY/WcgFmT2l-N83y2w6hRJ-qqSpzkY.en"
                                        },
                                        {
                                            "url": "desktop.examples/dropdown/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": ""
                                }
                            ]
                        },
                        "ru": {
                            "name": "dropdown",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/dropdown/3LxBJkGCYdsRIM3jgENaGnBRRuI/3LxBJkGCYdsRIM3jgENaGnBRRuI.ru"
                                        },
                                        {
                                            "url": "desktop.examples/dropdown/7xwP-2BJ2nd_leTd5MyNfCK8-wA/7xwP-2BJ2nd_leTd5MyNfCK8-wA.ru"
                                        },
                                        {
                                            "url": "desktop.examples/dropdown/8Fm0DE_2FJy1NDrA8TqWefQAcRg/8Fm0DE_2FJy1NDrA8TqWefQAcRg.ru"
                                        },
                                        {
                                            "url": "desktop.examples/dropdown/T2LPHF5xz8GwGt4VOGdjyOJF_lA/T2LPHF5xz8GwGt4VOGdjyOJF_lA.ru"
                                        },
                                        {
                                            "url": "desktop.examples/dropdown/TZQCpS37p6PxRpc44EhMDX395AA/TZQCpS37p6PxRpc44EhMDX395AA.ru"
                                        },
                                        {
                                            "url": "desktop.examples/dropdown/vkuviqNPhqQ2uV_ZhFfhVegfskc/vkuviqNPhqQ2uV_ZhFfhVegfskc.ru"
                                        },
                                        {
                                            "url": "desktop.examples/dropdown/WcgFmT2l-N83y2w6hRJ-qqSpzkY/WcgFmT2l-N83y2w6hRJ-qqSpzkY.ru"
                                        },
                                        {
                                            "url": "desktop.examples/dropdown/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"dropdown\">dropdown</h1>\n<p>Блок <code>dropdown</code> используется для создания выпадающих элементов и позволяет изменять их состояние, поведение и внешний вид. Блок состоит из двух компонентов – управляющего компонента и попапа (блок <code>popup</code>), который отображается поверх остальных элементов страницы.</p>\n<p>Управляющий компонент при щелчке мышью вызывает попап (устанавливает для блока <code>popup</code> модификатор <code>_visible</code>).</p>\n<p>В зависимости от значения модификатора <code>_switcher</code>,  управляющим компонентом может служить ссылка, псевдоссылка или кнопка.</p>\n<h2 id=\"-\">Допустимые параметры блока</h2>\n<p>Допустимые параметры блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>switcher</td>\n        <td><code>String|BEMJSON</code></td>\n        <td>Текст управляющего компонента. Может содержать фрагмент BEMJSON, например, если нужно обернуть управляющий компонент в другой блок или передать ему дополнительные параметры. </td>\n    </tr>\n    <tr>\n        <td>popup</td>\n        <td><code>String|BEMJSON</code></td>\n        <td>Текст или фрагмент BEMJSON, отображаемый во всплывающем окне <code>popup</code>. BEMJSON при этом будет преобразован в HTML.</td>\n    </tr>\n</table>\n\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : { switcher : &#39;link&#39; },\n    switcher : &#39;link&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : { switcher : &#39;link&#39;, theme : &#39;simple&#39; },\n    switcher : &#39;link&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : { switcher : &#39;link&#39;, theme : &#39;normal&#39; },\n    switcher : &#39;link&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-_switcher-\">Управляющий компонент <code>_switcher</code></h3>\n<p>Обязательный модификатор.</p>\n<p>Модификатор отвечает за то, какой блок будет использоваться в качестве управляющего компонента:</p>\n<ul>\n<li><code>_switcher_link</code> - ссылка. В качестве управляющего компонента используется блок <code>link</code>.</li>\n<li><code>_switcher_button</code> - кнопка. В качестве управляющего компонента используется блок <code>button</code>.</li>\n</ul>\n<p>Реализован во всех темах.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    switcher : &#39;button&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-_disabled-\">Неактивен <code>_disabled</code></h3>\n<p>В состоянии &quot;неактивен&quot; дропдаун отображается, но недоступен для действий пользователя.</p>\n<p>Для такого блока не будет устанавливаться состояние <code>_opened</code> при щелчке мышью по управляющему компоненту.</p>\n<p>При установке для блока модификатора <code>_disabled</code>, для компонентов блока не будут производиться следующие действия:</p>\n<ul>\n<li>Блок </code>popup – установка модификатора <code>_visible</code>;</li>\n<li>Управляющий компонент <code>link</code> – установка состояния <code>_focused</code>. Ссылка не получает фокус по щелчку мышью или по нажатию клавиши <code>Tab</code>;</li>\n<li>Управляющий компонент <code>button</code>:<ul>\n<li>установка состояния <code>_focused</code>. Кнопка не получает фокус по щелчку мышью или по нажатию клавиши <code>Tab</code>;</li>\n<li>установка состояния <code>_hovered</code> при наведении указателем мыши.</li>\n</ul>\n</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;,\n        disabled : true\n    },\n    switcher : &#39;button&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_opened-\">Открыт <code>_opened</code></h4>\n<p>Модификатор <code>_opened</code> в значении <code>true</code> автоматически выставляется блоку при щелчке мышью по управляющему компоненту блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;,\n        opened : true\n    },\n    switcher : &#39;button&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<p>Модификатор снимается при повторном щелчке мышью по управляющему компоненту или за пределами попапа (зависит от наличия модификатора <code>_autoclosable</code> блока <code>popup</code>).</p>\n<h2 id=\"bemjson-switcher-popup-\">BEMJSON в атрибутах <code>switcher</code> и <code>popup</code></h2>\n<p>Атрибуты управляющего компонента и попапа могут содержать фрагмент БЭМ-дерева, например, если нужно обернуть управляющий компонент в другой блок или передать ему дополнительные параметры.</p>\n<p>Например, можно сделать кнопку управляющего компонента &quot;залипающей&quot;:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    switcher : {\n        block : &#39;button&#39;,\n        mods : { togglable : &#39;true&#39; },\n        text : &#39;custom button&#39;\n    },\n    popup : &#39;Popup message&#39;\n}\n</code></pre>\n<p>Или создать на основе блока выпадающий селект:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    switcher : &#39;Dropdown menu&#39;,\n    popup : {\n        block : &#39;menu&#39;,\n        mods : {\n            theme : &#39;normal&#39;,\n            size : &#39;xl&#39;,\n            select : &#39;check&#39;\n        },\n        content : [\n            {\n                block : &#39;menu-item&#39;,\n                val : 1,\n                content : &#39;First item&#39;\n            },\n            {\n                block : &#39;menu-item&#39;,\n                val : 2,\n                content : &#39;Second item&#39;\n            }\n        ]\n    }\n}\n</code></pre>\n<h2 id=\"-\">Зависимости блока</h2>\n<p>Блок <code>dropdown</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>dom</code></li>\n<li><code>popup</code></li>\n<li><code>button</code>/<code>link</code> (в зависимости от управляющего компонента <code>_switcher</code>)</li>\n</ul>\n\n<h1 id=\"popup\">popup</h1>\n<p>Блок <code>popup</code> используется для создания выпадающих элементов и позволяет изменять их состояние, поведение и внешний вид. Блок отображается поверх остальных элементов страницы.</p>\n<p>Попап может быть вызван различными элементами страницы, например, кнопками или псевдоссылками.</p>\n<p>В момент первого показа (установка модификатора <code>_visible</code>) DOM-элемент блока создается в конце <code>&lt;body&gt;</code>.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    content : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;simple&#39; },\n    content : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39; },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_visible-\">Видимый <code>_visible</code></h3>\n<p>Модификатор, отвечающий за видимость блока. При значении модификатора <code>false</code> блок не отображается.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39;, visible : true },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_direction-\">Расположение относительно родителя <code>_direction</code></h3>\n<p>Модификатор управляет положением попапа на странице, относительно вызвавшего его блока. Расположение блока определяется автоматически, исходя из массива допустимых расположений и положения родителя на странице.</p>\n<p>Выбранное расположение влияет на направление анимации раскрытия.</p>\n<p>По умолчанию используется следующий массив допустимых расположений:</p>\n<table>\n    <tr>\n        <th> Направление раскрытия </td>\n        <th> Индекс в массиве </td>\n    </tr>\n        <td> bottom-left </td>\n        <td> 0 </td>\n    </tr>\n    <tr>\n        <td> bottom-center </td>\n       <td> 1 </td>\n   </tr>\n    <tr>\n        <td> bottom-right</td>\n        <td> 2 </td>\n    </tr>\n    <tr>\n        <td> top-left </td>\n        <td> 3 </td>\n    </tr>\n    <tr>\n        <td> top-center </td>\n        <td> 4 </td>\n    </tr>\n    <tr>\n        <td> top-right </td>\n        <td> 5 </td>\n    </tr>\n    <tr>\n        <td> right-top </td>\n        <td> 6 </td>\n    </tr>\n    <tr>\n        <td> right-center </td>\n        <td> 7 </td>\n    </tr>\n    <tr>\n        <td> right-bottom </td>\n        <td> 8 </td>\n    </tr>\n    <tr>\n        <td> left-top </td>\n        <td> 9 </td>\n    </tr>\n    <tr>\n        <td> left-center </td>\n        <td> 10 </td>\n    </tr>\n    <tr>\n        <td> left-bottom </td>\n        <td> 11 </td>\n    </tr>\n</table>\n\n<p>Чтобы управлять расположением попапа, можно ограничить массив расположений, оставив только требуемые. Пользовательский массив нужно передать в качестве JS-параметра с ключом <code>directions</code>. При этом, из значений массива будет выбрано наиболее подходящее, исходя из положения родителя на странице.</p>\n<p>Например, если требуется, чтобы попап раскрывался над родителем:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { autoclosable : true, theme: &#39;simple&#39; },\n    js : { directions : [&#39;top-left&#39;, &#39;top-center&#39;, &#39;top-right&#39;] },\n    content : &#39;Hello, world!&#39;\n}\n</code></pre>\n<p>Или разместить попап справа по центру:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { autoclosable : true, theme: &#39;simple&#39; },\n    js : { directions : [&#39;right-center&#39;] },\n    content : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-_autoclosable-\">Автоматическое скрытие <code>_autoclosable</code></h3>\n<p>Модификатор отвечает за автоматическое скрытие попапа при клике вне блока. При установке модификатора <code>_autoclosable</code> в значении <code>_true</code> блок будет скрываться при щелчке за его пределами (будет снят модификатор <code>_visible</code>).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39;, autoclosable : true },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h2 id=\"-popup-\">Взаимосвязи между popup&#39;ами</h2>\n<p>Так как попап выносит себя в конец <code>&lt;body&gt;</code>, чтобы перекрывать другие элементы страницы, возникает необходимость в построении взаимосвязей. Блок умеет выстраивать связи Parent → [ Child, Child, ... ]. Для этого он выполняет проверку, вложен ли блок, вызывающий попап в другой <code>popup</code>. Потомки знают о наличии родителя.\nЕсли бы этих взаимосвязей не было, то родительский попап (при наличии модификатора <code>autoclosable</code> со значением <code>true</code>) закрылся бы при клике внутри дочернего.</p>\n<p>Другими словами, модификатор <code>autoclosable</code> со значением <code>true</code> означает, что попап закроется сам и закроет свои дочерние блоки при клике за пределами его самого и дочерних попапов.</p>\n<p>Дочерние блоки popup можно рассматривать в виде цепочки 1 → 2 → 3 → 4. При клике на 2-ом попапе – закрываются 3, 4. При клике в 1 – закрываются 2, 3, 4. При клике за пределами любого попапа из цепочки – закроются все.</p>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>popup</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n<li><code>objects</code></li>\n<li><code>functions__throttle</code></li>\n<li><code>keyboard</code></li>\n<li><code>ua</code></li>\n<li><code>jquery__event_pointer</code></li>\n</ul>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "icon",
                    "jsdoc": "",
                    "data": {
                        "en": {
                            "name": "icon",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/icon/736jrhNCMKyzz6eOAkelfMYfHUY/736jrhNCMKyzz6eOAkelfMYfHUY.en"
                                        },
                                        {
                                            "url": "desktop.examples/icon/AGqG4VvhTvV3H5tD4ed6nkvlHJ4/AGqG4VvhTvV3H5tD4ed6nkvlHJ4.en"
                                        },
                                        {
                                            "url": "desktop.examples/icon/b2PchFG0vbxDCGt-_1VzrN-GK0/b2PchFG0vbxDCGt-_1VzrN-GK0.en"
                                        },
                                        {
                                            "url": "desktop.examples/icon/bek_pi0vSgei-mm8QD-H3qy_E0c/bek_pi0vSgei-mm8QD-H3qy_E0c.en"
                                        },
                                        {
                                            "url": "desktop.examples/icon/bqsLdaiup-wWnOz-fYrlos47T_c/bqsLdaiup-wWnOz-fYrlos47T_c.en"
                                        },
                                        {
                                            "url": "desktop.examples/icon/DEqt3yJaoYjT7_-VWb6vuJTvDVk/DEqt3yJaoYjT7_-VWb6vuJTvDVk.en"
                                        },
                                        {
                                            "url": "desktop.examples/icon/NbDEoCuSh4Kby-HPFpw0JdrlyQQ/NbDEoCuSh4Kby-HPFpw0JdrlyQQ.en"
                                        },
                                        {
                                            "url": "desktop.examples/icon/w_tWuwVyYuwv7N6i7jChuJOj8Vc/w_tWuwVyYuwv7N6i7jChuJOj8Vc.en"
                                        },
                                        {
                                            "url": "desktop.examples/icon/ynzqkkw6NrAupB31X9zL3RrjsuA/ynzqkkw6NrAupB31X9zL3RrjsuA.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"icon\">icon</h1>\n<p><code>&lt;i&gt;</code>-based block for using as an element in other blocks, not for independent using. Picture is set as <code>background</code> property.</p>\n<p>In BEMJSON you can use both the modifier and the <code>url</code> field for a picture representation:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n     block : &#39;icon&#39;,\n     url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, mods : { social : &#39;twitter&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;checkbox&#39;,\n        mods : { theme : &#39;simple&#39;, type : &#39;button&#39; },\n        text : &#39;icon&#39;,\n        icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, url : &#39;../../../test.blocks/icon/_action/download.svg&#39; }\n    }\n</code></pre>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "icon",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/icon/736jrhNCMKyzz6eOAkelfMYfHUY/736jrhNCMKyzz6eOAkelfMYfHUY.ru"
                                        },
                                        {
                                            "url": "desktop.examples/icon/AGqG4VvhTvV3H5tD4ed6nkvlHJ4/AGqG4VvhTvV3H5tD4ed6nkvlHJ4.ru"
                                        },
                                        {
                                            "url": "desktop.examples/icon/b2PchFG0vbxDCGt-_1VzrN-GK0/b2PchFG0vbxDCGt-_1VzrN-GK0.ru"
                                        },
                                        {
                                            "url": "desktop.examples/icon/bek_pi0vSgei-mm8QD-H3qy_E0c/bek_pi0vSgei-mm8QD-H3qy_E0c.ru"
                                        },
                                        {
                                            "url": "desktop.examples/icon/bqsLdaiup-wWnOz-fYrlos47T_c/bqsLdaiup-wWnOz-fYrlos47T_c.ru"
                                        },
                                        {
                                            "url": "desktop.examples/icon/DEqt3yJaoYjT7_-VWb6vuJTvDVk/DEqt3yJaoYjT7_-VWb6vuJTvDVk.ru"
                                        },
                                        {
                                            "url": "desktop.examples/icon/NbDEoCuSh4Kby-HPFpw0JdrlyQQ/NbDEoCuSh4Kby-HPFpw0JdrlyQQ.ru"
                                        },
                                        {
                                            "url": "desktop.examples/icon/w_tWuwVyYuwv7N6i7jChuJOj8Vc/w_tWuwVyYuwv7N6i7jChuJOj8Vc.ru"
                                        },
                                        {
                                            "url": "desktop.examples/icon/ynzqkkw6NrAupB31X9zL3RrjsuA/ynzqkkw6NrAupB31X9zL3RrjsuA.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"icon\">icon</h1>\n<p>Блок <code>icon</code> используется в качестве графического элемента в других блоках. В HTML представлен тегом <code>&lt;i&gt;</code>. Иконка задается через свойство <code>background</code> и, соответственно, не имеет возможности фоллбека.</p>\n<p>Иконку можно передать как через модификатор, так и через поле <code>url</code>:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;icon&#39;,\n    mods : { social : &#39;twitter&#39; }\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;icon&#39;,\n    url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка с иконкой&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;with icon&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n}\n</code></pre>\n"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "image",
                    "data": {
                        "en": {
                            "name": "image",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/image/lC8WanGqU6n--Ri8zFvBCOidyB8/lC8WanGqU6n--Ri8zFvBCOidyB8.en"
                                        },
                                        {
                                            "url": "desktop.examples/image/W7nRFaBTSLrx_BrCfEIKX7fNYJg/W7nRFaBTSLrx_BrCfEIKX7fNYJg.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"image\">image</h1>\n<p><code>&lt;img&gt;</code>-based block for images, using as a content (logo, for example).</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;image&#39;,\n        url : &#39;http://bem.info/m/_/20zuV2gLiyoaqrHv9LoBRTmB0Ow.svg&#39;,\n        width : 16,\n        height : 16,\n        alt : &#39;BEM&#39;,\n        title : &#39;Find us on bem.info&#39;\n    }\n</code></pre>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "image",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/image/lC8WanGqU6n--Ri8zFvBCOidyB8/lC8WanGqU6n--Ri8zFvBCOidyB8.ru"
                                        },
                                        {
                                            "url": "desktop.examples/image/W7nRFaBTSLrx_BrCfEIKX7fNYJg/W7nRFaBTSLrx_BrCfEIKX7fNYJg.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"image\">image</h1>\n<p>Блок <code>image</code> используется для вставки картинок.</p>\n<p>В HTML представлен тегом <code>&lt;img&gt;</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;image&#39;,\n    url : &#39;http://bem.info/m/_/20zuV2gLiyoaqrHv9LoBRTmB0Ow.svg&#39;,\n    width : 100,\n    height : 100,\n    alt : &#39;BEM&#39;,\n    title : &#39;Find us on bem.info&#39;\n}\n</code></pre>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>title</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает имя картинки.</td>\n    </tr>\n    <tr>\n        <td>alt</td>\n        <td>\n            <code>String</code></td>\n        <td>Обязательный атрибут. Устанавливает альтернативный текст для изображений. Такой текст позволяет получить текстовую информацию о картинке при отключенной в браузере загрузке изображений. <br>Блок распознается программами чтения с экрана для альтернативного воспроизведения.</td>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Адрес ссылки, по которой подгружается картинка.</td>\n    </tr>\n    <tr>\n        <td>width, height</td>\n        <td>\n            <code>Number</code>\n        </td>\n        <td>Значения, которые будут переданы в одноименные атрибуты картинки.</td>\n    </tr>\n</table>\n\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "input",
                    "jsdoc": "",
                    "data": {
                        "en": {
                            "name": "input",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/input/0jZ6y8S1ANsxfMm_E1peUdEhyy0/0jZ6y8S1ANsxfMm_E1peUdEhyy0.en"
                                        },
                                        {
                                            "url": "desktop.examples/input/4hhBI_vwtFJlpwXu8DnFh6HdrYY/4hhBI_vwtFJlpwXu8DnFh6HdrYY.en"
                                        },
                                        {
                                            "url": "desktop.examples/input/_rQiPCz_bRgjryQQWFEhXhyJnyM/_rQiPCz_bRgjryQQWFEhXhyJnyM.en"
                                        },
                                        {
                                            "url": "desktop.examples/input/b18rvMU7reGrqw4kb0MSTpvQ3YI/b18rvMU7reGrqw4kb0MSTpvQ3YI.en"
                                        },
                                        {
                                            "url": "desktop.examples/input/CdWLw8cu0kAjbKLZFrp_sw7N67s/CdWLw8cu0kAjbKLZFrp_sw7N67s.en"
                                        },
                                        {
                                            "url": "desktop.examples/input/hwtIQVRUxvCPVxAJgWKBqBRt6Is/hwtIQVRUxvCPVxAJgWKBqBRt6Is.en"
                                        },
                                        {
                                            "url": "desktop.examples/input/JCaTuV74Ua-xND0IW39wBPdvHBI/JCaTuV74Ua-xND0IW39wBPdvHBI.en"
                                        },
                                        {
                                            "url": "desktop.examples/input/m1GvVMb4ZI4DvaKjyQWVNZLyquA/m1GvVMb4ZI4DvaKjyQWVNZLyquA.en"
                                        },
                                        {
                                            "url": "desktop.examples/input/r1ntKHWLCj3QPfaejFd3aVNqDNo/r1ntKHWLCj3QPfaejFd3aVNqDNo.en"
                                        },
                                        {
                                            "url": "desktop.examples/input/SwtjmJjtMXak9KKSsPMLXihNiQI/SwtjmJjtMXak9KKSsPMLXihNiQI.en"
                                        },
                                        {
                                            "url": "desktop.examples/input/TOwrkpCDAmLABnXxE-2IBwxsCXo/TOwrkpCDAmLABnXxE-2IBwxsCXo.en"
                                        },
                                        {
                                            "url": "desktop.examples/input/U1jetXgNoFl9qXtgecJy3MmnnJ0/U1jetXgNoFl9qXtgecJy3MmnnJ0.en"
                                        },
                                        {
                                            "url": "desktop.examples/input/yAehEbulTw29FYJa_ye7ntQkTkU/yAehEbulTw29FYJa_ye7ntQkTkU.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"input\">input</h1>\n<p>The <strong>input</strong> block is intended to create different types of text fields:</p>\n<ul>\n<li>textarea</li>\n<li>password field</li>\n<li>search form</li>\n</ul>\n<p>In MSIE8 block <strong>input</strong> degrades to a native control <code>&lt;input attribute&gt;</code>; a text field is renedered as native text area <code>&lt;textarea attribute&gt;</code>.</p>\n<h2 id=\"available-block-s-attributes\">Available block&#39;s attributes</h2>\n<p>Available block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n    <tr>\n        <th>Attribute</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>String</td>\n        <td>Value to be sent to the server. It is empty by default.</td>\n    </tr>\n    <tr>\n        <td>placeholder</td>\n        <td>String</td>\n        <td>Text to be replaced. Has an empty value by default.</td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>String</td>\n        <td>Unique block modifier. The value is randomly generated by default. Could be specified manually.</td>\n    </tr>\n    <tr>\n        <td>label</td>\n        <td><code>string</code></td>\n        <td>Lable above an input field.</td>\n    </tr>\n</table>\n\n\n<p>Available block&#39;s attributes that could be provided in <code>attrs</code> field in BEMJSON:</p>\n<ul>\n<li>name (<em>common</em>)</li>\n<li>tabindex (<em>common</em>)</li>\n<li>spellcheck (<em>common</em>)</li>\n<li>accesskey (<em>common</em>)</li>\n<li>rows (<code>_textarea</code>)</li>\n<li>cols (<code>_textarea</code>)</li>\n<li>readonly (<code>_textarea</code>)</li>\n<li>wrap (<code>_textarea</code>)</li>\n<li>maxlength (<code>_textarea</code>)</li>\n</ul>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"-_theme-\"><code>_theme</code></h3>\n<p>The block is available in the following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>If the theme is not specified the block obtains default values:</p>\n<ul>\n<li>Input field type: text field</li>\n<li>Width: 100%</li>\n<li>Theme: native representation</li>\n<li>Text area size: <code>cols:10</code>, <code>rows:10</code></li>\n</ul>\n<p>Following example demonstrates this:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    placeholder : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;simple&#39; },\n    placeholder : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39; },\n    placeholder : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_type-\"><code>_type</code></h3>\n<p>The following types of <strong>input</strong> block are available:</p>\n<ul>\n<li><code>_textarea</code></li>\n<li><code>_password</code></li>\n<li><code>_search</code></li>\n</ul>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<table>\n    <tr>\n        <th>Type / Realisation</th>\n        <th>default</th>\n        <th>simple</th>\n        <th>normal</th>\n    </tr>\n    <tr>\n        <td> <code>_textarea</code></td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { type : &#39;textarea&#39; },\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        type : &#39;textarea&#39;\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        type : &#39;textarea&#39;\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td> <code>_password</code></td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    placeholder : &#39;default&#39;,\n    mods : { type : &#39;password&#39; }\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        type : &#39;password&#39;\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        type : &#39;password&#39;\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td> <code>_search</code></td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { type : &#39;search&#39; },\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        type : &#39;search&#39;\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        type : &#39;search&#39;\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"block-s-state\">Block&#39;s state</h3>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If block is disabled all its elements become unavailable for user&#39;s action.</p>\n<p>The <strong>input</strong> block is active by default even it disabled modifier is not specified.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, disabled : true },\n    val : &#39;disabled&#39;\n}\n</code></pre>\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>The input field is focused if a block has a <code>_focused</code> modifier with <code>true</code> vlue.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<pre><code>{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, focused : true },\n    val : &#39;focused&#39;\n}\n</code></pre><h3 id=\"-_has-clear-\"><code>_has-clear</code></h3>\n<p>A <code>clear</code> cross element appears in the input field if a block has a <code>_has-clear</code> modifier with <code>true</code> value.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<table>\n    <tr>\n        <th>default</th>\n        <th>simple</th>\n        <th>normal</th>\n    </tr>\n    <tr>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { &#39;has-clear&#39; : true },\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        &#39;has-clear&#39; : true\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        &#39;has-clear&#39; : true\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<hr>\n<p><strong>NB</strong> Be aware the modifier <code>has-clear</code> is not available for a <code>search field</code> in <em>simple</em> theme.</p>\n<hr>\n<h3 id=\"-_has-label-\"><code>_has-label</code></h3>\n<p>A lable (<code>__label</code> element) above the input field is available if a block has a <code>_has-label</code> modifier with <code>true</code> value.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<table>\n    <tr>\n        <th>default</th>\n        <th>simple</th>\n        <th>normal</th>\n    </tr>\n    <tr>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { &#39;has-clear&#39; : true },\n    label : &#39;Label&#39;,\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        &#39;has-label&#39; : true\n    },\n    label : &#39;Label&#39;,\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        &#39;has-label&#39; : true\n    },\n    label : &#39;Label&#39;,\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<p>The following elements provide visual representation of a <strong>input</strong> block:</p>\n<h3 id=\"__box\">__box</h3>\n<p>A mandatory element.</p>\n<p>An element fot input field forming (native input field is hidden).</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>A button (cross element) intended to clear an input field content.</p>\n<p>The cross element is unavailable if a block has a <code>has-clear</code> modifier with <code>false</code> value.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, &#39;has-clear&#39; : true },\n    label : &#39;label&#39;\n}\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>A mndatory element.</p>\n<p>This element is processed by BEMHTML or BH template engine to a native <code>&lt;input attribute&gt;</code> control.</p>\n<h3 id=\"__label\">__label</h3>\n<p>A lablel above an input field.</p>\n<p>This element provides a lable above an input field. In HTML is rendered as a <code>&lt;label&gt;</code> tag. A lable is linked with an <code>&lt;input&gt;</code> tag by the unique <code>id</code> identifier, that is generated random by default.</p>\n<p>Click the input field to set a <code>focused</code> modifier.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, &#39;has-label&#39; : true },\n    label : &#39;label&#39;\n}\n</code></pre>\n<h2 id=\"block-s-dependencies\">Block&#39;s dependencies</h2>\n<p>An <strong>input</strong> block depends on:</p>\n<ul>\n<li><code>base-control</code>, that provides public API;</li>\n<li><code>i-bem__dom</code> block.</li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "input",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/input/0jZ6y8S1ANsxfMm_E1peUdEhyy0/0jZ6y8S1ANsxfMm_E1peUdEhyy0.ru"
                                        },
                                        {
                                            "url": "desktop.examples/input/4hhBI_vwtFJlpwXu8DnFh6HdrYY/4hhBI_vwtFJlpwXu8DnFh6HdrYY.ru"
                                        },
                                        {
                                            "url": "desktop.examples/input/_rQiPCz_bRgjryQQWFEhXhyJnyM/_rQiPCz_bRgjryQQWFEhXhyJnyM.ru"
                                        },
                                        {
                                            "url": "desktop.examples/input/b18rvMU7reGrqw4kb0MSTpvQ3YI/b18rvMU7reGrqw4kb0MSTpvQ3YI.ru"
                                        },
                                        {
                                            "url": "desktop.examples/input/CdWLw8cu0kAjbKLZFrp_sw7N67s/CdWLw8cu0kAjbKLZFrp_sw7N67s.ru"
                                        },
                                        {
                                            "url": "desktop.examples/input/hwtIQVRUxvCPVxAJgWKBqBRt6Is/hwtIQVRUxvCPVxAJgWKBqBRt6Is.ru"
                                        },
                                        {
                                            "url": "desktop.examples/input/JCaTuV74Ua-xND0IW39wBPdvHBI/JCaTuV74Ua-xND0IW39wBPdvHBI.ru"
                                        },
                                        {
                                            "url": "desktop.examples/input/m1GvVMb4ZI4DvaKjyQWVNZLyquA/m1GvVMb4ZI4DvaKjyQWVNZLyquA.ru"
                                        },
                                        {
                                            "url": "desktop.examples/input/r1ntKHWLCj3QPfaejFd3aVNqDNo/r1ntKHWLCj3QPfaejFd3aVNqDNo.ru"
                                        },
                                        {
                                            "url": "desktop.examples/input/SwtjmJjtMXak9KKSsPMLXihNiQI/SwtjmJjtMXak9KKSsPMLXihNiQI.ru"
                                        },
                                        {
                                            "url": "desktop.examples/input/TOwrkpCDAmLABnXxE-2IBwxsCXo/TOwrkpCDAmLABnXxE-2IBwxsCXo.ru"
                                        },
                                        {
                                            "url": "desktop.examples/input/U1jetXgNoFl9qXtgecJy3MmnnJ0/U1jetXgNoFl9qXtgecJy3MmnnJ0.ru"
                                        },
                                        {
                                            "url": "desktop.examples/input/yAehEbulTw29FYJa_ye7ntQkTkU/yAehEbulTw29FYJa_ye7ntQkTkU.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"input\">input</h1>\n<p>Блок <code>input</code> служит для создания различных типов текстовых полей:</p>\n<ul>\n<li>поле ввода (значение по умолчанию);</li>\n<li>текстовая область;</li>\n<li>поле с паролем;</li>\n<li>поисковая форма.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Значение, отправляемое на сервер. По умолчанию пустое.</td>\n    </tr>\n    <tr>\n        <td>placeholder</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Подсказка в поле ввода.</td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Уникальный идентификатор блока. По умолчанию генерируется случайным образом, если явно не задан в BEMJSON.</td>\n    </tr>\n    <tr>\n        <td>label</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Метка над полем ввода.</td>\n    </tr>\n</table>\n\n\n<p>Другие допустимые атрибуты блока могут быть заданы в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    placeholder : &#39;default&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;simple&#39; },\n    placeholder : &#39;simple&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39; },\n    placeholder : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры <code>_size</code></h3>\n<p>Задает размер всем типам текстовых полей. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота<br>строки</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;s&#39; },\n    placeholder : &#39;Small&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39; },\n    placeholder : &#39;Medium&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;l&#39; },\n    placeholder : &#39;Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;xl&#39; },\n    placeholder : &#39;X-Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Типы <code>_type</code></h3>\n<p>Блок представлен следующими типами:</p>\n<ul>\n<li>текстовая область (<code>_textarea</code>)</li>\n<li>поле с паролем (<code>_password</code>)</li>\n<li>поисковая форма (<code>_search</code>)</li>\n</ul>\n<p>Без указания типа поля блок <code>input</code> по умолчанию получает значение <code>&lt;input type=&quot;text&quot;/&gt;</code>.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Реализация</th>\n    </tr>\n    <tr>\n        <td>\n            <code>_textarea</code>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;textarea&#39; },\n    placeholder : &#39;Тексторвая область&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>_password</code>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39;, type : &#39;password&#39; },\n    placeholder : &#39;Поле с паролем&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>_search</code>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;search&#39; },\n    placeholder : &#39;Поисковая форма&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии блока «неактивен» поле ввода и все его элементы становятся недоступными для действий пользователя.</p>\n<p>Если модификатор <code>_disabled</code> не установлен, инпут по умолчанию активен.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    val : &#39;Неактивно&#39;\n}\n</code></pre>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>_focused</code> со значением <code>true</code> поле ввода находится в фокусе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    val : &#39;В фокусе&#39;\n}\n</code></pre>\n<h3 id=\"-_has-clear-\">Очистка содержимого <code>_has-clear</code></h3>\n<p>Модификатор <code>_has-clear</code> в значении <code>_true</code> отображает в инпуте крестик для очистки содержимого (элемент <code>__clear</code>).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, &#39;has-clear&#39; : true },\n    placeholder : &#39;Добавлен крестик для очистки содержимого&#39;\n}\n</code></pre>\n<h3 id=\"-_has-label-\">Метка над полем ввода <code>_has-label</code></h3>\n<p>Модификатор <code>_has-label</code> в значении <code>_true</code> указывает на наличие метки над полем ввода (элемент <code>__label</code>).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, &#39;has-label&#39; : true },\n    label : &#39;Label&#39;,\n    placeholder : &#39;Метка над полем ввода&#39;\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__box\">__box</h3>\n<p>Обязательный элемент.</p>\n<p>Элемент, рисующий поля ввода (поля нативного инпута скрыты).</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Кнопка очистки содержимого инпута («крестик»).</p>\n<p>По умолчанию модификатор <code>_has-label</code> имеет значение <code>_false</code>, при котором крестик не отображается. Для отображения крестика нужно установить модификатор в значение <code>_true</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39;, &#39;has-clear&#39; : true },\n    placeholder : &#39;Добавлен крестик для очистки содержимого&#39;\n}\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>Обязательный элемент.</p>\n<p>BEMHTML- или BH-шаблоном преобразуется в нативный контрол <code>&lt;input&gt;</code>.</p>\n<h3 id=\"__label\">__label</h3>\n<p>Метка над полем ввода.\nЭлемент добавляет метку с тегом <code>&lt;label&gt;</code> над полем ввода. Связь метки с тэгом <code>&lt;input&gt;</code> устанавливается с помощью идентификатора <code>id</code>, который может генерироваться автоматически.\nПри щелчке кнопкой мыши на метку в поле ввода будет установлен фокус.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, &#39;has-label&#39; : true },\n    label : &#39;Метка над полем ввода&#39;\n}\n</code></pre>\n<h2 id=\"-\">Зависимости блока</h2>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "link",
                    "jsdoc": "",
                    "data": {
                        "en": {
                            "name": "link",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/link/chWrNSQqHxfoi-xep8pjJQnF124/chWrNSQqHxfoi-xep8pjJQnF124.en"
                                        },
                                        {
                                            "url": "desktop.examples/link/MlN17lxDfpZbuzsh5l2N1VNo16U/MlN17lxDfpZbuzsh5l2N1VNo16U.en"
                                        },
                                        {
                                            "url": "desktop.examples/link/rVrcuNJ0PMv5S2Q4KNH4HsM6Zds/rVrcuNJ0PMv5S2Q4KNH4HsM6Zds.en"
                                        },
                                        {
                                            "url": "desktop.examples/link/v4bNHfaIobOFWcneUxLQDbb4T9g/v4bNHfaIobOFWcneUxLQDbb4T9g.en"
                                        },
                                        {
                                            "url": "desktop.examples/link/Y3yr9bNzwYkA9sSkV8EkqO30JYI/Y3yr9bNzwYkA9sSkV8EkqO30JYI.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "link",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/link/chWrNSQqHxfoi-xep8pjJQnF124/chWrNSQqHxfoi-xep8pjJQnF124.ru"
                                        },
                                        {
                                            "url": "desktop.examples/link/MlN17lxDfpZbuzsh5l2N1VNo16U/MlN17lxDfpZbuzsh5l2N1VNo16U.ru"
                                        },
                                        {
                                            "url": "desktop.examples/link/rVrcuNJ0PMv5S2Q4KNH4HsM6Zds/rVrcuNJ0PMv5S2Q4KNH4HsM6Zds.ru"
                                        },
                                        {
                                            "url": "desktop.examples/link/v4bNHfaIobOFWcneUxLQDbb4T9g/v4bNHfaIobOFWcneUxLQDbb4T9g.ru"
                                        },
                                        {
                                            "url": "desktop.examples/link/Y3yr9bNzwYkA9sSkV8EkqO30JYI/Y3yr9bNzwYkA9sSkV8EkqO30JYI.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"link\">link</h1>\n<p>Блок <code>link</code> используется для создания различных типов ссылок и предоставляет возможность изменять их состояние, внешний вид и поведение.</p>\n<h2 id=\"-\">Варианты использования ссылок</h2>\n<p>Блок <strong>link</strong> служит для создания следующих типов ссылок:</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Описание</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычная ссылка</td>\n        <td>Применяется для любых ссылок веб-интерфейса. Используется по умолчанию.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;link&#39;,\n    url : &#39; #&#39;,\n    content : &#39;link&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Псевдоссылка</td>\n        <td>Разновидность ссылки, при нажатии по которой в браузере не осуществляется переход. Применяется для вызова сценариев.\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;link&#39;,\n    mods : { pseudo : true, theme: &#39;normal&#39; },\n    content : &#39;pseudo&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h2 id=\"-\">Допустимые параметры блока</h2>\n<p>Допустимые параметры блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td><code>String|BEMJSON</code></td>\n        <td>Адрес ссылки. Если указан, значение <code>url</code> становится атрибутом <code>href</code>. Обязательный параметр для обычной ссылки. Если в качестве значения передан BEMJSON, он будет обработан и вернет строку.</td>\n    </tr>\n    <tr>\n        <td>title</td>\n        <td><code>String</code></td>\n        <td>Текст всплывающей подсказки</td>\n    </tr>\n    <tr>\n        <td>target</td>\n        <td><code>String</code></td>\n        <td>Целевое окно. Обычно атрибут указывается со значением <code>_blank</code>, чтобы открыть адрес ссылки в новом окне.</td>\n    </tr>\n    <tr>\n        <td>tabIndex</td>\n        <td><code>Number</code></td>\n        <td> Индекс, задающий последовательность перехода между ссылками при нажатии на клавишу <code>Tab</code>. Атрибут преобразуется в нативный атрибут <code>tabindex</code>.</td>\n    </tr>\n</table>\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Например:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;link&#39;,\n    url : &#39;#&#39;,\n    content : &#39;link&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;link&#39;,\n    mods : { theme : &#39;simple&#39; },\n    url : &#39;#&#39;,\n    content : &#39;link&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;link&#39;,\n    mods : { theme : &#39;normal&#39; },\n    url : &#39;#&#39;,\n    content : &#39;link&#39;\n}\n</code></pre>\n<h3 id=\"-_pseudo-\">Псевдоссылка <code>_pseudo</code></h3>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;link&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        pseudo : true\n    },\n    title : &#39;pseudo mod are toggled&#39;,\n    content : &#39;link&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью. Нажатие по ней можно выполнить клавишей <code>Enter</code>.</p>\n<pre><code>{\n    block : &#39;link&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        focused : true\n    },\n    url : &#39;#&#39;,\n    content : &#39;_focused&#39;\n}\n</code></pre><h4 id=\"-_disabled-\">Неактивна <code>_disabled</code></h4>\n<p>В состоянии &quot;не активна&quot; ссылка отображается, но недоступна для действий пользователя.</p>\n<p>Для такой ссылки не будет:</p>\n<ul>\n<li>устанавливаться модификатор <code>_focused</code> в момент получения фокуса;</li>\n<li>осуществляться переход, если задан атрибут <code>url</code>;</li>\n<li>генерироваться БЭМ-событие <code>click</code>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;link&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        disabled : true\n    },\n    url : &#39;#&#39;,\n    content : &#39;_disabled&#39;\n}\n</code></pre>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>link</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "menu",
                    "data": {
                        "en": {
                            "name": "menu",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/menu/8mTA6MmyQr8VqdzJxhkrwh1ypW4/8mTA6MmyQr8VqdzJxhkrwh1ypW4.en"
                                        },
                                        {
                                            "url": "desktop.examples/menu/j09oi8qGORMEkQNDKOmalqZBM1A/j09oi8qGORMEkQNDKOmalqZBM1A.en"
                                        },
                                        {
                                            "url": "desktop.examples/menu/mNU2Ucfjxab1clvoW45IQTWsm30/mNU2Ucfjxab1clvoW45IQTWsm30.en"
                                        },
                                        {
                                            "url": "desktop.examples/menu/V9ZPDhB9nl8kg2So6etTZN9GhGM/V9ZPDhB9nl8kg2So6etTZN9GhGM.en"
                                        },
                                        {
                                            "url": "desktop.examples/menu/vOj7Zu3fBIVl7z06MI97PrXpqWI/vOj7Zu3fBIVl7z06MI97PrXpqWI.en"
                                        },
                                        {
                                            "url": "desktop.examples/menu/wCjQ3Ywp-Sr5jbo9tVEXSlFoKxU/wCjQ3Ywp-Sr5jbo9tVEXSlFoKxU.en"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/00ejmLqt61w5ksAsfBl7KgE4dBE/00ejmLqt61w5ksAsfBl7KgE4dBE.en"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/47lHiiyDspaBs5AiC22G42Y-N_o/47lHiiyDspaBs5AiC22G42Y-N_o.en"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/Sgw4iIN4STar-QE05xyBmgntftw/Sgw4iIN4STar-QE05xyBmgntftw.en"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/sURVY49aNm3TBC1XVeOG1Q5_vi8/sURVY49aNm3TBC1XVeOG1Q5_vi8.en"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/T77G-B0x1-Z9ZaPqpW_TAskNFI8/T77G-B0x1-Z9ZaPqpW_TAskNFI8.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "menu",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/menu/8mTA6MmyQr8VqdzJxhkrwh1ypW4/8mTA6MmyQr8VqdzJxhkrwh1ypW4.ru"
                                        },
                                        {
                                            "url": "desktop.examples/menu/j09oi8qGORMEkQNDKOmalqZBM1A/j09oi8qGORMEkQNDKOmalqZBM1A.ru"
                                        },
                                        {
                                            "url": "desktop.examples/menu/mNU2Ucfjxab1clvoW45IQTWsm30/mNU2Ucfjxab1clvoW45IQTWsm30.ru"
                                        },
                                        {
                                            "url": "desktop.examples/menu/V9ZPDhB9nl8kg2So6etTZN9GhGM/V9ZPDhB9nl8kg2So6etTZN9GhGM.ru"
                                        },
                                        {
                                            "url": "desktop.examples/menu/vOj7Zu3fBIVl7z06MI97PrXpqWI/vOj7Zu3fBIVl7z06MI97PrXpqWI.ru"
                                        },
                                        {
                                            "url": "desktop.examples/menu/wCjQ3Ywp-Sr5jbo9tVEXSlFoKxU/wCjQ3Ywp-Sr5jbo9tVEXSlFoKxU.ru"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/00ejmLqt61w5ksAsfBl7KgE4dBE/00ejmLqt61w5ksAsfBl7KgE4dBE.ru"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/47lHiiyDspaBs5AiC22G42Y-N_o/47lHiiyDspaBs5AiC22G42Y-N_o.ru"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/Sgw4iIN4STar-QE05xyBmgntftw/Sgw4iIN4STar-QE05xyBmgntftw.ru"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/sURVY49aNm3TBC1XVeOG1Q5_vi8/sURVY49aNm3TBC1XVeOG1Q5_vi8.ru"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/T77G-B0x1-Z9ZaPqpW_TAskNFI8/T77G-B0x1-Z9ZaPqpW_TAskNFI8.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"menu\">menu</h1>\n<p>Блок <code>menu</code> используется для создания различных типов меню и селектов.</p>\n<p>В результате BEMHTML-преобразований на странице блок становится HTML-элементом с тегом <code>&lt;div&gt;</code> и свойством <code>role=&quot;menu&quot;</code>. HTML-элементом содержит набор переключателей – пунктов меню (блок <code>menu-item</code>).</p>\n<p>Он предоставляет возможность изменять размер и внешний вид блоков меню, управлять поведением вложенных блоков – пунктов меню или селекта.</p>\n<h2 id=\"-\">Варианты использования меню</h2>\n<p>Блок <code>menu</code> служит для создания различных типов меню:</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Описание</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Меню-переключатель</td>\n        <td>Применяется для создания меню или селектов, позволяющих только одиночный выбор.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;, \n        select : &#39;radio&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Селект с множественным выбором (<code>_select_check</code>)</td>\n        <td>При щелчке мышью по пункту меню его состояние меняется на противоположное. Если пункт был активен – он деактивируется, и наоборот.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;,\n        select : &#39;check&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n<tr>\n        <td>Простой список (без модификатора <code>_select</code>)</td>\n        <td>При щелчке мышью по пункту меню его состояние не меняется. Модификатор <code>_cheked</code> не устанавливается.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;,\n        select : &#39;check&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr><br></table>\n\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { select : &#39;check&#39; },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { theme : &#39;simple&#39;, select : &#39;check&#39; },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { theme : &#39;normal&#39;, select : &#39;check&#39;, size : &#39;xl&#39; },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры меню <code>_size</code></h3>\n<p>Задает размер всем типам меню. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер/Параметры</th>\n        <th>Размер шрифта</th>\n        <th>Высота строки <code>line-heigh</code></th>\n        <th>Левый отступ <code>padding-left</code></th>\n        <th>Отступ <code>padding</code></th>\n        <th>Размер &quot;галочки&quot; для темы normal</code></th>\n    </tr>\n    <tr>\n        <td>s</td>\n        <td>13px</td>\n        <td>24px</td>\n        <td>30px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        select : &#39;check&#39;, \n        size : &#39;s&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>m</td>\n        <td>13px</td>\n        <td>24px</td>\n        <td>30px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        select : &#39;check&#39;, \n        size : &#39;m&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>l</td>\n        <td>15px</td>\n        <td>28px</td>\n        <td>34px</td>\n        <td>15px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        select : &#39;check&#39;, \n        size : &#39;l&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>xl</td>\n        <td>15px</td>\n        <td>32px</td>\n        <td>40px</td>\n        <td>15px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        select : &#39;check&#39;, \n        size : &#39;xl&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-_select-\">Способ выбора пунктов <code>_select</code></h3>\n<p>Модификатор <code>_select</code> управляет поведением пунктов меню при щелчке по ним мышью, например, возможностью множественного выбора пунктов меню.</p>\n<p>Доступны следующие значения модификатора:</p>\n<ul>\n<li><code>check</code> – селект. Пункт, по которому был произведен щелчек мышью, изменит состояние на противоположное и будет менять состояние при повторных щелчках. Доступна возможность множественного выбора пунктов;</li>\n<li><code>radio</code> – переключатель. При щелчке мышью будет производиться переключение активных пунктов меню. При повторном щелчке пункт, по которому он был произведен, останется <strong>активным</strong>. Множественный выбор недоступен;</li>\n<li><code>radio-check</code> – переключатель. При щелчке мышью будет производиться переключение активных пунктов меню. При повторном щелчке пункт, по которому он был произведен, станет <strong>неактивным</strong>. Множественный выбор недоступен.</li>\n</ul>\n<p>Реализован во всех темах блока.</p>\n<table>\n    <tr>\n        <th>Выбор пунктов</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Только один (<code>_select_radio</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        select : &#39;radio&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            mods : { checked : true },\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Множественный выбор или ни одного (<code>_select_check</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        select : &#39;check&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            mods : { checked : true },\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Один или ни одного (<code>_select_radio-check</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        select : &#39;radio-check&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            mods : { checked : true },\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        select : &#39;check&#39;, \n        size : &#39;xl&#39;,\n        focused : true \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__group\">__group</h3>\n<p>Элемент <code>__group</code> служит для группировки пунктов меню. Пункты, которые нужно сгруппировать, помещаются в поле <code>content</code> элемента. Группы визуально отделяются серой чертой.</p>\n<p>Например:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39;, select : &#39;radio&#39;, focused : true  },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;New&#39;\n        },\n        {\n            elem : &#39;group&#39;,\n            content : [\n                {\n                    block : &#39;menu-item&#39;,\n                    mods : { checked : true },\n                    val : 2,\n                    content : &#39;Open&#39;\n                },\n                {\n                    block : &#39;menu-item&#39;,\n                    val : 3,\n                    content : &#39;Open Recent&#39;\n                }\n            ]\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 4,\n            content : &#39;Open Not so Recent&#39;\n        }\n    ]\n}\n</code></pre>\n<h3 id=\"__group-title\">__group-title</h3>\n<p>Элемент позволяет задать заголовок для группы пунктов меню, создаваемой с помощью элемента <code>__group</code>.</p>\n<p>Например:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;xl&#39;, \n        select : &#39;radio&#39;, \n        focused : true  \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;New&#39;\n        },\n        {\n            elem : &#39;group&#39;,\n            title : &#39;Cool title&#39;,\n            content : [\n                {\n                    block : &#39;menu-item&#39;,\n                    mods : { checked : true },\n                    val : 2,\n                    content : &#39;Open&#39;\n                },\n                {\n                    block : &#39;menu-item&#39;,\n                    val : 3,\n                    content : &#39;Open Recent&#39;\n                }\n            ]\n        }\n    ]\n}\n</code></pre>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>menu</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>menu-item</code></li>\n<li><code>dom</code></li>\n<li><code>keyboard</code></li>\n<li><code>base-control</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n\n<h1 id=\"menu-item\">menu-item</h1>\n<p>Блок <code>menu-item</code> служит для создания пунктов меню или селекта. Используется внутри блока <code>menu</code>. Блок <code>menu-item</code> предоставляет возможность изменять состояние, содержимое и порядок отображения пунктов меню.</p>\n<p>Блок <code>menu-item</code> в результате BEMHTML-преобразований на странице становится HTML-элементом с тегом <code>&lt;div&gt;</code> со свойством <code>role=&quot;menuitem&quot;</code>.</p>\n<h2 id=\"-\">Варианты использования пунктов меню</h2>\n<p>Блок <code>menu-item</code> служит для создания различных типов пунктов меню:</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Описание</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Переключатель</td>\n        <td>Применяется для любых выпадающих списков, табов, пунктов меню и селектов и т.п. Используется по умолчанию.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    val : 1,\n    content : &#39;Selector value&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Ссылка</td>\n        <td>Элемент меню со ссылкой. Блок <code>link</code> помещается в поле <code>content</code> BEMJSON-декларации блока. Так же требуется установить блоку модификатор <code>type</code> в значение <code>link</code>.\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    mods : { type : &#39;link&#39; },\n    val : 2,\n    content : {\n        block : &#39;link&#39;,\n        url : &#39;#&#39;,\n        content : &#39;Link 1&#39;\n    }\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td><code>String|Number</code></td>\n        <td>Значение, возвращаемое пунктом меню, если он выбран.</td>\n    </tr>\n</table>\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_type-\">Типы блока <code>_type</code></h3>\n<p>Модификатор <code>_type</code> в значении <code>_link</code> позволяет создавать пункт меню-ссылку. Блок <code>link</code> при этом помещается в поле <code>content</code> BEMJSON-декларации блока. Если модификатор <code>_type_link</code> не установлен, вложенная ссылка будет доступна для действий пользователя при установленном модификаторе <code>_disabled</code>.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        type : &#39;link&#39; \n    },\n    content : {\n        block : &#39;link&#39;,\n        url : &#39;#&#39;,\n        content : &#39;Link 1&#39;\n    }\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии &quot;неактивен&quot; пункт меню отображается, но недоступен для действий пользователя.  </p>\n<p>Такой пункт меню не изменяет состояние при щелчке мышью. Если для блока установлен модификатор <code>_type_link</code>, переход по ссылке не осуществляется. </p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        disabled : true \n    },\n    content : &#39;_disabled&#39;\n}\n</code></pre>\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие &quot;наведение курсором&quot; на пункт меню.</p>\n<p>Реализован во всех темах блока.</p>\n<p>Автоматически выставляется при наведении указателем мыши на пункт меню.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        hovered : true \n    },\n    content : &#39;_hovered&#39;\n}\n</code></pre>\n<h4 id=\"-_checked-\">Выбранный пункт меню <code>_checked</code></h4>\n<p>Модификатор задает выбранный пункт меню.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    content : &#39;_checked&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        checked : true \n    }\n}\n</code></pre>\n<p>В блоке <code>menu</code> модификатор <code>_checked</code> устанавливается для пункта при щелчке мышью:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;,\n        select : &#39;check&#39;\n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>menu-item</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n</ul>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "menu-item",
                    "data": {
                        "en": {
                            "name": "menu-item",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/menu-item/00ejmLqt61w5ksAsfBl7KgE4dBE/00ejmLqt61w5ksAsfBl7KgE4dBE.en"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/47lHiiyDspaBs5AiC22G42Y-N_o/47lHiiyDspaBs5AiC22G42Y-N_o.en"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/Sgw4iIN4STar-QE05xyBmgntftw/Sgw4iIN4STar-QE05xyBmgntftw.en"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/sURVY49aNm3TBC1XVeOG1Q5_vi8/sURVY49aNm3TBC1XVeOG1Q5_vi8.en"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/T77G-B0x1-Z9ZaPqpW_TAskNFI8/T77G-B0x1-Z9ZaPqpW_TAskNFI8.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": ""
                                }
                            ]
                        },
                        "ru": {
                            "name": "menu-item",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/menu-item/00ejmLqt61w5ksAsfBl7KgE4dBE/00ejmLqt61w5ksAsfBl7KgE4dBE.ru"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/47lHiiyDspaBs5AiC22G42Y-N_o/47lHiiyDspaBs5AiC22G42Y-N_o.ru"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/Sgw4iIN4STar-QE05xyBmgntftw/Sgw4iIN4STar-QE05xyBmgntftw.ru"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/sURVY49aNm3TBC1XVeOG1Q5_vi8/sURVY49aNm3TBC1XVeOG1Q5_vi8.ru"
                                        },
                                        {
                                            "url": "desktop.examples/menu-item/T77G-B0x1-Z9ZaPqpW_TAskNFI8/T77G-B0x1-Z9ZaPqpW_TAskNFI8.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"menu-item\">menu-item</h1>\n<p>Блок <code>menu-item</code> служит для создания пунктов меню или селекта. Используется внутри блока <code>menu</code>. Блок <code>menu-item</code> предоставляет возможность изменять состояние, содержимое и порядок отображения пунктов меню.</p>\n<p>Блок <code>menu-item</code> в результате BEMHTML-преобразований на странице становится HTML-элементом с тегом <code>&lt;div&gt;</code> со свойством <code>role=&quot;menuitem&quot;</code>.</p>\n<h2 id=\"-\">Варианты использования пунктов меню</h2>\n<p>Блок <code>menu-item</code> служит для создания различных типов пунктов меню:</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Описание</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Переключатель</td>\n        <td>Применяется для любых выпадающих списков, табов, пунктов меню и селектов и т.п. Используется по умолчанию.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    val : 1,\n    content : &#39;Selector value&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Ссылка</td>\n        <td>Элемент меню со ссылкой. Блок <code>link</code> помещается в поле <code>content</code> BEMJSON-декларации блока. Так же требуется установить блоку модификатор <code>type</code> в значение <code>link</code>.\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    mods : { type : &#39;link&#39; },\n    val : 2,\n    content : {\n        block : &#39;link&#39;,\n        url : &#39;#&#39;,\n        content : &#39;Link 1&#39;\n    }\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td><code>String|Number</code></td>\n        <td>Значение, возвращаемое пунктом меню, если он выбран.</td>\n    </tr>\n</table>\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_type-\">Типы блока <code>_type</code></h3>\n<p>Модификатор <code>_type</code> в значении <code>_link</code> позволяет создавать пункт меню-ссылку. Блок <code>link</code> при этом помещается в поле <code>content</code> BEMJSON-декларации блока. Если модификатор <code>_type_link</code> не установлен, вложенная ссылка будет доступна для действий пользователя при установленном модификаторе <code>_disabled</code>.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        type : &#39;link&#39; \n    },\n    content : {\n        block : &#39;link&#39;,\n        url : &#39;#&#39;,\n        content : &#39;Link 1&#39;\n    }\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии &quot;неактивен&quot; пункт меню отображается, но недоступен для действий пользователя.  </p>\n<p>Такой пункт меню не изменяет состояние при щелчке мышью. Если для блока установлен модификатор <code>_type_link</code>, переход по ссылке не осуществляется. </p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        disabled : true \n    },\n    content : &#39;_disabled&#39;\n}\n</code></pre>\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие &quot;наведение курсором&quot; на пункт меню.</p>\n<p>Реализован во всех темах блока.</p>\n<p>Автоматически выставляется при наведении указателем мыши на пункт меню.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        hovered : true \n    },\n    content : &#39;_hovered&#39;\n}\n</code></pre>\n<h4 id=\"-_checked-\">Выбранный пункт меню <code>_checked</code></h4>\n<p>Модификатор задает выбранный пункт меню.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    content : &#39;_checked&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        checked : true \n    }\n}\n</code></pre>\n<p>В блоке <code>menu</code> модификатор <code>_checked</code> устанавливается для пункта при щелчке мышью:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;,\n        select : &#39;check&#39;\n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>menu-item</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n</ul>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "popup",
                    "data": {
                        "en": {
                            "name": "popup",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/popup/7PzT7oA6awlAKgFGXccAdhfz0n0/7PzT7oA6awlAKgFGXccAdhfz0n0.en"
                                        },
                                        {
                                            "url": "desktop.examples/popup/L1MMDUGHLM4djlDaj5mhiKHvDH8/L1MMDUGHLM4djlDaj5mhiKHvDH8.en"
                                        },
                                        {
                                            "url": "desktop.examples/popup/M1T2dIuSVeBoluZEMgCmA90Stgc/M1T2dIuSVeBoluZEMgCmA90Stgc.en"
                                        },
                                        {
                                            "url": "desktop.examples/popup/m6WdfiXJP4RkxnBzEuzumr9C4w0/m6WdfiXJP4RkxnBzEuzumr9C4w0.en"
                                        },
                                        {
                                            "url": "desktop.examples/popup/ROJZHxrl71CFbWiWU5Ry_Q0Jbhw/ROJZHxrl71CFbWiWU5Ry_Q0Jbhw.en"
                                        },
                                        {
                                            "url": "desktop.examples/popup/Uhdsvnf2MsxKNrQy7w6uLKTxdek/Uhdsvnf2MsxKNrQy7w6uLKTxdek.en"
                                        },
                                        {
                                            "url": "desktop.examples/popup/VE0JWgs-I2gVU8suKC3_eTK29EE/VE0JWgs-I2gVU8suKC3_eTK29EE.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": ""
                                }
                            ]
                        },
                        "ru": {
                            "name": "popup",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/popup/7PzT7oA6awlAKgFGXccAdhfz0n0/7PzT7oA6awlAKgFGXccAdhfz0n0.ru"
                                        },
                                        {
                                            "url": "desktop.examples/popup/L1MMDUGHLM4djlDaj5mhiKHvDH8/L1MMDUGHLM4djlDaj5mhiKHvDH8.ru"
                                        },
                                        {
                                            "url": "desktop.examples/popup/M1T2dIuSVeBoluZEMgCmA90Stgc/M1T2dIuSVeBoluZEMgCmA90Stgc.ru"
                                        },
                                        {
                                            "url": "desktop.examples/popup/m6WdfiXJP4RkxnBzEuzumr9C4w0/m6WdfiXJP4RkxnBzEuzumr9C4w0.ru"
                                        },
                                        {
                                            "url": "desktop.examples/popup/ROJZHxrl71CFbWiWU5Ry_Q0Jbhw/ROJZHxrl71CFbWiWU5Ry_Q0Jbhw.ru"
                                        },
                                        {
                                            "url": "desktop.examples/popup/Uhdsvnf2MsxKNrQy7w6uLKTxdek/Uhdsvnf2MsxKNrQy7w6uLKTxdek.ru"
                                        },
                                        {
                                            "url": "desktop.examples/popup/VE0JWgs-I2gVU8suKC3_eTK29EE/VE0JWgs-I2gVU8suKC3_eTK29EE.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"popup\">popup</h1>\n<p>Блок <code>popup</code> используется для создания выпадающих элементов и позволяет изменять их состояние, поведение и внешний вид. Блок отображается поверх остальных элементов страницы.</p>\n<p>Попап может быть вызван различными элементами страницы, например, кнопками или псевдоссылками.</p>\n<p>В момент первого показа (установка модификатора <code>_visible</code>) DOM-элемент блока создается в конце <code>&lt;body&gt;</code>.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    content : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;simple&#39; },\n    content : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39; },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_visible-\">Видимый <code>_visible</code></h3>\n<p>Модификатор, отвечающий за видимость блока. При значении модификатора <code>false</code> блок не отображается.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39;, visible : true },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_direction-\">Расположение относительно родителя <code>_direction</code></h3>\n<p>Модификатор управляет положением попапа на странице, относительно вызвавшего его блока. Расположение блока определяется автоматически, исходя из массива допустимых расположений и положения родителя на странице.</p>\n<p>Выбранное расположение влияет на направление анимации раскрытия.</p>\n<p>По умолчанию используется следующий массив допустимых расположений:</p>\n<table>\n    <tr>\n        <th> Направление раскрытия </td>\n        <th> Индекс в массиве </td>\n    </tr>\n        <td> bottom-left </td>\n        <td> 0 </td>\n    </tr>\n    <tr>\n        <td> bottom-center </td>\n       <td> 1 </td>\n   </tr>\n    <tr>\n        <td> bottom-right</td>\n        <td> 2 </td>\n    </tr>\n    <tr>\n        <td> top-left </td>\n        <td> 3 </td>\n    </tr>\n    <tr>\n        <td> top-center </td>\n        <td> 4 </td>\n    </tr>\n    <tr>\n        <td> top-right </td>\n        <td> 5 </td>\n    </tr>\n    <tr>\n        <td> right-top </td>\n        <td> 6 </td>\n    </tr>\n    <tr>\n        <td> right-center </td>\n        <td> 7 </td>\n    </tr>\n    <tr>\n        <td> right-bottom </td>\n        <td> 8 </td>\n    </tr>\n    <tr>\n        <td> left-top </td>\n        <td> 9 </td>\n    </tr>\n    <tr>\n        <td> left-center </td>\n        <td> 10 </td>\n    </tr>\n    <tr>\n        <td> left-bottom </td>\n        <td> 11 </td>\n    </tr>\n</table>\n\n<p>Чтобы управлять расположением попапа, можно ограничить массив расположений, оставив только требуемые. Пользовательский массив нужно передать в качестве JS-параметра с ключом <code>directions</code>. При этом, из значений массива будет выбрано наиболее подходящее, исходя из положения родителя на странице.</p>\n<p>Например, если требуется, чтобы попап раскрывался над родителем:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { autoclosable : true, theme: &#39;simple&#39; },\n    js : { directions : [&#39;top-left&#39;, &#39;top-center&#39;, &#39;top-right&#39;] },\n    content : &#39;Hello, world!&#39;\n}\n</code></pre>\n<p>Или разместить попап справа по центру:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { autoclosable : true, theme: &#39;simple&#39; },\n    js : { directions : [&#39;right-center&#39;] },\n    content : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-_autoclosable-\">Автоматическое скрытие <code>_autoclosable</code></h3>\n<p>Модификатор отвечает за автоматическое скрытие попапа при клике вне блока. При установке модификатора <code>_autoclosable</code> в значении <code>_true</code> блок будет скрываться при щелчке за его пределами (будет снят модификатор <code>_visible</code>).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39;, autoclosable : true },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h2 id=\"-popup-\">Взаимосвязи между popup&#39;ами</h2>\n<p>Так как попап выносит себя в конец <code>&lt;body&gt;</code>, чтобы перекрывать другие элементы страницы, возникает необходимость в построении взаимосвязей. Блок умеет выстраивать связи Parent → [ Child, Child, ... ]. Для этого он выполняет проверку, вложен ли блок, вызывающий попап в другой <code>popup</code>. Потомки знают о наличии родителя.\nЕсли бы этих взаимосвязей не было, то родительский попап (при наличии модификатора <code>autoclosable</code> со значением <code>true</code>) закрылся бы при клике внутри дочернего.</p>\n<p>Другими словами, модификатор <code>autoclosable</code> со значением <code>true</code> означает, что попап закроется сам и закроет свои дочерние блоки при клике за пределами его самого и дочерних попапов.</p>\n<p>Дочерние блоки popup можно рассматривать в виде цепочки 1 → 2 → 3 → 4. При клике на 2-ом попапе – закрываются 3, 4. При клике в 1 – закрываются 2, 3, 4. При клике за пределами любого попапа из цепочки – закроются все.</p>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>popup</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n<li><code>objects</code></li>\n<li><code>functions__throttle</code></li>\n<li><code>keyboard</code></li>\n<li><code>ua</code></li>\n<li><code>jquery__event_pointer</code></li>\n</ul>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "radio",
                    "jsdoc": "",
                    "data": {
                        "en": {
                            "name": "radio",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/radio/L98T9NertqtVCJpvDLdlKg6huWI/L98T9NertqtVCJpvDLdlKg6huWI.en"
                                        },
                                        {
                                            "url": "desktop.examples/radio/pPPjX0UcGCQBYmUNCpE27JADBCU/pPPjX0UcGCQBYmUNCpE27JADBCU.en"
                                        },
                                        {
                                            "url": "desktop.examples/radio/RBPWsSDN_yrB6HXtmtrnXB3WSMY/RBPWsSDN_yrB6HXtmtrnXB3WSMY.en"
                                        },
                                        {
                                            "url": "desktop.examples/radio/TLM9QTv-Pjlfq-MNpduxyTgw0cg/TLM9QTv-Pjlfq-MNpduxyTgw0cg.en"
                                        },
                                        {
                                            "url": "desktop.examples/radio/wEYcA7ioT134yNzBSljZyhtiyg8/wEYcA7ioT134yNzBSljZyhtiyg8.en"
                                        },
                                        {
                                            "url": "desktop.examples/radio/xr-zTTUYS3DD_e4xJV6Yn3a3BPI/xr-zTTUYS3DD_e4xJV6Yn3a3BPI.en"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/3eOE97EmaqvVB-6XycKG7cpGY5Y/3eOE97EmaqvVB-6XycKG7cpGY5Y.en"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/3iTePRGPbj1_dKvtQGd2bMai-Ac/3iTePRGPbj1_dKvtQGd2bMai-Ac.en"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/7DyHwAbpYHpT5TcturqqL57OMbA/7DyHwAbpYHpT5TcturqqL57OMbA.en"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/8YPfPGsfRbco7RPs63oF47Bj5d8/8YPfPGsfRbco7RPs63oF47Bj5d8.en"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/z74-X9bjA8-9fMUlFI8AH9R8Dfo/z74-X9bjA8-9fMUlFI8AH9R8Dfo.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "radio",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/radio/L98T9NertqtVCJpvDLdlKg6huWI/L98T9NertqtVCJpvDLdlKg6huWI.ru"
                                        },
                                        {
                                            "url": "desktop.examples/radio/pPPjX0UcGCQBYmUNCpE27JADBCU/pPPjX0UcGCQBYmUNCpE27JADBCU.ru"
                                        },
                                        {
                                            "url": "desktop.examples/radio/RBPWsSDN_yrB6HXtmtrnXB3WSMY/RBPWsSDN_yrB6HXtmtrnXB3WSMY.ru"
                                        },
                                        {
                                            "url": "desktop.examples/radio/TLM9QTv-Pjlfq-MNpduxyTgw0cg/TLM9QTv-Pjlfq-MNpduxyTgw0cg.ru"
                                        },
                                        {
                                            "url": "desktop.examples/radio/wEYcA7ioT134yNzBSljZyhtiyg8/wEYcA7ioT134yNzBSljZyhtiyg8.ru"
                                        },
                                        {
                                            "url": "desktop.examples/radio/xr-zTTUYS3DD_e4xJV6Yn3a3BPI/xr-zTTUYS3DD_e4xJV6Yn3a3BPI.ru"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/3eOE97EmaqvVB-6XycKG7cpGY5Y/3eOE97EmaqvVB-6XycKG7cpGY5Y.ru"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/3iTePRGPbj1_dKvtQGd2bMai-Ac/3iTePRGPbj1_dKvtQGd2bMai-Ac.ru"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/7DyHwAbpYHpT5TcturqqL57OMbA/7DyHwAbpYHpT5TcturqqL57OMbA.ru"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/8YPfPGsfRbco7RPs63oF47Bj5d8/8YPfPGsfRbco7RPs63oF47Bj5d8.ru"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/z74-X9bjA8-9fMUlFI8AH9R8Dfo/z74-X9bjA8-9fMUlFI8AH9R8Dfo.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"radio\">radio</h1>\n<p>Блок <code>radio</code> – «радиопереключатель», «радиокнопка». Используется для создания одиночных радиобоксов.</p>\n<p>В реализации блока используется функциональность нативного контрола <code>input</code> с атрибутом <code>type=&quot;radio&quot;</code> – <code>&lt;input name=&quot;name&quot; type=&quot;radio&quot;&gt;</code>, который скрывается при использовании модификатора <code>_theme</code>.</p>\n<p>Блок <code>radio</code> в результате BEMHTML-преобразований на странице отображается как HTML-тег <code>&lt;label&gt;</code> – контейнер, содержащий:</p>\n<ul>\n<li>элемент <code>radio__box</code>, содержащий скрытый контрол <code>input</code> (элемент <code>__control</code>);</li>\n<li>подпись к радиокнопке, если задан BEMJSON-параметр <code>text</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON-блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td><code>name</code></td>\n        <td><code>String|Number</code></td>\n        <td>Имя радиокнопки. Преобразуется в HTML-атрибут <code>name</code> вложенного блока <code>input</code>.</td>\n    </tr>\n    <tr>\n        <td><code>text</code></td>\n        <td><code>String|Number</code></td>\n        <td>Подпись, отображаемая для радиокнопки.</td>\n    </tr>\n    <tr>\n        <td><code>val</code></td>\n        <td><code>String|Number</code></td>\n        <td>Значение, возвращаемое контролом радиопереключателя <code>radio__control</code>, если выбрана текущая радиокнопка. Преобразуется в HTML-атрибут <code>value</code> вложенного блока <code>input</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    name : &#39;radio-simple&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;simple&#39; },\n    name : &#39;radio-simple&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры радиопереключателя <code>_size</code></h3>\n<p>Задает размер всем типам радиопереключателей. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>В зависимости от значения модификатора <code>_type</code>, доступны следующие размеры реализации блока:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Обычный радиопереключатель</th>\n        <th>Кнопочный радиопереключатель (<code>_type_button</code>)</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>–</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>–</td>\n        <td>+</td>\n</table>\n\n\n<h3 id=\"-_type-\">Тип радиопереключателя <code>_type</code></h3>\n<p>Модификатор <code>_type</code> со значением <code>_button</code> используется для создания кнопочного радиопереключателя – кнопки (блок <code>button</code>) с установленным модификатором <code>_togglable_radio</code>.</p>\n<p>При этом к блоку <code>button</code> примешивается блок <code>radio</code>, а контентом кнопки становится <code>radio__control</code>.</p>\n<p>Кроме того, при установленном модификаторе <code>_type_button</code> для блока задается HTML-атрибут <code>role=&quot;button&quot;</code>.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Кнопочный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        type : &#39;button&#39;\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-_disabled-\">Неактивен <code>_disabled</code></h3>\n<p>В состоянии «неактивен» радиопереключатель отображается, но недоступен для действий пользователя.</p>\n<p>Такой радиопереключатель не будет получать фокус (модификатор <code>_focused</code>).</p>\n<p>При установке модификатора <code>_disabled</code> для радиопереключателя не будут:</p>\n<ul>\n<li>устанавливаться модификаторы состояния <code>_hovered</code>, <code>_pressed</code> и <code>_focused</code>;</li>\n<li>изменяться значение модификатора <code>_checked</code>.</li>\n</ul>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, disabled : true },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        focused : true\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h4 id=\"-_checked-\">Выбран <code>_checked</code></h4>\n<p>Модификатор <code>_checked</code> указывает на то, что радиопереключатель выбран (отмечен).</p>\n<p>Модификатор устанавливается по:</p>\n<ul>\n<li>щелчку мыши по блоку (при повторных щелчках модификатор сохраняется);</li>\n<li>нажатию клавиш <code>Enter</code> или <code>Space</code> (возможность использования клавиши <code>Enter</code> зависит от браузера), если радиопереключатель находится в фокусе (модификатор <code>_focused</code>);</li>\n<li>нажатию клавиш стрелок, если фокус установлен на соседний радиопереключатель в радиогруппе или в блоке, содержащем несколько блоков <code>radio</code>.</li>\n</ul>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, checked : true },\n    name : &#39;radio-norma&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h4 id=\"-_type_button-\">Состояния, доступные с модификатором <code>_type_button</code></h4>\n<p>При установленном модификаторе <code>_type_button</code> к блоку <code>button</code> примешивается блок <code>radio</code>. Как следствие, для блока с модификатором <code>_type_button</code> доступны состояния блока <code>button</code>:</p>\n<ul>\n<li><code>_hovered</code> – под курсором;</li>\n<li><code>_pressed</code> – кнопка нажата.</li>\n</ul>\n<h2 id=\"-\">Элементы</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>__box</code> используется в стандартной реализации блока как контейнер, содержащий контрол радиокнопки (элемент <code>__control</code>). В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;span&gt;</code>.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>Элемент <code>__control</code> – контрол радиокнопки. В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;input&gt;</code> с атрибутом <code>type=&quot;radio&quot;</code>. По умолчанию элемент скрыт. В блоке используется только его функциональность.</p>\n<h2 id=\"-\">Зависимости</h2>\n<p>Блок <code>radio</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>jquery__event</code></li>\n<li><code>__box</code></li>\n<li><code>__control</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "radio-group",
                    "jsdoc": "",
                    "data": {
                        "en": {
                            "name": "radio-group",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/radio-group/3eOE97EmaqvVB-6XycKG7cpGY5Y/3eOE97EmaqvVB-6XycKG7cpGY5Y.en"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/3iTePRGPbj1_dKvtQGd2bMai-Ac/3iTePRGPbj1_dKvtQGd2bMai-Ac.en"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/7DyHwAbpYHpT5TcturqqL57OMbA/7DyHwAbpYHpT5TcturqqL57OMbA.en"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/8YPfPGsfRbco7RPs63oF47Bj5d8/8YPfPGsfRbco7RPs63oF47Bj5d8.en"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/z74-X9bjA8-9fMUlFI8AH9R8Dfo/z74-X9bjA8-9fMUlFI8AH9R8Dfo.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "radio-group",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/radio-group/3eOE97EmaqvVB-6XycKG7cpGY5Y/3eOE97EmaqvVB-6XycKG7cpGY5Y.ru"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/3iTePRGPbj1_dKvtQGd2bMai-Ac/3iTePRGPbj1_dKvtQGd2bMai-Ac.ru"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/7DyHwAbpYHpT5TcturqqL57OMbA/7DyHwAbpYHpT5TcturqqL57OMbA.ru"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/8YPfPGsfRbco7RPs63oF47Bj5d8/8YPfPGsfRbco7RPs63oF47Bj5d8.ru"
                                        },
                                        {
                                            "url": "desktop.examples/radio-group/z74-X9bjA8-9fMUlFI8AH9R8Dfo/z74-X9bjA8-9fMUlFI8AH9R8Dfo.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"radio-group\">radio-group</h1>\n<p>Блок <code>radio-group</code> – «радиогруппа», состоящая из набора зависимых переключателей «радиокнопок» (блоков <code>radio</code>). Радиогруппа используется для выбора единственного варианта из списка. </p>\n<p>Блок <code>radio-group</code> в результате BEMHTML-преобразований на странице становится HTML-элементом с тегом <code>&lt;span&gt;</code> – контейнером, содержащим группу переключателей (радиокнопок).</p>\n<h2 id=\"-\">Допустимые параметры блока</h2>\n<p>Допустимые параметры блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td><code>String</code></td>\n        <td>Имя радиогруппы. Преобразуется в HTML-атрибут <code>name</code> вложенного блока <code>input</code>.</td>\n    </tr>\n    <tr>\n        <td>options</td>\n        <td><code>Array</code></td>\n        <td>Массив хешей. Каждый хеш соответствует одному переключателю и содержит набор его параметров. </td>\n    </tr><br></table>\n\n<p>Среди параметров, передаваемых в атрибуте <code>option</code> для переключателя, обязательными являются:</p>\n<ul>\n<li><code>val</code> (<code>String</code> | <code>Number</code>) – значение, возвращаемое выбранным переключателем (элементом <code>radio__control</code>);</li>\n<li><code>text</code> (<code>String</code>) – подпись, отображаемая для текущего переключателя. </li>\n</ul>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<ul>\n<li>simple   </li>\n<li>normal  </li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером. </p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio-group&#39;,\n    name : &#39;radio-default&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio-group&#39;,\n    mods : { theme : &#39;simple&#39; },\n    name : &#39;radio-simple&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio-group&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры переключателей группы <code>_size</code></h3>\n<p>Задает размер переключателей для всех типов радиогрупп. Обязательный модификатор. </p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>В зависимости от значения модификатора <code>_type</code>, доступны следующие размеры реализации блока:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Обычная радиогруппа</th>\n        <th>Кнопочная радиогруппа (<code>_type_button</code>)</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>–</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>–</td>\n        <td>+</td>\n</table>\n\n\n<p>Размеры, на примере темы <em>normal</em> с модификатором <code>_type_button</code>:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;s&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;radio-S&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;radio-M&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;radio-L&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;xl&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;radio-XL&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Тип радиогруппы <code>_type</code></h3>\n<p>Модификатор <code>_type</code> может иметь следующие значения:</p>\n<ul>\n<li><code>button</code>. Используется для создания кнопочной радиогруппы – блока кнопок-переключателей;</li>\n<li><code>line</code>. Используется для создания радиогруппы с выравниванием в строку. После каждого переключателя группы, кроме последнего, автоматически добавляется отступ справа. Размер отступа зависит от значения модификатора <code>_size</code>. Реализован только в теме <em>normal</em>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычная радиогруппа</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Кнопочная радиогруппа</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;radio-button&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Строчная радиогруппа (<code>_type_line</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;line&#39; \n    },\n    name : &#39;radio-line&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr><br></table>\n\n\n<h3 id=\"-_disabled-\">Неактивна <code>_disabled</code></h3>\n<p>В состоянии &quot;неактивна&quot; радиогруппа отображается, но недоступна для действий пользователя.  </p>\n<p>Такая радиогруппа не будет получать фокус (модификатор <code>_focused</code>).</p>\n<p>При установке модификатора <code>_disabled</code> для радиогруппы, всем ее переключателям также устанавливается модификатор <code>_disabled</code>. Как следствие, для них не будут:</p>\n<ul>\n<li>устанавливаться модификаторы состояния <code>_hovered</code>, <code>_pressed</code> и <code>_focused</code>;</li>\n<li>изменяться значения модификатора <code>_checked</code>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39;,\n        disabled : true \n    },\n    name : &#39;radio-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда один из его элементов находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39;,\n        focused : true \n    },\n    name : &#39;radio-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h2 id=\"-\">Зависимости блока</h2>\n<p>Блок <code>radio-group</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>radio</code></li>\n<li><code>jquery</code></li>\n<li><code>_type_button</code> (у которого в зависимостях есть блок <code>button</code>)</li>\n</ul>\n\n<h1 id=\"radio\">radio</h1>\n<p>Блок <code>radio</code> – «радиопереключатель», «радиокнопка». Используется для создания одиночных радиобоксов.</p>\n<p>В реализации блока используется функциональность нативного контрола <code>input</code> с атрибутом <code>type=&quot;radio&quot;</code> – <code>&lt;input name=&quot;name&quot; type=&quot;radio&quot;&gt;</code>, который скрывается при использовании модификатора <code>_theme</code>.</p>\n<p>Блок <code>radio</code> в результате BEMHTML-преобразований на странице отображается как HTML-тег <code>&lt;label&gt;</code> – контейнер, содержащий:</p>\n<ul>\n<li>элемент <code>radio__box</code>, содержащий скрытый контрол <code>input</code> (элемент <code>__control</code>);</li>\n<li>подпись к радиокнопке, если задан BEMJSON-параметр <code>text</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON-блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td><code>name</code></td>\n        <td><code>String|Number</code></td>\n        <td>Имя радиокнопки. Преобразуется в HTML-атрибут <code>name</code> вложенного блока <code>input</code>.</td>\n    </tr>\n    <tr>\n        <td><code>text</code></td>\n        <td><code>String|Number</code></td>\n        <td>Подпись, отображаемая для радиокнопки.</td>\n    </tr>\n    <tr>\n        <td><code>val</code></td>\n        <td><code>String|Number</code></td>\n        <td>Значение, возвращаемое контролом радиопереключателя <code>radio__control</code>, если выбрана текущая радиокнопка. Преобразуется в HTML-атрибут <code>value</code> вложенного блока <code>input</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    name : &#39;radio-simple&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;simple&#39; },\n    name : &#39;radio-simple&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры радиопереключателя <code>_size</code></h3>\n<p>Задает размер всем типам радиопереключателей. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>В зависимости от значения модификатора <code>_type</code>, доступны следующие размеры реализации блока:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Обычный радиопереключатель</th>\n        <th>Кнопочный радиопереключатель (<code>_type_button</code>)</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>–</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>–</td>\n        <td>+</td>\n</table>\n\n\n<h3 id=\"-_type-\">Тип радиопереключателя <code>_type</code></h3>\n<p>Модификатор <code>_type</code> со значением <code>_button</code> используется для создания кнопочного радиопереключателя – кнопки (блок <code>button</code>) с установленным модификатором <code>_togglable_radio</code>.</p>\n<p>При этом к блоку <code>button</code> примешивается блок <code>radio</code>, а контентом кнопки становится <code>radio__control</code>.</p>\n<p>Кроме того, при установленном модификаторе <code>_type_button</code> для блока задается HTML-атрибут <code>role=&quot;button&quot;</code>.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Кнопочный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        type : &#39;button&#39;\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-_disabled-\">Неактивен <code>_disabled</code></h3>\n<p>В состоянии «неактивен» радиопереключатель отображается, но недоступен для действий пользователя.</p>\n<p>Такой радиопереключатель не будет получать фокус (модификатор <code>_focused</code>).</p>\n<p>При установке модификатора <code>_disabled</code> для радиопереключателя не будут:</p>\n<ul>\n<li>устанавливаться модификаторы состояния <code>_hovered</code>, <code>_pressed</code> и <code>_focused</code>;</li>\n<li>изменяться значение модификатора <code>_checked</code>.</li>\n</ul>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, disabled : true },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        focused : true\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h4 id=\"-_checked-\">Выбран <code>_checked</code></h4>\n<p>Модификатор <code>_checked</code> указывает на то, что радиопереключатель выбран (отмечен).</p>\n<p>Модификатор устанавливается по:</p>\n<ul>\n<li>щелчку мыши по блоку (при повторных щелчках модификатор сохраняется);</li>\n<li>нажатию клавиш <code>Enter</code> или <code>Space</code> (возможность использования клавиши <code>Enter</code> зависит от браузера), если радиопереключатель находится в фокусе (модификатор <code>_focused</code>);</li>\n<li>нажатию клавиш стрелок, если фокус установлен на соседний радиопереключатель в радиогруппе или в блоке, содержащем несколько блоков <code>radio</code>.</li>\n</ul>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, checked : true },\n    name : &#39;radio-norma&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h4 id=\"-_type_button-\">Состояния, доступные с модификатором <code>_type_button</code></h4>\n<p>При установленном модификаторе <code>_type_button</code> к блоку <code>button</code> примешивается блок <code>radio</code>. Как следствие, для блока с модификатором <code>_type_button</code> доступны состояния блока <code>button</code>:</p>\n<ul>\n<li><code>_hovered</code> – под курсором;</li>\n<li><code>_pressed</code> – кнопка нажата.</li>\n</ul>\n<h2 id=\"-\">Элементы</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>__box</code> используется в стандартной реализации блока как контейнер, содержащий контрол радиокнопки (элемент <code>__control</code>). В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;span&gt;</code>.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>Элемент <code>__control</code> – контрол радиокнопки. В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;input&gt;</code> с атрибутом <code>type=&quot;radio&quot;</code>. По умолчанию элемент скрыт. В блоке используется только его функциональность.</p>\n<h2 id=\"-\">Зависимости</h2>\n<p>Блок <code>radio</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>jquery__event</code></li>\n<li><code>__box</code></li>\n<li><code>__control</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "spin",
                    "data": {
                        "en": {
                            "name": "spin",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/spin/8nRZMnjcoWEtDxk8S584ZVjCjgM/8nRZMnjcoWEtDxk8S584ZVjCjgM.en"
                                        },
                                        {
                                            "url": "desktop.examples/spin/dw4UDnC7PHm5UQ_f-yKnadONEQ4/dw4UDnC7PHm5UQ_f-yKnadONEQ4.en"
                                        },
                                        {
                                            "url": "desktop.examples/spin/Hop39OtrdSzbBwyoib_9qGgQsGU/Hop39OtrdSzbBwyoib_9qGgQsGU.en"
                                        },
                                        {
                                            "url": "desktop.examples/spin/KkI2ijFRQcf0SzAPY0f_rby66Kw/KkI2ijFRQcf0SzAPY0f_rby66Kw.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"spin\">spin</h1>\n<p>This block indicates the progress of some process (e.g. site page or some media file loading).</p>\n<p>Rotation of the <strong>spin</strong> block is implemented by CSS3 animation.</p>\n<h2 id=\"block-modifiers\">Block Modifiers</h2>\n<p>The <strong>spin</strong> block requires the block modifiers listed below:</p>\n<h3 id=\"themes-of-a-block-_theme-\">Themes of a block <code>_theme</code></h3>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;s&#39;, progress : true }\n    }\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n    }\n</code></pre>\n<h3 id=\"sizes-_size-\">Sizes <code>_size</code></h3>\n<p>There are five sizes available: <strong>xs</strong>, <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n  <tr>\n    <th>Theme/Size</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <th>xs</th>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;simple&#39;, size : &#39;xs&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;xs&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th>s</th>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;simple&#39;, size : &#39;s&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th>m</th>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;simple&#39;, size : &#39;m&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th>l</th>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;simple&#39;, size : &#39;l&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th>xl</th>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;simple&#39;, size : &#39;xl&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;xl&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"spin-progress-_progress-\">Spin progress <code>_progress</code></h3>\n<p>The <code>{ progress : true }</code> modifier activates the spin. The <strong>spin</strong> block rotates in visible state.</p>\n<p>The <code>{ progress : false }</code> modifies paused rotation process. The <code>false</code> value is used when a <strong>spin</strong> block is invisible.</p>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "spin",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "desktop.examples/spin/8nRZMnjcoWEtDxk8S584ZVjCjgM/8nRZMnjcoWEtDxk8S584ZVjCjgM.ru"
                                        },
                                        {
                                            "url": "desktop.examples/spin/dw4UDnC7PHm5UQ_f-yKnadONEQ4/dw4UDnC7PHm5UQ_f-yKnadONEQ4.ru"
                                        },
                                        {
                                            "url": "desktop.examples/spin/Hop39OtrdSzbBwyoib_9qGgQsGU/Hop39OtrdSzbBwyoib_9qGgQsGU.ru"
                                        },
                                        {
                                            "url": "desktop.examples/spin/KkI2ijFRQcf0SzAPY0f_rby66Kw/KkI2ijFRQcf0SzAPY0f_rby66Kw.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"spin\">spin</h1>\n<p>Блок <code>spin</code> визуально иллюстрирует ход выполнения какого-либо процесса. Например, загрузки сайта или медиа-файла.</p>\n<p>Вращается прелоадер при помощи только CSS3-анимации.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы оформления <code>_theme</code></h3>\n<p>Обязательный модификатор, так как блок не имеет нативного состояния контрола.</p>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;simple&#39;, progress : true }\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры <code>_size</code></h3>\n<p>Задает размер блоку <code>spin</code>. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно пять размеров реализации блока: <strong>xs</strong>, <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>блока</th>\n        <th>Размер, px</th>\n        <th>Реализация</th>\n    </tr>\n    <tr>\n        <th>XS</th>\n        <td>16px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xs&#39;, progress : true }\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, progress : true }\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, progress : true }\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39;, progress : true }\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_progress-\">Вращение прелоадера <code>_progress</code></h3>\n<p>Модификатор <code>_progress</code> в значении <code>_true</code> задает вращение прелоадера и показывает его на странице. Когда прелоадер виден, он крутится.</p>\n<p>Модификатор <code>_progress</code> в значении <code>_false</code> останавливает прелоадер и скрывает его со страницы.</p>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                }
            ]
        },
        {
            "name": "touch-pad.docs",
            "blocks": [
                {
                    "name": "attach",
                    "jsdoc": "",
                    "data": {
                        "en": {
                            "name": "attach",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/attach/2LkwTGo-4d7fxgnG4skRO2tHoic/2LkwTGo-4d7fxgnG4skRO2tHoic.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/5xB7ZOo0QLcc5PePNxJjLhIa9oY/5xB7ZOo0QLcc5PePNxJjLhIa9oY.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/8cgGhCbp_iZMx8M367v3_N8eRcg/8cgGhCbp_iZMx8M367v3_N8eRcg.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/9cWvWwDSqNsB1vRw6nid96kdkoo/9cWvWwDSqNsB1vRw6nid96kdkoo.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/c3tTTsQQpS_wyaTRUODJQMWC3x8/c3tTTsQQpS_wyaTRUODJQMWC3x8.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/dMMLn3JVWVrtmilJB6c2-UUGyZc/dMMLn3JVWVrtmilJB6c2-UUGyZc.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/LYQ2mpdVgO15THXOFHSn3LtLeWc/LYQ2mpdVgO15THXOFHSn3LtLeWc.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/nwytMff5nyXPoczzUvwVbgD7YQQ/nwytMff5nyXPoczzUvwVbgD7YQQ.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/TlYDF2oQVo93Y7ocT-4hcsjHHB8/TlYDF2oQVo93Y7ocT-4hcsjHHB8.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"attach\">attach</h1>\n<p>The <strong>attach</strong> block is used to send a file to a server.</p>\n<p>The block is visually represented by:</p>\n<ul>\n<li>button (<code>__button</code> based on the <a href=\"../button/\">button</a> block) that opens a system window for a file download</li>\n<li>deletion cross element (<code>__clear</code>)</li>\n</ul>\n<p>Block functionality does not support:</p>\n<ul>\n<li>more than one file attaching</li>\n<li>drag-and-drop</li>\n</ul>\n<p>Block <strong>attach</strong> provides native control functionality. The control is hidden. In MSIE8 block <strong>attach</strong> is rendered as native control <code>&lt;input type=&quot;file&quot;&gt;</code>.</p>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"themes-of-a-block\">Themes of a block</h3>\n<p><code>_theme</code></p>\n<p>The block supports only the <em>simple</em> theme.</p>\n<p>If theme is not specified, the block applies only default values:</p>\n<ul>\n<li>Theme of a button: native representation of a button by the browser.</li>\n<li>Localization: en</li>\n<li>Button&#39;s message text (<code>__button</code>): &quot;Choose file&quot;</li>\n<li>Text message rendered with no file selected (<code>__no-file</code>): &quot;no file selected&quot;</li>\n</ul>\n<p>Following example demonstrates this:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39; },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h3 id=\"block-state\">Block state</h3>\n<p><code>_disabled_true</code></p>\n<ul>\n<li>disabled\nIf block is disabled a file selection button becomes unavailable for user&#39;s manipulations.</li>\n</ul>\n<p>The button is active by default.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { disabled : true },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39;, disabled : true },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<p>The block is visually represented by the following elements:</p>\n<h3 id=\"__button\">__button</h3>\n<p>A mandatory element.</p>\n<p>A file selection button. It aims to open the system window for a file download. It is based on a <a href=\"../button/\">button</a> block and inherites its behavior (JS) and formatting (CSS).</p>\n<p>If a theme <em>simple</em> is not declared, the button&#39;s text &quot;Choose file&quot; is used by default.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39; },\n        button : {\n            block : &#39;button&#39;,\n            mods : { theme : &#39;simple&#39; },\n            icon : { elem : &#39;icon&#39; }\n        },\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>A native control of file attaching.</p>\n<p>It is rendered by BEMHTML and BH template engines as a native control of file attaching with attributes: <code>&lt;input class=&quot;file-name&quot; type=&quot;file&quot;&gt;</code>.</p>\n<h3 id=\"__no-file\">__no-file</h3>\n<p>Element for description rendering with no file selected.</p>\n<p>If a theme <em>simple</em> is not declared, the text message &quot;no file selected&quot; is used by default.</p>\n<h3 id=\"__file\">__file</h3>\n<p>A container for a attached file information.</p>\n<p>It consists of the following block&#39;s elements:</p>\n<ul>\n<li><code>__text</code></li>\n<li><code>__clear</code></li>\n</ul>\n<h3 id=\"__text\">__text</h3>\n<p>File name. It appears after some file is attached.</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Clear attachment button (deletion cross element). It appears after some file is attached.</p>\n<p>The element is available for a <em>simple</em> theme of <strong>attach</strong> block.</p>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n\n<h1 id=\"button\">button</h1>\n<p>The <strong>button</strong> block is used for different types of buttons creating. It allows you to manage size, sate, content and appearance of a button.</p>\n<p>In MSIE8 block <strong>button</strong> is rendered as native button <code>&lt;button&gt;</code>; <code>link-button</code> is rendered as native link <code>&lt;a&gt;</code>.</p>\n<h2 id=\"button-use-cases\">Button use cases</h2>\n<table>\n  <tr>\n    <th align=\"center\">Type</th>\n    <th align=\"center\">Description</th>\n    <th align=\"center\">Example</th>\n  </tr>\n  <tr>\n    <td>Button</td>\n    <td>Used by default.</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;\n  },\n  icon : {\n    block : &#39;icon&#39;,\n    mods : {\n      action : &#39;download&#39;\n    }\n  }\n}\n      </code></pre>\n    </td>\n   <tr>\n    <td>Link-button</td>\n    <td>A button that provides link functionality. <br>Has an optional attribute <code>url</code><br> to specify the address to which to <br>navigate.</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    type : &#39;link&#39;\n  },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n   </tr>\n   <tr>\n    <td>Action button</td>\n    <td>Designed to send data to the server (submit).<br> Always located in the form. <br>Set a <code>type</code> modifier with <code>submit</code> value in <br>BEMJSON to create an action button.\n    </td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : {\n      theme : &#39;normal&#39;,\n      size : &#39;m&#39;,\n      type : &#39;submit&#39;\n    },\n    text : &#39;button&#39;\n  }\n}\n      </code></pre>\n    </td>\n   </tr>\n</table>\n\n<h2 id=\"block-s-api\">Block&#39;s API</h2>\n<p>The public methods of the block are:</p>\n<table>\n  <tr>\n    <th align=\"center\">Method</th>\n    <th align=\"center\">Description</th>\n  </tr>\n  <tr>\n    <td>getText</td>\n    <td>Returns text of the button {String}.</td>\n  </tr>\n  <tr>\n    <td>setText</td>\n    <td>Sets text to the button.</td>\n  </tr>\n</table>\n\n<h2 id=\"valid-block-s-attributes\">Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n  <tr>\n    <th align=\"center\">Attributes</th>\n    <th align=\"center\">Type</th>\n    <th align=\"center\">Description</th>\n  </tr>\n  <tr>\n    <td>text</td>\n    <td>String</td>\n    <td>Text of the button.</td>\n   </tr>\n   <tr>\n    <td>icon</td>\n    <td>BEMJSON</td>\n    <td>The <strong>icon</strong> block.</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>String</td>\n    <td>URL address. If URL address is specified the <br>button provides a link functionality.</td>\n  </tr>\n</table>\n\n<p>The other valid block&#39;s attributes could be specified in the <code>attrs</code> field in BEMJSON.</p>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"the-themes-_theme-\">The themes <code>_theme</code></h3>\n<p>The block supports the follwing themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>It a <code>_theme</code> modifier is not specified the native representation (<code>default</code>) of a control is available.</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"the-sizes-_size-\">The sizes <code>_size</code></h3>\n<p>Mandatory modifier for <em>normal</em> theme only.\nProvides the size value to all types of buttons.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following example demonstrates this:</p>\n<table>\n  <tr>\n    <th align=\"center\">Size/Values</th>\n    <th align=\"center\">Font size</th>\n    <th align=\"center\">Button height</th>\n    <th align=\"center\">Example</th>\n  </tr>\n  <tr>\n    <th align=\"center\">s</th>\n    <td>13px</td>\n    <td>24px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;s&#39;\n  },\n  text : &#39;Small&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">m</th>\n    <td>13px</td>\n    <td>28px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;\n  },\n  text : &#39;Medium&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">l</th>\n    <td>15px</td>\n    <td>32px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;l&#39;\n  },\n  text : &#39;Large&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">xl</th>\n    <td>18px</td>\n    <td>38px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;xl&#39;\n  },\n  text : &#39;X-large&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"button-s-type-_type-\">Button&#39;s type <code>_type</code></h3>\n<p>The following types of button are available:</p>\n<ul>\n<li><p>link-button (<code>_link</code>). Has a mandatory attribute <code>url</code>. A link-button has an <code>&lt;a&gt;</code> attribute and the <code>url</code> value becomes a <code>href</code> attribute.</p>\n</li>\n<li><p>action  button (<code>_submit</code>). Should be a part of a form only.</p>\n</li>\n</ul>\n<p>The <code>_type</code> modifier is available for <em>simple</em> and <em>normal</em> themes.</p>\n<table>\n  <tr>\n    <th align=\"center\">Type/<br>Realisation</th>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td> <code>_link</code></td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : { type : &#39;link&#39; },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    type : &#39;link&#39;\n  },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <td><code>_submit</code></td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : { type : &#39;submit&#39; },\n    text : &#39;default&#39;\n}\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : {\n      theme : &#39;normal&#39;,\n      size : &#39;m&#39;,\n      type : &#39;submit&#39;\n    },\n    text : &#39;normal&#39;\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"button-s-states\">Button&#39;s states</h3>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If a <code>_disabled</code> modifier has <code>_true</code> value the button is visible, but is not available for user action.</p>\n<p>Disabled button cannot be focused by <code>Tab</code> pressing or mouse click.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_disabled_true&#39;,\n  mods : { disabled : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_disabled_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    disabled : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>If <code>focused</code> modifier has a <code>true</code> value the button is always focused. You can click the focused button using <code>Space</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<p>Available for all themes of block.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;_focused_true&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;,\n        focused : true\n    }\n}\n</code></pre>\n<h4 id=\"-_hovered-\"><code>_hovered</code></h4>\n<p>Defines the &quot;hover&quot; action.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_hovered_true&#39;,\n  mods : { hovered : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_hovered_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    hovered : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_pressed-\"><code>_pressed</code></h4>\n<p>Defines a &quot;pressed&quot; state of a button.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_pressed_true&#39;,\n  mods : { pressed : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_pressed_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    pressed : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_togglable-\"><code>_togglable</code></h4>\n<p>Determines the state of the pressed button when the first click the button presses it, and the second returns to its original state.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_togglable_true&#39;,\n  mods : { togglable : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_togglable_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    togglable : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_action-\"><code>_action</code></h4>\n<p>Visually detects the button on a page.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_action_true&#39;,\n  mods : { action : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_action_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    action : true\n  }\n}\n      </code></pre>\n  </td>\n  </tr>\n</table>\n\n<h4 id=\"pseudo-button-_pseudo-\">Pseudo button <code>_pseudo</code></h4>\n<p>If <code>pseudo</code> modifier has <code>true</code> value the button background becomes transparent. If pseudo button is disabled its boarders disappear.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true },\n    text : &#39;pseudo&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true, disabled : true },\n    text : &#39;pseudo&#39;\n}\n</code></pre>\n<h2 id=\"b-ock-s-elements\">B;ock&#39;s elements</h2>\n<p>The block is visually represented by the following elements:</p>\n<h3 id=\"__text\">__text</h3>\n<p>This element intended to set a text position in the button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } },\n    text : &#39;with icon&#39;\n}\n</code></pre>\n<h2 id=\"dependencies\">Dependencies</h2>\n<p>The <code>button</code> block depends on</p>\n<ul>\n<li><code>base-control</code>, that provides public API for the controls.<code>i-bem__dom</code></li>\n<li><code>i-bem__dom</code></li>\n</ul>\n\n<h1 id=\"icon\">icon</h1>\n<p><code>&lt;i&gt;</code>-based block for using as an element in other blocks, not for independent using. Picture is set as <code>background</code> property.</p>\n<p>In BEMJSON you can use both the modifier and the <code>url</code> field for a picture representation:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n     block : &#39;icon&#39;,\n     url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, mods : { social : &#39;twitter&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;checkbox&#39;,\n        mods : { theme : &#39;simple&#39;, type : &#39;button&#39; },\n        text : &#39;icon&#39;,\n        icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, url : &#39;../../../test.blocks/icon/_action/download.svg&#39; }\n    }\n</code></pre>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "attach",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/attach/2LkwTGo-4d7fxgnG4skRO2tHoic/2LkwTGo-4d7fxgnG4skRO2tHoic.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/5xB7ZOo0QLcc5PePNxJjLhIa9oY/5xB7ZOo0QLcc5PePNxJjLhIa9oY.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/8cgGhCbp_iZMx8M367v3_N8eRcg/8cgGhCbp_iZMx8M367v3_N8eRcg.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/9cWvWwDSqNsB1vRw6nid96kdkoo/9cWvWwDSqNsB1vRw6nid96kdkoo.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/c3tTTsQQpS_wyaTRUODJQMWC3x8/c3tTTsQQpS_wyaTRUODJQMWC3x8.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/dMMLn3JVWVrtmilJB6c2-UUGyZc/dMMLn3JVWVrtmilJB6c2-UUGyZc.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/LYQ2mpdVgO15THXOFHSn3LtLeWc/LYQ2mpdVgO15THXOFHSn3LtLeWc.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/nwytMff5nyXPoczzUvwVbgD7YQQ/nwytMff5nyXPoczzUvwVbgD7YQQ.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/attach/TlYDF2oQVo93Y7ocT-4hcsjHHB8/TlYDF2oQVo93Y7ocT-4hcsjHHB8.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"attach\">attach</h1>\n<p>Блок <code>attach</code> служит для загрузки файла, предназначенного для отправки на сервер.</p>\n<p>По умолчанию блок визуально представлен кнопкой на основе блока <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a>, открывающей системное окно загрузки файла, и текстовым сообщением «Файл не выбран». После загрузки файла отображаются следующие элементы:</p>\n<ul>\n<li>иконка файла (блок <code>icon</code>);</li>\n<li>имя файла (<code>__text</code>);</li>\n<li>крестик для отмены (<code>__clear</code>).</li>\n</ul>\n<p>Не позволяет прикреплять несколько файлов и не поддерживает drag-and-drop.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы оформления  <code>_theme</code></h3>\n<p>Блок представлен только в теме <em>simple</em>.</p>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    button : &#39;Выберите файл&#39;,\n    noFileText : &#39;Файл не выбран&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    mods : { theme : &#39;simple&#39; },\n    button : &#39;Выберите файл&#39;,\n    noFileText : &#39;Файл не выбран&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии блока «неактивен» кнопка выбора становится недоступной для действий пользователя.</p>\n<p>Если модификатор <code>disabled</code> не выбран, кнопка по умолчанию активна.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    mods : { theme : &#39;simple&#39;, disabled : true },\n    button : &#39;Выберите файл&#39;,\n    noFileText : &#39;файл не выбран&#39;\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__button\">__button</h3>\n<p>Обязательный элемент.\nКнопка выбора файла. Открывает системное окно загрузки файла. Создается на основе блока <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a> и использует его поведение (JS) и внешний вид (CSS). Контент кнопки задается во входных данных.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    mods : { theme : &#39;simple&#39; },\n    button : {\n        block : &#39;button&#39;,\n        mods : { theme : &#39;simple&#39; },\n        icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; },\n        text: &#39;Выберите файл&#39;\n        }\n    },\n    noFileText : &#39;Файл не выбран&#39;\n}\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>Нативный контрол «прикрепить файл».</p>\n<p>Преобразуется BEMHTML- и BH-шаблонами в нативный элемент прикрепления файла с атрибутами <code>&lt;input class=&quot;attach__control&quot; type=&quot;file&quot;&gt;</code>.</p>\n<h3 id=\"__no-file\">__no-file</h3>\n<p>Элемент для отображения текста, когда файл не выбран.</p>\n<p>Если тема <em>simple</em> не указана для блока <code>attach</code>, будет отображаться значение нативного контрола – «Файл не выбран».</p>\n<h3 id=\"__file\">__file</h3>\n<p>Контейнер с информацией о прикрепленном файле.</p>\n<p>Формируется из следующих элементов блока:</p>\n<ul>\n<li><code>__text</code></li>\n<li><code>__clear</code></li>\n</ul>\n<p>Может содержать блок <code>icon</code>. В зависимости от типа файла, блоку <code>icon</code> добавляется соответствующий модификатор, которому будет назначена иконка типа файла.</p>\n<h3 id=\"__text\">__text</h3>\n<p>Имя файла. Появляется после прикрепления файла.</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Кнопка отмены выбранного файла (крестик). Появляется после прикрепления файла.</p>\n<p>Элемент реализован для темы <em>simple</em>.</p>\n<h3 id=\"-\">Зависимости блока</h3>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n<li><code>icon</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n\n<h1 id=\"button\">button</h1>\n<p>Блок <code>button</code> используется для создания различных типов кнопок и предоставляет возможность изменять их размер, состояние, содержимое и внешний вид.</p>\n<h2 id=\"-\">Варианты использования кнопок</h2>\n<ul>\n<li>Обычная кнопка – применяется для любых кнопок веб-интерфейса; используется по умолчанию.</li>\n<li>Кнопка-ссылка – применяется для перехода по ссылке. Задается модификатором <code>_type</code> со значением <code>_link</code>.</li>\n<li>Кнопка действия – предназначена для отправки данных на сервер (submit). Всегда располагается в форме. Задается через атрибут блока <code>type</code> со значением <code>submit</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает текст кнопки.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code></td>\n        <td>Кнопка с иконкой, которая формируется блоком <code>icon</code>.</td>\n    </tr>\n    <tr>\n        <td>type</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Преобразует обычную кнопку в кнопку действия. Допустимое значение атрибута – <code>submit</code>.</td>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Адрес ссылки. Применяется только при наличии модификатора блока <code>_type_link</code>. Кнопка становится ссылкой, а значение <code>url</code> атрибутом <code>href</code>.</td>\n    </tr>\n</table>\n\n<p>Другие допустимые атрибуты блока могут задаваться в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Тема не указана&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;Тема simple&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Тема normal&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры кнопок <code>_size</code></h3>\n<p>Задает размер всем типам кнопок. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>кнопки</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота<br>кнопки</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39; },\n    text : &#39;Small&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Medium&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    text : &#39;Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39; },\n    text : &#39;X-large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Типы кнопок <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки-ссылки (<code>_type_link</code>).\nДополнительно во входных данных необходимо указать обязательный атрибут <code>url</code>. В таком случае кнопка получает тег <code>&lt;a&gt;</code>, а значение <code>url</code> становится атрибутом <code>href</code>.</p>\n<pre><code>{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;link&#39; },\n    url : &#39;#&#39;,\n    text : &#39;Кнопка-ссылка&#39;\n}\n</code></pre><h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_disabled-\">Неактивна <code>_disabled</code></h4>\n<p>В состоянии «неактивна» кнопка видна, но недоступна для действий пользователя.</p>\n<p>Такая кнопка не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<pre><code class=\"lang-bemjsom\">{\n    block : &#39;button&#39;,\n    text : &#39;Неактивна&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true }\n}\n</code></pre>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>focused</code> со значением <code>true</code> кнопка всегда находится в фокусе. Нажатие по ней можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;В фокусе&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true }\n}\n</code></pre>\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие «наведение курсором» на кнопку.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Наведение курсором&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, hovered : true }\n}\n</code></pre>\n<h4 id=\"-_pressed-\">Нажатие <code>_pressed</code></h4>\n<p>Определяет состояние «нажатие на кнопку» (действие).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка нажата&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pressed : true }\n}\n</code></pre>\n<h4 id=\"-_togglable-\">Залипание <code>_togglable</code></h4>\n<p>Определяет состояние кнопки в нажатом состоянии, когда первый клик по кнопке нажимает ее, а второй возвращает в исходное состояние.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка зажата&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, togglable : true }\n}\n</code></pre>\n<h4 id=\"-_action-\">Визуальное выделение <code>_action</code></h4>\n<p>Визуально выделяет кнопку на странице.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, action : true },\n    type : &#39;submit&#39;,\n    text : &#39;Action&#39;\n}\n</code></pre>\n<h4 id=\"-_pseudo-\">Псевдокнопка <code>_pseudo</code></h4>\n<p>При выборе модификатора <code>_pseudo</code> со значением <code>true</code>, кнопка получает прозрачный фон.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true },\n    text : &#39;Псевдокнопка&#39;\n}\n</code></pre>\n<p>В неактивном состоянии границы псевдокнопки исчезают и она сливается со страницей.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true, disabled : true },\n    text : &#39;Псевдокнопка&#39;\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"__text\">__text</h3>\n<p>Технический элемент. Обрамляет текст кнопки.\nНужен для позиционирования текста внутри кнопки, в том числе для случаев использования вместе с иконкой.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        mods : { action : &#39;download&#39; }\n    },\n    text : &#39;Кнопка с иконкой&#39;\n}\n</code></pre>\n<h2 id=\"-\">Зависимости</h2>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n<li><code>keyboard</code></li>\n</ul>\n\n<h1 id=\"icon\">icon</h1>\n<p>Блок <code>icon</code> используется в качестве графического элемента в других блоках. В HTML представлен тегом <code>&lt;i&gt;</code>. Иконка задается через свойство <code>background</code> и, соответственно, не имеет возможности фоллбека.</p>\n<p>Иконку можно передать как через модификатор, так и через поле <code>url</code>:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;icon&#39;,\n    mods : { social : &#39;twitter&#39; }\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;icon&#39;,\n    url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка с иконкой&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;with icon&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n}\n</code></pre>\n"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "base-control",
                    "data": {
                        "en": {
                            "name": "base-control",
                            "examples": [
                                {
                                    "content": []
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "base-control",
                            "examples": [
                                {
                                    "content": []
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "button",
                    "data": {
                        "en": {
                            "name": "button",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/button/3kp2wC_8uzAG3WG-EYBeTIUwwm4/3kp2wC_8uzAG3WG-EYBeTIUwwm4.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/4gW9GihAqFCGYBCeWUGRD3QWKOs/4gW9GihAqFCGYBCeWUGRD3QWKOs.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/BE2ng8JZ0bG4R2mK7GVvUGNYvjI/BE2ng8JZ0bG4R2mK7GVvUGNYvjI.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/bFydl8wb2VHVtMu2vxBMm6icZHg/bFydl8wb2VHVtMu2vxBMm6icZHg.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/ByAZ1dHx4rZKUf9zbxuHmfOmGNs/ByAZ1dHx4rZKUf9zbxuHmfOmGNs.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/CtrqIPRzZO-TkVaDLVKvRK4P0og/CtrqIPRzZO-TkVaDLVKvRK4P0og.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/fc2vxXBIzzk2stACB-J9vRKlYQ4/fc2vxXBIzzk2stACB-J9vRKlYQ4.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/GVMyNpdJjINIl0Ab_qhtsWRf_YA/GVMyNpdJjINIl0Ab_qhtsWRf_YA.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/h_ijyu_mqbPaJBB22OxZERaFyZA/h_ijyu_mqbPaJBB22OxZERaFyZA.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/igxPz7KCvCVG6TTxlXRYzE2_5pI/igxPz7KCvCVG6TTxlXRYzE2_5pI.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/k-SAhgMwGcp5dgunAdBbNhiPcPI/k-SAhgMwGcp5dgunAdBbNhiPcPI.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/KtCevfKa_rzm7MTQMzA65Z0ZREU/KtCevfKa_rzm7MTQMzA65Z0ZREU.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/niHjaElKr9LiqQpXkfl1vRlgwo8/niHjaElKr9LiqQpXkfl1vRlgwo8.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/pxTNfkqsHxpJmDhwS0QK2QBs3ZY/pxTNfkqsHxpJmDhwS0QK2QBs3ZY.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/QdeiBav-xLD1UHlT_oJYRBLcueI/QdeiBav-xLD1UHlT_oJYRBLcueI.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/Rb77AVqNcSM2UUBxbCkUkHULKWc/Rb77AVqNcSM2UUBxbCkUkHULKWc.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/RQ8YcvhxhqjSwO3I3VjLBOanRns/RQ8YcvhxhqjSwO3I3VjLBOanRns.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/X1_VUgD2DCMkTeRUN6Vd4diR7Yk/X1_VUgD2DCMkTeRUN6Vd4diR7Yk.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"button\">button</h1>\n<p>The <strong>button</strong> block is used for different types of buttons creating. It allows you to manage size, sate, content and appearance of a button.</p>\n<p>In MSIE8 block <strong>button</strong> is rendered as native button <code>&lt;button&gt;</code>; <code>link-button</code> is rendered as native link <code>&lt;a&gt;</code>.</p>\n<h2 id=\"button-use-cases\">Button use cases</h2>\n<table>\n  <tr>\n    <th align=\"center\">Type</th>\n    <th align=\"center\">Description</th>\n    <th align=\"center\">Example</th>\n  </tr>\n  <tr>\n    <td>Button</td>\n    <td>Used by default.</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;\n  },\n  icon : {\n    block : &#39;icon&#39;,\n    mods : {\n      action : &#39;download&#39;\n    }\n  }\n}\n      </code></pre>\n    </td>\n   <tr>\n    <td>Link-button</td>\n    <td>A button that provides link functionality. <br>Has an optional attribute <code>url</code><br> to specify the address to which to <br>navigate.</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    type : &#39;link&#39;\n  },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n   </tr>\n   <tr>\n    <td>Action button</td>\n    <td>Designed to send data to the server (submit).<br> Always located in the form. <br>Set a <code>type</code> modifier with <code>submit</code> value in <br>BEMJSON to create an action button.\n    </td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : {\n      theme : &#39;normal&#39;,\n      size : &#39;m&#39;,\n      type : &#39;submit&#39;\n    },\n    text : &#39;button&#39;\n  }\n}\n      </code></pre>\n    </td>\n   </tr>\n</table>\n\n<h2 id=\"block-s-api\">Block&#39;s API</h2>\n<p>The public methods of the block are:</p>\n<table>\n  <tr>\n    <th align=\"center\">Method</th>\n    <th align=\"center\">Description</th>\n  </tr>\n  <tr>\n    <td>getText</td>\n    <td>Returns text of the button {String}.</td>\n  </tr>\n  <tr>\n    <td>setText</td>\n    <td>Sets text to the button.</td>\n  </tr>\n</table>\n\n<h2 id=\"valid-block-s-attributes\">Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n  <tr>\n    <th align=\"center\">Attributes</th>\n    <th align=\"center\">Type</th>\n    <th align=\"center\">Description</th>\n  </tr>\n  <tr>\n    <td>text</td>\n    <td>String</td>\n    <td>Text of the button.</td>\n   </tr>\n   <tr>\n    <td>icon</td>\n    <td>BEMJSON</td>\n    <td>The <strong>icon</strong> block.</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>String</td>\n    <td>URL address. If URL address is specified the <br>button provides a link functionality.</td>\n  </tr>\n</table>\n\n<p>The other valid block&#39;s attributes could be specified in the <code>attrs</code> field in BEMJSON.</p>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"the-themes-_theme-\">The themes <code>_theme</code></h3>\n<p>The block supports the follwing themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>It a <code>_theme</code> modifier is not specified the native representation (<code>default</code>) of a control is available.</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"the-sizes-_size-\">The sizes <code>_size</code></h3>\n<p>Mandatory modifier for <em>normal</em> theme only.\nProvides the size value to all types of buttons.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following example demonstrates this:</p>\n<table>\n  <tr>\n    <th align=\"center\">Size/Values</th>\n    <th align=\"center\">Font size</th>\n    <th align=\"center\">Button height</th>\n    <th align=\"center\">Example</th>\n  </tr>\n  <tr>\n    <th align=\"center\">s</th>\n    <td>13px</td>\n    <td>24px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;s&#39;\n  },\n  text : &#39;Small&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">m</th>\n    <td>13px</td>\n    <td>28px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;\n  },\n  text : &#39;Medium&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">l</th>\n    <td>15px</td>\n    <td>32px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;l&#39;\n  },\n  text : &#39;Large&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">xl</th>\n    <td>18px</td>\n    <td>38px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;xl&#39;\n  },\n  text : &#39;X-large&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"button-s-type-_type-\">Button&#39;s type <code>_type</code></h3>\n<p>The following types of button are available:</p>\n<ul>\n<li><p>link-button (<code>_link</code>). Has a mandatory attribute <code>url</code>. A link-button has an <code>&lt;a&gt;</code> attribute and the <code>url</code> value becomes a <code>href</code> attribute.</p>\n</li>\n<li><p>action  button (<code>_submit</code>). Should be a part of a form only.</p>\n</li>\n</ul>\n<p>The <code>_type</code> modifier is available for <em>simple</em> and <em>normal</em> themes.</p>\n<table>\n  <tr>\n    <th align=\"center\">Type/<br>Realisation</th>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td> <code>_link</code></td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : { type : &#39;link&#39; },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    type : &#39;link&#39;\n  },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <td><code>_submit</code></td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : { type : &#39;submit&#39; },\n    text : &#39;default&#39;\n}\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : {\n      theme : &#39;normal&#39;,\n      size : &#39;m&#39;,\n      type : &#39;submit&#39;\n    },\n    text : &#39;normal&#39;\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"button-s-states\">Button&#39;s states</h3>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If a <code>_disabled</code> modifier has <code>_true</code> value the button is visible, but is not available for user action.</p>\n<p>Disabled button cannot be focused by <code>Tab</code> pressing or mouse click.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_disabled_true&#39;,\n  mods : { disabled : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_disabled_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    disabled : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>If <code>focused</code> modifier has a <code>true</code> value the button is always focused. You can click the focused button using <code>Space</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<p>Available for all themes of block.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;_focused_true&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;,\n        focused : true\n    }\n}\n</code></pre>\n<h4 id=\"-_hovered-\"><code>_hovered</code></h4>\n<p>Defines the &quot;hover&quot; action.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_hovered_true&#39;,\n  mods : { hovered : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_hovered_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    hovered : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_pressed-\"><code>_pressed</code></h4>\n<p>Defines a &quot;pressed&quot; state of a button.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_pressed_true&#39;,\n  mods : { pressed : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_pressed_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    pressed : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_togglable-\"><code>_togglable</code></h4>\n<p>Determines the state of the pressed button when the first click the button presses it, and the second returns to its original state.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_togglable_true&#39;,\n  mods : { togglable : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_togglable_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    togglable : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_action-\"><code>_action</code></h4>\n<p>Visually detects the button on a page.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_action_true&#39;,\n  mods : { action : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_action_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    action : true\n  }\n}\n      </code></pre>\n  </td>\n  </tr>\n</table>\n\n<h4 id=\"pseudo-button-_pseudo-\">Pseudo button <code>_pseudo</code></h4>\n<p>If <code>pseudo</code> modifier has <code>true</code> value the button background becomes transparent. If pseudo button is disabled its boarders disappear.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true },\n    text : &#39;pseudo&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true, disabled : true },\n    text : &#39;pseudo&#39;\n}\n</code></pre>\n<h2 id=\"b-ock-s-elements\">B;ock&#39;s elements</h2>\n<p>The block is visually represented by the following elements:</p>\n<h3 id=\"__text\">__text</h3>\n<p>This element intended to set a text position in the button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } },\n    text : &#39;with icon&#39;\n}\n</code></pre>\n<h2 id=\"dependencies\">Dependencies</h2>\n<p>The <code>button</code> block depends on</p>\n<ul>\n<li><code>base-control</code>, that provides public API for the controls.<code>i-bem__dom</code></li>\n<li><code>i-bem__dom</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "button",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/button/3kp2wC_8uzAG3WG-EYBeTIUwwm4/3kp2wC_8uzAG3WG-EYBeTIUwwm4.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/4gW9GihAqFCGYBCeWUGRD3QWKOs/4gW9GihAqFCGYBCeWUGRD3QWKOs.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/BE2ng8JZ0bG4R2mK7GVvUGNYvjI/BE2ng8JZ0bG4R2mK7GVvUGNYvjI.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/bFydl8wb2VHVtMu2vxBMm6icZHg/bFydl8wb2VHVtMu2vxBMm6icZHg.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/ByAZ1dHx4rZKUf9zbxuHmfOmGNs/ByAZ1dHx4rZKUf9zbxuHmfOmGNs.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/CtrqIPRzZO-TkVaDLVKvRK4P0og/CtrqIPRzZO-TkVaDLVKvRK4P0og.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/fc2vxXBIzzk2stACB-J9vRKlYQ4/fc2vxXBIzzk2stACB-J9vRKlYQ4.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/GVMyNpdJjINIl0Ab_qhtsWRf_YA/GVMyNpdJjINIl0Ab_qhtsWRf_YA.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/h_ijyu_mqbPaJBB22OxZERaFyZA/h_ijyu_mqbPaJBB22OxZERaFyZA.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/igxPz7KCvCVG6TTxlXRYzE2_5pI/igxPz7KCvCVG6TTxlXRYzE2_5pI.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/k-SAhgMwGcp5dgunAdBbNhiPcPI/k-SAhgMwGcp5dgunAdBbNhiPcPI.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/KtCevfKa_rzm7MTQMzA65Z0ZREU/KtCevfKa_rzm7MTQMzA65Z0ZREU.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/niHjaElKr9LiqQpXkfl1vRlgwo8/niHjaElKr9LiqQpXkfl1vRlgwo8.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/pxTNfkqsHxpJmDhwS0QK2QBs3ZY/pxTNfkqsHxpJmDhwS0QK2QBs3ZY.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/QdeiBav-xLD1UHlT_oJYRBLcueI/QdeiBav-xLD1UHlT_oJYRBLcueI.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/Rb77AVqNcSM2UUBxbCkUkHULKWc/Rb77AVqNcSM2UUBxbCkUkHULKWc.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/RQ8YcvhxhqjSwO3I3VjLBOanRns/RQ8YcvhxhqjSwO3I3VjLBOanRns.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/button/X1_VUgD2DCMkTeRUN6Vd4diR7Yk/X1_VUgD2DCMkTeRUN6Vd4diR7Yk.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"button\">button</h1>\n<p>Блок <code>button</code> используется для создания различных типов кнопок и предоставляет возможность изменять их размер, состояние, содержимое и внешний вид.</p>\n<h2 id=\"-\">Варианты использования кнопок</h2>\n<ul>\n<li>Обычная кнопка – применяется для любых кнопок веб-интерфейса; используется по умолчанию.</li>\n<li>Кнопка-ссылка – применяется для перехода по ссылке. Задается модификатором <code>_type</code> со значением <code>_link</code>.</li>\n<li>Кнопка действия – предназначена для отправки данных на сервер (submit). Всегда располагается в форме. Задается через атрибут блока <code>type</code> со значением <code>submit</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает текст кнопки.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code></td>\n        <td>Кнопка с иконкой, которая формируется блоком <code>icon</code>.</td>\n    </tr>\n    <tr>\n        <td>type</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Преобразует обычную кнопку в кнопку действия. Допустимое значение атрибута – <code>submit</code>.</td>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Адрес ссылки. Применяется только при наличии модификатора блока <code>_type_link</code>. Кнопка становится ссылкой, а значение <code>url</code> атрибутом <code>href</code>.</td>\n    </tr>\n</table>\n\n<p>Другие допустимые атрибуты блока могут задаваться в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Тема не указана&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;Тема simple&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Тема normal&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры кнопок <code>_size</code></h3>\n<p>Задает размер всем типам кнопок. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>кнопки</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота<br>кнопки</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39; },\n    text : &#39;Small&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Medium&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    text : &#39;Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39; },\n    text : &#39;X-large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Типы кнопок <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки-ссылки (<code>_type_link</code>).\nДополнительно во входных данных необходимо указать обязательный атрибут <code>url</code>. В таком случае кнопка получает тег <code>&lt;a&gt;</code>, а значение <code>url</code> становится атрибутом <code>href</code>.</p>\n<pre><code>{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;link&#39; },\n    url : &#39;#&#39;,\n    text : &#39;Кнопка-ссылка&#39;\n}\n</code></pre><h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_disabled-\">Неактивна <code>_disabled</code></h4>\n<p>В состоянии «неактивна» кнопка видна, но недоступна для действий пользователя.</p>\n<p>Такая кнопка не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<pre><code class=\"lang-bemjsom\">{\n    block : &#39;button&#39;,\n    text : &#39;Неактивна&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true }\n}\n</code></pre>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>focused</code> со значением <code>true</code> кнопка всегда находится в фокусе. Нажатие по ней можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;В фокусе&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true }\n}\n</code></pre>\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие «наведение курсором» на кнопку.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Наведение курсором&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, hovered : true }\n}\n</code></pre>\n<h4 id=\"-_pressed-\">Нажатие <code>_pressed</code></h4>\n<p>Определяет состояние «нажатие на кнопку» (действие).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка нажата&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pressed : true }\n}\n</code></pre>\n<h4 id=\"-_togglable-\">Залипание <code>_togglable</code></h4>\n<p>Определяет состояние кнопки в нажатом состоянии, когда первый клик по кнопке нажимает ее, а второй возвращает в исходное состояние.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка зажата&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, togglable : true }\n}\n</code></pre>\n<h4 id=\"-_action-\">Визуальное выделение <code>_action</code></h4>\n<p>Визуально выделяет кнопку на странице.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, action : true },\n    type : &#39;submit&#39;,\n    text : &#39;Action&#39;\n}\n</code></pre>\n<h4 id=\"-_pseudo-\">Псевдокнопка <code>_pseudo</code></h4>\n<p>При выборе модификатора <code>_pseudo</code> со значением <code>true</code>, кнопка получает прозрачный фон.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true },\n    text : &#39;Псевдокнопка&#39;\n}\n</code></pre>\n<p>В неактивном состоянии границы псевдокнопки исчезают и она сливается со страницей.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true, disabled : true },\n    text : &#39;Псевдокнопка&#39;\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"__text\">__text</h3>\n<p>Технический элемент. Обрамляет текст кнопки.\nНужен для позиционирования текста внутри кнопки, в том числе для случаев использования вместе с иконкой.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        mods : { action : &#39;download&#39; }\n    },\n    text : &#39;Кнопка с иконкой&#39;\n}\n</code></pre>\n<h2 id=\"-\">Зависимости</h2>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n<li><code>keyboard</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "checkbox",
                    "data": {
                        "en": {
                            "name": "checkbox",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/checkbox/79qZiqVxBY5r5ZaX_gUFH7MMT5Y/79qZiqVxBY5r5ZaX_gUFH7MMT5Y.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/9OMss9AsUlfFVAPsG8SlTTcVlLI/9OMss9AsUlfFVAPsG8SlTTcVlLI.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/C7ZkQCq0ZPpMgf1piyMISEARwPc/C7ZkQCq0ZPpMgf1piyMISEARwPc.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/dOZ5XkX9ojCi2r9kiY4DJa4YWvA/dOZ5XkX9ojCi2r9kiY4DJa4YWvA.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/Dz3sVcJ6LQvatoLktNJM35QPIso/Dz3sVcJ6LQvatoLktNJM35QPIso.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/FSuk4Im9Ao4_75PdjgBzm3U8Zww/FSuk4Im9Ao4_75PdjgBzm3U8Zww.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/GSqTjc8TX7KG5JpqDbcpS1N0CZM/GSqTjc8TX7KG5JpqDbcpS1N0CZM.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/IMYtMHFDZhN_agFpLXmNIDTAK4Q/IMYtMHFDZhN_agFpLXmNIDTAK4Q.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/Lc_qQBikKsf-9GuBeR0FLc4-3k0/Lc_qQBikKsf-9GuBeR0FLc4-3k0.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/MiwyveGqb-Q3hDh6b5dvanmXUc0/MiwyveGqb-Q3hDh6b5dvanmXUc0.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/QcTYyDncRH6DrvinlVti5iujuxU/QcTYyDncRH6DrvinlVti5iujuxU.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/sae-WwdkdYcrwwgUC5hw2NDih4/sae-WwdkdYcrwwgUC5hw2NDih4.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/Sgn48vD0-J9Y9jIc1geFcHu6qVA/Sgn48vD0-J9Y9jIc1geFcHu6qVA.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/SojNrUmXHg8qOEVNxLMELyPxf1I/SojNrUmXHg8qOEVNxLMELyPxf1I.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/tU4ymq_plszDwGgrM91feVLkv6s/tU4ymq_plszDwGgrM91feVLkv6s.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/v-9BRGnxLdDNcDKCfuStYG9PRYU/v-9BRGnxLdDNcDKCfuStYG9PRYU.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/XI4uPzI90-UiMiWRig9noeu3mrg/XI4uPzI90-UiMiWRig9noeu3mrg.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/ZQpxZtXWq6x9EgytPp4qnULF16g/ZQpxZtXWq6x9EgytPp4qnULF16g.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/ZWO500NSNVuNcdNcItDCWIHDH3o/ZWO500NSNVuNcdNcItDCWIHDH3o.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox-group/E4bazg4TDlm1W1tmOFMVgeAT1k0/E4bazg4TDlm1W1tmOFMVgeAT1k0.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox-group/tnfPsUBEHfiKv4Ay-bSkmy06NTs/tnfPsUBEHfiKv4Ay-bSkmy06NTs.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox-group/uf6KFu6RRJ3CJRzlZj5THp-53ss/uf6KFu6RRJ3CJRzlZj5THp-53ss.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox-group/Yy5DRxHNPA5fsD-l76T556p1aMY/Yy5DRxHNPA5fsD-l76T556p1aMY.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"checkbox\">checkbox</h1>\n<p>Block <code>checkbox</code> is a graphical user interface element that permits the user to make a binary choice.</p>\n<p>The block creates a container that includes a native checkbox control (<code>control</code> element) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot; attributes&gt;</code> and uses its functionality. A native control is hidden. An <code>autocomplete</code> attribute is <code>off</code> by default.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;Label 1&#39;,\n    name: &#39;name1&#39;,\n    value: &#39;1&#39;\n}\n</code></pre>\n<h2 id=\"-valid-block-s-attributes\">## Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n    <tr>\n        <th>Attribute</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies text string value of a checkbox.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies a checkbox name. A mandatory attribute. The name part of the name/value pair associated with this element for the purposes of form submission.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n            <code>String</code>\n        <td>Specifies a checkbox value. The value part of the name/value pair associated with this element for the purposes of form submission.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>An icon that is rendered using an <code>icon</code> block.</td>\n    </tr>\n</table>\n\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"themes-_theme-\">Themes <code>_theme</code></h3>\n<p>The block supports the following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>It a <code>_theme</code> modifier is not specified the native representation (<em>default</em>) of a control is available.</p>\n<p>Following example demonstrates this:</p>\n<ul>\n<li><p>default</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      text : &#39;default&#39;,\n      name: &#39;default&#39;,\n      value: &#39;1&#39;\n  }\n</code></pre>\n</li>\n<li><p>simple</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      mods : { theme : &#39;simple&#39; },\n      text : &#39;Theme Simple&#39;,\n      name: &#39;simple&#39;,\n      value: &#39;2&#39;\n  }\n</code></pre>\n</li>\n<li><p>normal</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n      text : &#39;Theme Normal&#39;,\n      name: &#39;normal&#39;,\n      value: &#39;3&#39;\n  }\n</code></pre>\n</li>\n</ul>\n<h3 id=\"font-size-_size-\">Font size <code>_size</code></h3>\n<p>Mandatory modifier for <em>normal</em> theme only.\nProvides the font size value to the checkbox text elements.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following example demonstrates this:</p>\n<table>\n    <tr>\n        <th>Size/Parameters</th>\n        <th>Font size</th>\n        <th>String height</th>\n        <th>Example</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;s&#39;\n    },\n    text : &#39;Size S&#39;,\n    name: &#39;name1&#39;,\n    value: &#39;1&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Size M&#39;,\n    name: &#39;name2&#39;,\n    value: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Size L&#39;,\n    name: &#39;name3&#39;,\n    value: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    text : &#39;Size XL&#39;,\n    name: &#39;name4&#39;,\n    value: &#39;4&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"types-_type-\">Types <code>_type</code></h3>\n<p>The <code>checkbox</code> block can be rendered as a buttons. For this use a <code>type</code> modifier with a <code>button</code> value. In this case a <code>checked</code> state of a checkbox is defined by clicking the button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;,\n        type : &#39;button&#39;\n    },\n    text : &#39;Label&#39;,\n    name: &#39;button&#39;,\n    value: &#39;1&#39;\n}\n</code></pre>\n<h3 id=\"states-of-a-checkbox\">States of a checkbox</h3>\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>Checkbox is focused if a block has a <code>focused</code> modifier with a <code>true</code> value.</p>\n<p>You can tick off the focused checkbox using <code>Space</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    text : &#39;Focused&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, focused : true },\n    text : &#39;Focused&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If a <code>disabled</code> modifier has <code>true</code> value the checkbox is visible, but is not available for the user action.</p>\n<p>Disabled checkbox cannot be focused by <code>Tab</code> pressing or mouse click.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    text : &#39;Disabled&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, disabled : true },\n    text : &#39;Disabled&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_checked-\"><code>_checked</code></h4>\n<p>A <code>checked</code> modifier with <code>true</code> value ticks off the checkbox, or clicks a button if a checkbox has <code>{ type : &#39;button&#39; }</code> modifier.</p>\n<p>A <code>checked</code> modifier can be used for all checkboxes in the group.ппе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, checked : true },\n    text : &#39;Checked&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, checked : true },\n    text : &#39;Checked&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>The <code>box</code> element is used to draw the checkbox. A native checkbox is hidden.</p>\n<p>The <code>box</code> element is added to the block on a template engine level.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>The <code>control</code> element is used to provide native control checkbox functionality.</p>\n<p>The <code>control</code> element is added to the block on a template engine level.</p>\n<h2 id=\"block-s-dependencies\">Block&#39;s dependencies</h2>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "checkbox",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/checkbox/79qZiqVxBY5r5ZaX_gUFH7MMT5Y/79qZiqVxBY5r5ZaX_gUFH7MMT5Y.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/9OMss9AsUlfFVAPsG8SlTTcVlLI/9OMss9AsUlfFVAPsG8SlTTcVlLI.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/C7ZkQCq0ZPpMgf1piyMISEARwPc/C7ZkQCq0ZPpMgf1piyMISEARwPc.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/dOZ5XkX9ojCi2r9kiY4DJa4YWvA/dOZ5XkX9ojCi2r9kiY4DJa4YWvA.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/Dz3sVcJ6LQvatoLktNJM35QPIso/Dz3sVcJ6LQvatoLktNJM35QPIso.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/FSuk4Im9Ao4_75PdjgBzm3U8Zww/FSuk4Im9Ao4_75PdjgBzm3U8Zww.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/GSqTjc8TX7KG5JpqDbcpS1N0CZM/GSqTjc8TX7KG5JpqDbcpS1N0CZM.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/IMYtMHFDZhN_agFpLXmNIDTAK4Q/IMYtMHFDZhN_agFpLXmNIDTAK4Q.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/Lc_qQBikKsf-9GuBeR0FLc4-3k0/Lc_qQBikKsf-9GuBeR0FLc4-3k0.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/MiwyveGqb-Q3hDh6b5dvanmXUc0/MiwyveGqb-Q3hDh6b5dvanmXUc0.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/QcTYyDncRH6DrvinlVti5iujuxU/QcTYyDncRH6DrvinlVti5iujuxU.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/sae-WwdkdYcrwwgUC5hw2NDih4/sae-WwdkdYcrwwgUC5hw2NDih4.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/Sgn48vD0-J9Y9jIc1geFcHu6qVA/Sgn48vD0-J9Y9jIc1geFcHu6qVA.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/SojNrUmXHg8qOEVNxLMELyPxf1I/SojNrUmXHg8qOEVNxLMELyPxf1I.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/tU4ymq_plszDwGgrM91feVLkv6s/tU4ymq_plszDwGgrM91feVLkv6s.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/v-9BRGnxLdDNcDKCfuStYG9PRYU/v-9BRGnxLdDNcDKCfuStYG9PRYU.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/XI4uPzI90-UiMiWRig9noeu3mrg/XI4uPzI90-UiMiWRig9noeu3mrg.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/ZQpxZtXWq6x9EgytPp4qnULF16g/ZQpxZtXWq6x9EgytPp4qnULF16g.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox/ZWO500NSNVuNcdNcItDCWIHDH3o/ZWO500NSNVuNcdNcItDCWIHDH3o.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox-group/E4bazg4TDlm1W1tmOFMVgeAT1k0/E4bazg4TDlm1W1tmOFMVgeAT1k0.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox-group/tnfPsUBEHfiKv4Ay-bSkmy06NTs/tnfPsUBEHfiKv4Ay-bSkmy06NTs.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox-group/uf6KFu6RRJ3CJRzlZj5THp-53ss/uf6KFu6RRJ3CJRzlZj5THp-53ss.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox-group/Yy5DRxHNPA5fsD-l76T556p1aMY/Yy5DRxHNPA5fsD-l76T556p1aMY.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"checkbox\">checkbox</h1>\n<p>Блок <code>checkbox</code> («чекбокс») позволяет управлять параметром выбора с двумя состояниями – включено и выключено. Используется, когда необходимо выбрать более одного варианта из предложенных.</p>\n<p>Блок создает контейнер, содержащий нативный контрол чекбокс (элемент <code>__control</code>) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot;&gt;</code>, который скрывается при использовании модификатора <code>_theme</code>.</p>\n<p>Атрибут <code>autocomplete</code> принудительно переведен в состояние <code>off</code> для обеспечения корректной работы блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;Вариант 1&#39;,\n    name: &#39;name1&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение текстовой строке чекбокса.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает имя чекбокса. Обязательный атрибут. Является частью пары имя / значение (name / val), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение чекбокса. Является частью пары имя / значение (name / val), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Иконка, которая отображается с помощью блока <code>icon</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;default&#39;,\n    name: &#39;default&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;Тема Simple&#39;,\n    name: &#39;simple&#39;,\n    val: &#39;2&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Тема Normal&#39;,\n    name: &#39;normal&#39;,\n    val: &#39;3&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размер <code>_size</code></h3>\n<p>Задает размер шрифта.</p>\n<p>Обязательный модификатор. Реализован только в теме <em>normal</em>.</p>\n<p>Доступно два размера реализации блока: <strong>M</strong>, <strong>L</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>блока</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота строки<br>элемента <code>__box</code></th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Размер M&#39;,\n    name: &#39;name2&#39;,\n    val: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>17px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Размер L&#39;,\n    name: &#39;name3&#39;,\n    val: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Тип <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки (модификатор <code>_type</code> в значении <code>_button</code>). В таком случае выбор элемента происходит нажатием на кнопку.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39; },\n    text : &#39;Кнопка Normal&#39;,\n    name: &#39;button&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>_focused</code> со значением <code>_true</code> чекбокс всегда находится в фокусе. Если блок представлен в виде кнопки, она приобретает желтую тень. Нажатие по чекбоксу можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    text : &#39;В фокусе&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, focused : true },\n    text : &#39;В фокусе&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии «неактивен» чекбокс виден, но недоступен для действий пользователя.</p>\n<p>Такой чекбос не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    text : &#39;Неактивна&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, disabled : true },\n    text : &#39;Неактивна&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_checked-\">Отмечен <code>_checked</code></h4>\n<p>Модификатор <code>_checked</code> в значении <code>true</code> определяет, что чекбокс отмечен (выбран).</p>\n<p>Модификатор <code>_checked</code> может быть применен ко всем чекбоксам в группе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, checked : true },\n    text : &#39;Отмечен&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, checked : true },\n    text : &#39;Отмечен&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>__box</code> служит для отрисовки чекбокса, нативный чекбокс скрыт.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n<h3 id=\"-__control-\">Контрол <code>__control</code></h3>\n<p>Элемент <code>__control</code> служит для использования функциональности нативного контрола чекбокса.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n<h2 id=\"-\">Зависимости блока</h2>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "checkbox-group",
                    "jsdoc": "",
                    "data": {
                        "en": {
                            "name": "checkbox-group",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/checkbox-group/E4bazg4TDlm1W1tmOFMVgeAT1k0/E4bazg4TDlm1W1tmOFMVgeAT1k0.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox-group/tnfPsUBEHfiKv4Ay-bSkmy06NTs/tnfPsUBEHfiKv4Ay-bSkmy06NTs.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox-group/uf6KFu6RRJ3CJRzlZj5THp-53ss/uf6KFu6RRJ3CJRzlZj5THp-53ss.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox-group/Yy5DRxHNPA5fsD-l76T556p1aMY/Yy5DRxHNPA5fsD-l76T556p1aMY.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"checkbox\">checkbox</h1>\n<p>Block <code>checkbox</code> is a graphical user interface element that permits the user to make a binary choice.</p>\n<p>The block creates a container that includes a native checkbox control (<code>control</code> element) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot; attributes&gt;</code> and uses its functionality. A native control is hidden. An <code>autocomplete</code> attribute is <code>off</code> by default.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;Label 1&#39;,\n    name: &#39;name1&#39;,\n    value: &#39;1&#39;\n}\n</code></pre>\n<h2 id=\"-valid-block-s-attributes\">## Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n    <tr>\n        <th>Attribute</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies text string value of a checkbox.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies a checkbox name. A mandatory attribute. The name part of the name/value pair associated with this element for the purposes of form submission.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n            <code>String</code>\n        <td>Specifies a checkbox value. The value part of the name/value pair associated with this element for the purposes of form submission.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>An icon that is rendered using an <code>icon</code> block.</td>\n    </tr>\n</table>\n\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"themes-_theme-\">Themes <code>_theme</code></h3>\n<p>The block supports the following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>It a <code>_theme</code> modifier is not specified the native representation (<em>default</em>) of a control is available.</p>\n<p>Following example demonstrates this:</p>\n<ul>\n<li><p>default</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      text : &#39;default&#39;,\n      name: &#39;default&#39;,\n      value: &#39;1&#39;\n  }\n</code></pre>\n</li>\n<li><p>simple</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      mods : { theme : &#39;simple&#39; },\n      text : &#39;Theme Simple&#39;,\n      name: &#39;simple&#39;,\n      value: &#39;2&#39;\n  }\n</code></pre>\n</li>\n<li><p>normal</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n      text : &#39;Theme Normal&#39;,\n      name: &#39;normal&#39;,\n      value: &#39;3&#39;\n  }\n</code></pre>\n</li>\n</ul>\n<h3 id=\"font-size-_size-\">Font size <code>_size</code></h3>\n<p>Mandatory modifier for <em>normal</em> theme only.\nProvides the font size value to the checkbox text elements.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following example demonstrates this:</p>\n<table>\n    <tr>\n        <th>Size/Parameters</th>\n        <th>Font size</th>\n        <th>String height</th>\n        <th>Example</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;s&#39;\n    },\n    text : &#39;Size S&#39;,\n    name: &#39;name1&#39;,\n    value: &#39;1&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Size M&#39;,\n    name: &#39;name2&#39;,\n    value: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Size L&#39;,\n    name: &#39;name3&#39;,\n    value: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    text : &#39;Size XL&#39;,\n    name: &#39;name4&#39;,\n    value: &#39;4&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"types-_type-\">Types <code>_type</code></h3>\n<p>The <code>checkbox</code> block can be rendered as a buttons. For this use a <code>type</code> modifier with a <code>button</code> value. In this case a <code>checked</code> state of a checkbox is defined by clicking the button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;,\n        type : &#39;button&#39;\n    },\n    text : &#39;Label&#39;,\n    name: &#39;button&#39;,\n    value: &#39;1&#39;\n}\n</code></pre>\n<h3 id=\"states-of-a-checkbox\">States of a checkbox</h3>\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>Checkbox is focused if a block has a <code>focused</code> modifier with a <code>true</code> value.</p>\n<p>You can tick off the focused checkbox using <code>Space</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    text : &#39;Focused&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, focused : true },\n    text : &#39;Focused&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If a <code>disabled</code> modifier has <code>true</code> value the checkbox is visible, but is not available for the user action.</p>\n<p>Disabled checkbox cannot be focused by <code>Tab</code> pressing or mouse click.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    text : &#39;Disabled&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, disabled : true },\n    text : &#39;Disabled&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_checked-\"><code>_checked</code></h4>\n<p>A <code>checked</code> modifier with <code>true</code> value ticks off the checkbox, or clicks a button if a checkbox has <code>{ type : &#39;button&#39; }</code> modifier.</p>\n<p>A <code>checked</code> modifier can be used for all checkboxes in the group.ппе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, checked : true },\n    text : &#39;Checked&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, checked : true },\n    text : &#39;Checked&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>The <code>box</code> element is used to draw the checkbox. A native checkbox is hidden.</p>\n<p>The <code>box</code> element is added to the block on a template engine level.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>The <code>control</code> element is used to provide native control checkbox functionality.</p>\n<p>The <code>control</code> element is added to the block on a template engine level.</p>\n<h2 id=\"block-s-dependencies\">Block&#39;s dependencies</h2>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "checkbox-group",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/checkbox-group/E4bazg4TDlm1W1tmOFMVgeAT1k0/E4bazg4TDlm1W1tmOFMVgeAT1k0.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox-group/tnfPsUBEHfiKv4Ay-bSkmy06NTs/tnfPsUBEHfiKv4Ay-bSkmy06NTs.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox-group/uf6KFu6RRJ3CJRzlZj5THp-53ss/uf6KFu6RRJ3CJRzlZj5THp-53ss.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/checkbox-group/Yy5DRxHNPA5fsD-l76T556p1aMY/Yy5DRxHNPA5fsD-l76T556p1aMY.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"checkbox-group\">checkbox-group</h1>\n<p>Блок <code>checkbox-group</code> служит для отображения группы однотипных переключателей – чекбоксов (блоков <code>checkbox</code>). Любой из переключателей группы может быть либо активен, либо нет, вне зависимости от состояния других переключателей.</p>\n<p>Блок позволяет управлять внешним видом и состоянием вложенных переключателей. </p>\n<p>В результате BEMHTML-преобразований блок <code>checkbox-group</code> становится HTML-элементом с тегом <code>&lt;span&gt;</code> – контейнером, содержащим группу чекбоксов и подписи к ним.</p>\n<h2 id=\"-\">Допустимые параметры блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td><code>String</code></td>\n        <td>Имя группы чекбоксов. Преобразуется в HTML-атрибут <code>name</code> вложенного блока <code>input</code>.</td>\n    </tr>\n    <tr>\n        <td>options</td>\n        <td><code>Array</code></td>\n        <td>Массив хешей. Каждый хеш соответствует одному переключателю группы чекбоксов и содержит набор его параметров.</td>\n    </tr><br></table>\n\n<p>Среди параметров, передаваемых для переключателя в массиве хешей <code>option</code>, обязательными являются:</p>\n<ul>\n<li><code>val</code> (<code>String</code>|<code>Number</code>) – значение, возвращаемое выбранным чекбоксом (элемент <code>checkbox__control</code>);</li>\n<li><code>text</code>  (<code>String</code>) – подпись, отображаемая для текущего переключателя. </li>\n</ul>\n<p>Помимо обязательных параметров, в массиве <code>option</code> могут быть переданы любые параметры, допустимые для блока <code>checkbox</code>, например, модификаторы <code>_checked</code> или <code>_disabled</code>.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<ul>\n<li>simple   </li>\n<li>normal  </li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером. </p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox-group&#39;,\n    name : &#39;checkbox-default&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox-group&#39;,\n    mods : { theme : &#39;simple&#39; },\n    name : &#39;checkbox-simple&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox-group&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h3 id=\"-_size-\">Размер переключателей <code>_size</code></h3>\n<p>Модификатор <code>_size</code> устанавливает размер переключателей для всех типов групп чекбоксов. Обязательный модификатор. </p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>В зависимости от значения модификатора <code>_type</code>, доступны следующие размеры реализации блока:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Обычная группа чекбоксов и <code>_type_line</code></th>\n        <th>Кнопочная группа чекбоксов (<code>_type_button</code>)</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>–</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>–</td>\n        <td>+</td>\n</table>\n\n<p>Размеры, на примере темы <em>normal</em> с модификатором <code>_type_button</code>:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;s&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;xl&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-_type-\">Тип группы чекбоксов <code>_type</code></h3>\n<p>Доступны следующие значения модификатор <code>_type</code>:</p>\n<ul>\n<li>Модификатор <code>_type</code> со значением <code>button</code>. Используется для создания кнопочной группы чекбоксов – блока из кнопок-переключателей. </li>\n<li>Модификатор <code>_type</code> со значением <code>line</code> используется для создания группы чекбоксов с выравниванием в строку. После каждого переключателя группы, кроме последнего, автоматически добавляется отступ справа. Размер отступа зависит от значения модификатора <code>_size</code>. Реализован только в теме <em>normal</em>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычная группа чекбоксов</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;checkbox-button&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Кнопочная группа чекбоксов (<code>_type_button</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Строчная группа чекбоксов (<code>_type_line</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;line&#39; \n    },\n    name : &#39;checkbox-line&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr><br></table>\n\n\n<h3 id=\"-_disabled-\">Неактивна <code>_disabled</code></h3>\n<p>В состоянии &quot;неактивна&quot; группа чекбоксов отображается, но недоступна для действий пользователя.  </p>\n<p>Такая группа чекбоксов не будет получать фокус (модификатор <code>_focused</code>).</p>\n<p>При установке модификатора <code>_disabled</code> для группы, всем переключателям группы также устанавливается модификатор <code>_disabled</code>. Как следствие, для них не будут:</p>\n<ul>\n<li>устанавливаться модификаторы состояния <code>_hovered</code>, <code>_pressed</code> и <code>_focused</code>;</li>\n<li>изменяться значения модификатора <code>_checked</code>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39;,\n        disabled : true \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39;, checked : true }\n    ]\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда один из его элементов находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<p>Реализован во всех темах блока.</p>\n<h2 id=\"-\">Зависимости блока</h2>\n<p>Блок <code>checkbox-group</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>checkbox</code></li>\n<li><code>jquery</code></li>\n</ul>\n\n<h1 id=\"checkbox\">checkbox</h1>\n<p>Блок <code>checkbox</code> («чекбокс») позволяет управлять параметром выбора с двумя состояниями – включено и выключено. Используется, когда необходимо выбрать более одного варианта из предложенных.</p>\n<p>Блок создает контейнер, содержащий нативный контрол чекбокс (элемент <code>__control</code>) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot;&gt;</code>, который скрывается при использовании модификатора <code>_theme</code>.</p>\n<p>Атрибут <code>autocomplete</code> принудительно переведен в состояние <code>off</code> для обеспечения корректной работы блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;Вариант 1&#39;,\n    name: &#39;name1&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение текстовой строке чекбокса.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает имя чекбокса. Обязательный атрибут. Является частью пары имя / значение (name / val), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение чекбокса. Является частью пары имя / значение (name / val), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Иконка, которая отображается с помощью блока <code>icon</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;default&#39;,\n    name: &#39;default&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;Тема Simple&#39;,\n    name: &#39;simple&#39;,\n    val: &#39;2&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Тема Normal&#39;,\n    name: &#39;normal&#39;,\n    val: &#39;3&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размер <code>_size</code></h3>\n<p>Задает размер шрифта.</p>\n<p>Обязательный модификатор. Реализован только в теме <em>normal</em>.</p>\n<p>Доступно два размера реализации блока: <strong>M</strong>, <strong>L</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>блока</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота строки<br>элемента <code>__box</code></th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Размер M&#39;,\n    name: &#39;name2&#39;,\n    val: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>17px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Размер L&#39;,\n    name: &#39;name3&#39;,\n    val: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Тип <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки (модификатор <code>_type</code> в значении <code>_button</code>). В таком случае выбор элемента происходит нажатием на кнопку.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39; },\n    text : &#39;Кнопка Normal&#39;,\n    name: &#39;button&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>_focused</code> со значением <code>_true</code> чекбокс всегда находится в фокусе. Если блок представлен в виде кнопки, она приобретает желтую тень. Нажатие по чекбоксу можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    text : &#39;В фокусе&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, focused : true },\n    text : &#39;В фокусе&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии «неактивен» чекбокс виден, но недоступен для действий пользователя.</p>\n<p>Такой чекбос не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    text : &#39;Неактивна&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, disabled : true },\n    text : &#39;Неактивна&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_checked-\">Отмечен <code>_checked</code></h4>\n<p>Модификатор <code>_checked</code> в значении <code>true</code> определяет, что чекбокс отмечен (выбран).</p>\n<p>Модификатор <code>_checked</code> может быть применен ко всем чекбоксам в группе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, checked : true },\n    text : &#39;Отмечен&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, checked : true },\n    text : &#39;Отмечен&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>__box</code> служит для отрисовки чекбокса, нативный чекбокс скрыт.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n<h3 id=\"-__control-\">Контрол <code>__control</code></h3>\n<p>Элемент <code>__control</code> служит для использования функциональности нативного контрола чекбокса.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n<h2 id=\"-\">Зависимости блока</h2>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "dropdown",
                    "data": {
                        "en": {
                            "name": "dropdown",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/dropdown/3LxBJkGCYdsRIM3jgENaGnBRRuI/3LxBJkGCYdsRIM3jgENaGnBRRuI.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/dropdown/7xwP-2BJ2nd_leTd5MyNfCK8-wA/7xwP-2BJ2nd_leTd5MyNfCK8-wA.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/dropdown/8Fm0DE_2FJy1NDrA8TqWefQAcRg/8Fm0DE_2FJy1NDrA8TqWefQAcRg.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/dropdown/T2LPHF5xz8GwGt4VOGdjyOJF_lA/T2LPHF5xz8GwGt4VOGdjyOJF_lA.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/dropdown/TZQCpS37p6PxRpc44EhMDX395AA/TZQCpS37p6PxRpc44EhMDX395AA.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/dropdown/vkuviqNPhqQ2uV_ZhFfhVegfskc/vkuviqNPhqQ2uV_ZhFfhVegfskc.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/dropdown/WcgFmT2l-N83y2w6hRJ-qqSpzkY/WcgFmT2l-N83y2w6hRJ-qqSpzkY.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/dropdown/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": ""
                                }
                            ]
                        },
                        "ru": {
                            "name": "dropdown",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/dropdown/3LxBJkGCYdsRIM3jgENaGnBRRuI/3LxBJkGCYdsRIM3jgENaGnBRRuI.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/dropdown/7xwP-2BJ2nd_leTd5MyNfCK8-wA/7xwP-2BJ2nd_leTd5MyNfCK8-wA.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/dropdown/8Fm0DE_2FJy1NDrA8TqWefQAcRg/8Fm0DE_2FJy1NDrA8TqWefQAcRg.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/dropdown/T2LPHF5xz8GwGt4VOGdjyOJF_lA/T2LPHF5xz8GwGt4VOGdjyOJF_lA.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/dropdown/TZQCpS37p6PxRpc44EhMDX395AA/TZQCpS37p6PxRpc44EhMDX395AA.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/dropdown/vkuviqNPhqQ2uV_ZhFfhVegfskc/vkuviqNPhqQ2uV_ZhFfhVegfskc.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/dropdown/WcgFmT2l-N83y2w6hRJ-qqSpzkY/WcgFmT2l-N83y2w6hRJ-qqSpzkY.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/dropdown/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"dropdown\">dropdown</h1>\n<p>Блок <code>dropdown</code> используется для создания выпадающих элементов и позволяет изменять их состояние, поведение и внешний вид. Блок состоит из двух компонентов – управляющего компонента и попапа (блок <code>popup</code>), который отображается поверх остальных элементов страницы.</p>\n<p>Управляющий компонент при щелчке мышью вызывает попап (устанавливает для блока <code>popup</code> модификатор <code>_visible</code>).</p>\n<p>В зависимости от значения модификатора <code>_switcher</code>,  управляющим компонентом может служить ссылка, псевдоссылка или кнопка.</p>\n<h2 id=\"-\">Допустимые параметры блока</h2>\n<p>Допустимые параметры блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>switcher</td>\n        <td><code>String|BEMJSON</code></td>\n        <td>Текст управляющего компонента. Может содержать фрагмент BEMJSON, например, если нужно обернуть управляющий компонент в другой блок или передать ему дополнительные параметры. </td>\n    </tr>\n    <tr>\n        <td>popup</td>\n        <td><code>String|BEMJSON</code></td>\n        <td>Текст или фрагмент BEMJSON, отображаемый во всплывающем окне <code>popup</code>. BEMJSON при этом будет преобразован в HTML.</td>\n    </tr>\n</table>\n\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : { switcher : &#39;link&#39; },\n    switcher : &#39;link&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : { switcher : &#39;link&#39;, theme : &#39;simple&#39; },\n    switcher : &#39;link&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : { switcher : &#39;link&#39;, theme : &#39;normal&#39; },\n    switcher : &#39;link&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-_switcher-\">Управляющий компонент <code>_switcher</code></h3>\n<p>Обязательный модификатор.</p>\n<p>Модификатор отвечает за то, какой блок будет использоваться в качестве управляющего компонента:</p>\n<ul>\n<li><code>_switcher_link</code> - ссылка. В качестве управляющего компонента используется блок <code>link</code>.</li>\n<li><code>_switcher_button</code> - кнопка. В качестве управляющего компонента используется блок <code>button</code>.</li>\n</ul>\n<p>Реализован во всех темах.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    switcher : &#39;button&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-_disabled-\">Неактивен <code>_disabled</code></h3>\n<p>В состоянии &quot;неактивен&quot; дропдаун отображается, но недоступен для действий пользователя.</p>\n<p>Для такого блока не будет устанавливаться состояние <code>_opened</code> при щелчке мышью по управляющему компоненту.</p>\n<p>При установке для блока модификатора <code>_disabled</code>, для компонентов блока не будут производиться следующие действия:</p>\n<ul>\n<li>Блок </code>popup – установка модификатора <code>_visible</code>;</li>\n<li>Управляющий компонент <code>link</code> – установка состояния <code>_focused</code>. Ссылка не получает фокус по щелчку мышью или по нажатию клавиши <code>Tab</code>;</li>\n<li>Управляющий компонент <code>button</code>:<ul>\n<li>установка состояния <code>_focused</code>. Кнопка не получает фокус по щелчку мышью или по нажатию клавиши <code>Tab</code>;</li>\n<li>установка состояния <code>_hovered</code> при наведении указателем мыши.</li>\n</ul>\n</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;,\n        disabled : true\n    },\n    switcher : &#39;button&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_opened-\">Открыт <code>_opened</code></h4>\n<p>Модификатор <code>_opened</code> в значении <code>true</code> автоматически выставляется блоку при щелчке мышью по управляющему компоненту блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;,\n        opened : true\n    },\n    switcher : &#39;button&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<p>Модификатор снимается при повторном щелчке мышью по управляющему компоненту или за пределами попапа (зависит от наличия модификатора <code>_autoclosable</code> блока <code>popup</code>).</p>\n<h2 id=\"bemjson-switcher-popup-\">BEMJSON в атрибутах <code>switcher</code> и <code>popup</code></h2>\n<p>Атрибуты управляющего компонента и попапа могут содержать фрагмент БЭМ-дерева, например, если нужно обернуть управляющий компонент в другой блок или передать ему дополнительные параметры.</p>\n<p>Например, можно сделать кнопку управляющего компонента &quot;залипающей&quot;:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    switcher : {\n        block : &#39;button&#39;,\n        mods : { togglable : &#39;true&#39; },\n        text : &#39;custom button&#39;\n    },\n    popup : &#39;Popup message&#39;\n}\n</code></pre>\n<p>Или создать на основе блока выпадающий селект:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    switcher : &#39;Dropdown menu&#39;,\n    popup : {\n        block : &#39;menu&#39;,\n        mods : {\n            theme : &#39;normal&#39;,\n            size : &#39;xl&#39;,\n            select : &#39;check&#39;\n        },\n        content : [\n            {\n                block : &#39;menu-item&#39;,\n                val : 1,\n                content : &#39;First item&#39;\n            },\n            {\n                block : &#39;menu-item&#39;,\n                val : 2,\n                content : &#39;Second item&#39;\n            }\n        ]\n    }\n}\n</code></pre>\n<h2 id=\"-\">Зависимости блока</h2>\n<p>Блок <code>dropdown</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>dom</code></li>\n<li><code>popup</code></li>\n<li><code>button</code>/<code>link</code> (в зависимости от управляющего компонента <code>_switcher</code>)</li>\n</ul>\n\n<h1 id=\"popup\">popup</h1>\n<p>Блок <code>popup</code> используется для создания выпадающих элементов и позволяет изменять их состояние, поведение и внешний вид. Блок отображается поверх остальных элементов страницы.</p>\n<p>Попап может быть вызван различными элементами страницы, например, кнопками или псевдоссылками.</p>\n<p>В момент первого показа (установка модификатора <code>_visible</code>) DOM-элемент блока создается в конце <code>&lt;body&gt;</code>.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    content : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;simple&#39; },\n    content : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39; },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_visible-\">Видимый <code>_visible</code></h3>\n<p>Модификатор, отвечающий за видимость блока. При значении модификатора <code>false</code> блок не отображается.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39;, visible : true },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_direction-\">Расположение относительно родителя <code>_direction</code></h3>\n<p>Модификатор управляет положением попапа на странице, относительно вызвавшего его блока. Расположение блока определяется автоматически, исходя из массива допустимых расположений и положения родителя на странице.</p>\n<p>Выбранное расположение влияет на направление анимации раскрытия.</p>\n<p>По умолчанию используется следующий массив допустимых расположений:</p>\n<table>\n    <tr>\n        <th> Направление раскрытия </td>\n        <th> Индекс в массиве </td>\n    </tr>\n        <td> bottom-left </td>\n        <td> 0 </td>\n    </tr>\n    <tr>\n        <td> bottom-center </td>\n       <td> 1 </td>\n   </tr>\n    <tr>\n        <td> bottom-right</td>\n        <td> 2 </td>\n    </tr>\n    <tr>\n        <td> top-left </td>\n        <td> 3 </td>\n    </tr>\n    <tr>\n        <td> top-center </td>\n        <td> 4 </td>\n    </tr>\n    <tr>\n        <td> top-right </td>\n        <td> 5 </td>\n    </tr>\n    <tr>\n        <td> right-top </td>\n        <td> 6 </td>\n    </tr>\n    <tr>\n        <td> right-center </td>\n        <td> 7 </td>\n    </tr>\n    <tr>\n        <td> right-bottom </td>\n        <td> 8 </td>\n    </tr>\n    <tr>\n        <td> left-top </td>\n        <td> 9 </td>\n    </tr>\n    <tr>\n        <td> left-center </td>\n        <td> 10 </td>\n    </tr>\n    <tr>\n        <td> left-bottom </td>\n        <td> 11 </td>\n    </tr>\n</table>\n\n<p>Чтобы управлять расположением попапа, можно ограничить массив расположений, оставив только требуемые. Пользовательский массив нужно передать в качестве JS-параметра с ключом <code>directions</code>. При этом, из значений массива будет выбрано наиболее подходящее, исходя из положения родителя на странице.</p>\n<p>Например, если требуется, чтобы попап раскрывался над родителем:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { autoclosable : true, theme: &#39;simple&#39; },\n    js : { directions : [&#39;top-left&#39;, &#39;top-center&#39;, &#39;top-right&#39;] },\n    content : &#39;Hello, world!&#39;\n}\n</code></pre>\n<p>Или разместить попап справа по центру:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { autoclosable : true, theme: &#39;simple&#39; },\n    js : { directions : [&#39;right-center&#39;] },\n    content : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-_autoclosable-\">Автоматическое скрытие <code>_autoclosable</code></h3>\n<p>Модификатор отвечает за автоматическое скрытие попапа при клике вне блока. При установке модификатора <code>_autoclosable</code> в значении <code>_true</code> блок будет скрываться при щелчке за его пределами (будет снят модификатор <code>_visible</code>).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39;, autoclosable : true },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h2 id=\"-popup-\">Взаимосвязи между popup&#39;ами</h2>\n<p>Так как попап выносит себя в конец <code>&lt;body&gt;</code>, чтобы перекрывать другие элементы страницы, возникает необходимость в построении взаимосвязей. Блок умеет выстраивать связи Parent → [ Child, Child, ... ]. Для этого он выполняет проверку, вложен ли блок, вызывающий попап в другой <code>popup</code>. Потомки знают о наличии родителя.\nЕсли бы этих взаимосвязей не было, то родительский попап (при наличии модификатора <code>autoclosable</code> со значением <code>true</code>) закрылся бы при клике внутри дочернего.</p>\n<p>Другими словами, модификатор <code>autoclosable</code> со значением <code>true</code> означает, что попап закроется сам и закроет свои дочерние блоки при клике за пределами его самого и дочерних попапов.</p>\n<p>Дочерние блоки popup можно рассматривать в виде цепочки 1 → 2 → 3 → 4. При клике на 2-ом попапе – закрываются 3, 4. При клике в 1 – закрываются 2, 3, 4. При клике за пределами любого попапа из цепочки – закроются все.</p>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>popup</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n<li><code>objects</code></li>\n<li><code>functions__throttle</code></li>\n<li><code>keyboard</code></li>\n<li><code>ua</code></li>\n<li><code>jquery__event_pointer</code></li>\n</ul>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "icon",
                    "data": {
                        "en": {
                            "name": "icon",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/icon/736jrhNCMKyzz6eOAkelfMYfHUY/736jrhNCMKyzz6eOAkelfMYfHUY.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/AGqG4VvhTvV3H5tD4ed6nkvlHJ4/AGqG4VvhTvV3H5tD4ed6nkvlHJ4.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/b2PchFG0vbxDCGt-_1VzrN-GK0/b2PchFG0vbxDCGt-_1VzrN-GK0.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/bek_pi0vSgei-mm8QD-H3qy_E0c/bek_pi0vSgei-mm8QD-H3qy_E0c.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/bqsLdaiup-wWnOz-fYrlos47T_c/bqsLdaiup-wWnOz-fYrlos47T_c.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/DEqt3yJaoYjT7_-VWb6vuJTvDVk/DEqt3yJaoYjT7_-VWb6vuJTvDVk.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/NbDEoCuSh4Kby-HPFpw0JdrlyQQ/NbDEoCuSh4Kby-HPFpw0JdrlyQQ.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/w_tWuwVyYuwv7N6i7jChuJOj8Vc/w_tWuwVyYuwv7N6i7jChuJOj8Vc.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/ynzqkkw6NrAupB31X9zL3RrjsuA/ynzqkkw6NrAupB31X9zL3RrjsuA.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"icon\">icon</h1>\n<p><code>&lt;i&gt;</code>-based block for using as an element in other blocks, not for independent using. Picture is set as <code>background</code> property.</p>\n<p>In BEMJSON you can use both the modifier and the <code>url</code> field for a picture representation:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n     block : &#39;icon&#39;,\n     url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, mods : { social : &#39;twitter&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;checkbox&#39;,\n        mods : { theme : &#39;simple&#39;, type : &#39;button&#39; },\n        text : &#39;icon&#39;,\n        icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, url : &#39;../../../test.blocks/icon/_action/download.svg&#39; }\n    }\n</code></pre>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "icon",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/icon/736jrhNCMKyzz6eOAkelfMYfHUY/736jrhNCMKyzz6eOAkelfMYfHUY.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/AGqG4VvhTvV3H5tD4ed6nkvlHJ4/AGqG4VvhTvV3H5tD4ed6nkvlHJ4.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/b2PchFG0vbxDCGt-_1VzrN-GK0/b2PchFG0vbxDCGt-_1VzrN-GK0.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/bek_pi0vSgei-mm8QD-H3qy_E0c/bek_pi0vSgei-mm8QD-H3qy_E0c.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/bqsLdaiup-wWnOz-fYrlos47T_c/bqsLdaiup-wWnOz-fYrlos47T_c.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/DEqt3yJaoYjT7_-VWb6vuJTvDVk/DEqt3yJaoYjT7_-VWb6vuJTvDVk.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/NbDEoCuSh4Kby-HPFpw0JdrlyQQ/NbDEoCuSh4Kby-HPFpw0JdrlyQQ.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/w_tWuwVyYuwv7N6i7jChuJOj8Vc/w_tWuwVyYuwv7N6i7jChuJOj8Vc.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/icon/ynzqkkw6NrAupB31X9zL3RrjsuA/ynzqkkw6NrAupB31X9zL3RrjsuA.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"icon\">icon</h1>\n<p>Блок <code>icon</code> используется в качестве графического элемента в других блоках. В HTML представлен тегом <code>&lt;i&gt;</code>. Иконка задается через свойство <code>background</code> и, соответственно, не имеет возможности фоллбека.</p>\n<p>Иконку можно передать как через модификатор, так и через поле <code>url</code>:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;icon&#39;,\n    mods : { social : &#39;twitter&#39; }\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;icon&#39;,\n    url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка с иконкой&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;with icon&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n}\n</code></pre>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "image",
                    "data": {
                        "en": {
                            "name": "image",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/image/lC8WanGqU6n--Ri8zFvBCOidyB8/lC8WanGqU6n--Ri8zFvBCOidyB8.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/image/W7nRFaBTSLrx_BrCfEIKX7fNYJg/W7nRFaBTSLrx_BrCfEIKX7fNYJg.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"image\">image</h1>\n<p><code>&lt;img&gt;</code>-based block for images, using as a content (logo, for example).</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;image&#39;,\n        url : &#39;http://bem.info/m/_/20zuV2gLiyoaqrHv9LoBRTmB0Ow.svg&#39;,\n        width : 16,\n        height : 16,\n        alt : &#39;BEM&#39;,\n        title : &#39;Find us on bem.info&#39;\n    }\n</code></pre>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "image",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/image/lC8WanGqU6n--Ri8zFvBCOidyB8/lC8WanGqU6n--Ri8zFvBCOidyB8.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/image/W7nRFaBTSLrx_BrCfEIKX7fNYJg/W7nRFaBTSLrx_BrCfEIKX7fNYJg.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"image\">image</h1>\n<p>Блок <code>image</code> используется для вставки картинок.</p>\n<p>В HTML представлен тегом <code>&lt;img&gt;</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;image&#39;,\n    url : &#39;http://bem.info/m/_/20zuV2gLiyoaqrHv9LoBRTmB0Ow.svg&#39;,\n    width : 100,\n    height : 100,\n    alt : &#39;BEM&#39;,\n    title : &#39;Find us on bem.info&#39;\n}\n</code></pre>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>title</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает имя картинки.</td>\n    </tr>\n    <tr>\n        <td>alt</td>\n        <td>\n            <code>String</code></td>\n        <td>Обязательный атрибут. Устанавливает альтернативный текст для изображений. Такой текст позволяет получить текстовую информацию о картинке при отключенной в браузере загрузке изображений. <br>Блок распознается программами чтения с экрана для альтернативного воспроизведения.</td>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Адрес ссылки, по которой подгружается картинка.</td>\n    </tr>\n    <tr>\n        <td>width, height</td>\n        <td>\n            <code>Number</code>\n        </td>\n        <td>Значения, которые будут переданы в одноименные атрибуты картинки.</td>\n    </tr>\n</table>\n\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "input",
                    "jsdoc": "",
                    "data": {
                        "en": {
                            "name": "input",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/input/0jZ6y8S1ANsxfMm_E1peUdEhyy0/0jZ6y8S1ANsxfMm_E1peUdEhyy0.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/4hhBI_vwtFJlpwXu8DnFh6HdrYY/4hhBI_vwtFJlpwXu8DnFh6HdrYY.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/_rQiPCz_bRgjryQQWFEhXhyJnyM/_rQiPCz_bRgjryQQWFEhXhyJnyM.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/b18rvMU7reGrqw4kb0MSTpvQ3YI/b18rvMU7reGrqw4kb0MSTpvQ3YI.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/CdWLw8cu0kAjbKLZFrp_sw7N67s/CdWLw8cu0kAjbKLZFrp_sw7N67s.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/hwtIQVRUxvCPVxAJgWKBqBRt6Is/hwtIQVRUxvCPVxAJgWKBqBRt6Is.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/JCaTuV74Ua-xND0IW39wBPdvHBI/JCaTuV74Ua-xND0IW39wBPdvHBI.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/m1GvVMb4ZI4DvaKjyQWVNZLyquA/m1GvVMb4ZI4DvaKjyQWVNZLyquA.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/r1ntKHWLCj3QPfaejFd3aVNqDNo/r1ntKHWLCj3QPfaejFd3aVNqDNo.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/SwtjmJjtMXak9KKSsPMLXihNiQI/SwtjmJjtMXak9KKSsPMLXihNiQI.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/TOwrkpCDAmLABnXxE-2IBwxsCXo/TOwrkpCDAmLABnXxE-2IBwxsCXo.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/U1jetXgNoFl9qXtgecJy3MmnnJ0/U1jetXgNoFl9qXtgecJy3MmnnJ0.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/yAehEbulTw29FYJa_ye7ntQkTkU/yAehEbulTw29FYJa_ye7ntQkTkU.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"input\">input</h1>\n<p>The <strong>input</strong> block is intended to create different types of text fields:</p>\n<ul>\n<li>textarea</li>\n<li>password field</li>\n<li>search form</li>\n</ul>\n<p>In MSIE8 block <strong>input</strong> degrades to a native control <code>&lt;input attribute&gt;</code>; a text field is renedered as native text area <code>&lt;textarea attribute&gt;</code>.</p>\n<h2 id=\"available-block-s-attributes\">Available block&#39;s attributes</h2>\n<p>Available block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n    <tr>\n        <th>Attribute</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>String</td>\n        <td>Value to be sent to the server. It is empty by default.</td>\n    </tr>\n    <tr>\n        <td>placeholder</td>\n        <td>String</td>\n        <td>Text to be replaced. Has an empty value by default.</td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>String</td>\n        <td>Unique block modifier. The value is randomly generated by default. Could be specified manually.</td>\n    </tr>\n    <tr>\n        <td>label</td>\n        <td><code>string</code></td>\n        <td>Lable above an input field.</td>\n    </tr>\n</table>\n\n\n<p>Available block&#39;s attributes that could be provided in <code>attrs</code> field in BEMJSON:</p>\n<ul>\n<li>name (<em>common</em>)</li>\n<li>tabindex (<em>common</em>)</li>\n<li>spellcheck (<em>common</em>)</li>\n<li>accesskey (<em>common</em>)</li>\n<li>rows (<code>_textarea</code>)</li>\n<li>cols (<code>_textarea</code>)</li>\n<li>readonly (<code>_textarea</code>)</li>\n<li>wrap (<code>_textarea</code>)</li>\n<li>maxlength (<code>_textarea</code>)</li>\n</ul>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"-_theme-\"><code>_theme</code></h3>\n<p>The block is available in the following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>If the theme is not specified the block obtains default values:</p>\n<ul>\n<li>Input field type: text field</li>\n<li>Width: 100%</li>\n<li>Theme: native representation</li>\n<li>Text area size: <code>cols:10</code>, <code>rows:10</code></li>\n</ul>\n<p>Following example demonstrates this:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    placeholder : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;simple&#39; },\n    placeholder : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39; },\n    placeholder : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_type-\"><code>_type</code></h3>\n<p>The following types of <strong>input</strong> block are available:</p>\n<ul>\n<li><code>_textarea</code></li>\n<li><code>_password</code></li>\n<li><code>_search</code></li>\n</ul>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<table>\n    <tr>\n        <th>Type / Realisation</th>\n        <th>default</th>\n        <th>simple</th>\n        <th>normal</th>\n    </tr>\n    <tr>\n        <td> <code>_textarea</code></td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { type : &#39;textarea&#39; },\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        type : &#39;textarea&#39;\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        type : &#39;textarea&#39;\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td> <code>_password</code></td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    placeholder : &#39;default&#39;,\n    mods : { type : &#39;password&#39; }\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        type : &#39;password&#39;\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        type : &#39;password&#39;\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td> <code>_search</code></td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { type : &#39;search&#39; },\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        type : &#39;search&#39;\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        type : &#39;search&#39;\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"block-s-state\">Block&#39;s state</h3>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If block is disabled all its elements become unavailable for user&#39;s action.</p>\n<p>The <strong>input</strong> block is active by default even it disabled modifier is not specified.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, disabled : true },\n    val : &#39;disabled&#39;\n}\n</code></pre>\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>The input field is focused if a block has a <code>_focused</code> modifier with <code>true</code> vlue.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<pre><code>{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, focused : true },\n    val : &#39;focused&#39;\n}\n</code></pre><h3 id=\"-_has-clear-\"><code>_has-clear</code></h3>\n<p>A <code>clear</code> cross element appears in the input field if a block has a <code>_has-clear</code> modifier with <code>true</code> value.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<table>\n    <tr>\n        <th>default</th>\n        <th>simple</th>\n        <th>normal</th>\n    </tr>\n    <tr>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { &#39;has-clear&#39; : true },\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        &#39;has-clear&#39; : true\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        &#39;has-clear&#39; : true\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<hr>\n<p><strong>NB</strong> Be aware the modifier <code>has-clear</code> is not available for a <code>search field</code> in <em>simple</em> theme.</p>\n<hr>\n<h3 id=\"-_has-label-\"><code>_has-label</code></h3>\n<p>A lable (<code>__label</code> element) above the input field is available if a block has a <code>_has-label</code> modifier with <code>true</code> value.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<table>\n    <tr>\n        <th>default</th>\n        <th>simple</th>\n        <th>normal</th>\n    </tr>\n    <tr>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { &#39;has-clear&#39; : true },\n    label : &#39;Label&#39;,\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        &#39;has-label&#39; : true\n    },\n    label : &#39;Label&#39;,\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        &#39;has-label&#39; : true\n    },\n    label : &#39;Label&#39;,\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<p>The following elements provide visual representation of a <strong>input</strong> block:</p>\n<h3 id=\"__box\">__box</h3>\n<p>A mandatory element.</p>\n<p>An element fot input field forming (native input field is hidden).</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>A button (cross element) intended to clear an input field content.</p>\n<p>The cross element is unavailable if a block has a <code>has-clear</code> modifier with <code>false</code> value.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, &#39;has-clear&#39; : true },\n    label : &#39;label&#39;\n}\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>A mndatory element.</p>\n<p>This element is processed by BEMHTML or BH template engine to a native <code>&lt;input attribute&gt;</code> control.</p>\n<h3 id=\"__label\">__label</h3>\n<p>A lablel above an input field.</p>\n<p>This element provides a lable above an input field. In HTML is rendered as a <code>&lt;label&gt;</code> tag. A lable is linked with an <code>&lt;input&gt;</code> tag by the unique <code>id</code> identifier, that is generated random by default.</p>\n<p>Click the input field to set a <code>focused</code> modifier.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, &#39;has-label&#39; : true },\n    label : &#39;label&#39;\n}\n</code></pre>\n<h2 id=\"block-s-dependencies\">Block&#39;s dependencies</h2>\n<p>An <strong>input</strong> block depends on:</p>\n<ul>\n<li><code>base-control</code>, that provides public API;</li>\n<li><code>i-bem__dom</code> block.</li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "input",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/input/0jZ6y8S1ANsxfMm_E1peUdEhyy0/0jZ6y8S1ANsxfMm_E1peUdEhyy0.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/4hhBI_vwtFJlpwXu8DnFh6HdrYY/4hhBI_vwtFJlpwXu8DnFh6HdrYY.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/_rQiPCz_bRgjryQQWFEhXhyJnyM/_rQiPCz_bRgjryQQWFEhXhyJnyM.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/b18rvMU7reGrqw4kb0MSTpvQ3YI/b18rvMU7reGrqw4kb0MSTpvQ3YI.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/CdWLw8cu0kAjbKLZFrp_sw7N67s/CdWLw8cu0kAjbKLZFrp_sw7N67s.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/hwtIQVRUxvCPVxAJgWKBqBRt6Is/hwtIQVRUxvCPVxAJgWKBqBRt6Is.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/JCaTuV74Ua-xND0IW39wBPdvHBI/JCaTuV74Ua-xND0IW39wBPdvHBI.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/m1GvVMb4ZI4DvaKjyQWVNZLyquA/m1GvVMb4ZI4DvaKjyQWVNZLyquA.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/r1ntKHWLCj3QPfaejFd3aVNqDNo/r1ntKHWLCj3QPfaejFd3aVNqDNo.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/SwtjmJjtMXak9KKSsPMLXihNiQI/SwtjmJjtMXak9KKSsPMLXihNiQI.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/TOwrkpCDAmLABnXxE-2IBwxsCXo/TOwrkpCDAmLABnXxE-2IBwxsCXo.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/U1jetXgNoFl9qXtgecJy3MmnnJ0/U1jetXgNoFl9qXtgecJy3MmnnJ0.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/input/yAehEbulTw29FYJa_ye7ntQkTkU/yAehEbulTw29FYJa_ye7ntQkTkU.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"input\">input</h1>\n<p>Блок <code>input</code> служит для создания различных типов текстовых полей:</p>\n<ul>\n<li>поле ввода (значение по умолчанию);</li>\n<li>текстовая область;</li>\n<li>поле с паролем;</li>\n<li>поисковая форма.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Значение, отправляемое на сервер. По умолчанию пустое.</td>\n    </tr>\n    <tr>\n        <td>placeholder</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Подсказка в поле ввода.</td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Уникальный идентификатор блока. По умолчанию генерируется случайным образом, если явно не задан в BEMJSON.</td>\n    </tr>\n    <tr>\n        <td>label</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Метка над полем ввода.</td>\n    </tr>\n</table>\n\n\n<p>Другие допустимые атрибуты блока могут быть заданы в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    placeholder : &#39;default&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;simple&#39; },\n    placeholder : &#39;simple&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39; },\n    placeholder : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры <code>_size</code></h3>\n<p>Задает размер всем типам текстовых полей. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота<br>строки</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;s&#39; },\n    placeholder : &#39;Small&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39; },\n    placeholder : &#39;Medium&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;l&#39; },\n    placeholder : &#39;Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;xl&#39; },\n    placeholder : &#39;X-Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Типы <code>_type</code></h3>\n<p>Блок представлен следующими типами:</p>\n<ul>\n<li>текстовая область (<code>_textarea</code>)</li>\n<li>поле с паролем (<code>_password</code>)</li>\n<li>поисковая форма (<code>_search</code>)</li>\n</ul>\n<p>Без указания типа поля блок <code>input</code> по умолчанию получает значение <code>&lt;input type=&quot;text&quot;/&gt;</code>.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Реализация</th>\n    </tr>\n    <tr>\n        <td>\n            <code>_textarea</code>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;textarea&#39; },\n    placeholder : &#39;Тексторвая область&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>_password</code>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39;, type : &#39;password&#39; },\n    placeholder : &#39;Поле с паролем&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>_search</code>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;search&#39; },\n    placeholder : &#39;Поисковая форма&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии блока «неактивен» поле ввода и все его элементы становятся недоступными для действий пользователя.</p>\n<p>Если модификатор <code>_disabled</code> не установлен, инпут по умолчанию активен.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    val : &#39;Неактивно&#39;\n}\n</code></pre>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>_focused</code> со значением <code>true</code> поле ввода находится в фокусе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    val : &#39;В фокусе&#39;\n}\n</code></pre>\n<h3 id=\"-_has-clear-\">Очистка содержимого <code>_has-clear</code></h3>\n<p>Модификатор <code>_has-clear</code> в значении <code>_true</code> отображает в инпуте крестик для очистки содержимого (элемент <code>__clear</code>).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, &#39;has-clear&#39; : true },\n    placeholder : &#39;Добавлен крестик для очистки содержимого&#39;\n}\n</code></pre>\n<h3 id=\"-_has-label-\">Метка над полем ввода <code>_has-label</code></h3>\n<p>Модификатор <code>_has-label</code> в значении <code>_true</code> указывает на наличие метки над полем ввода (элемент <code>__label</code>).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, &#39;has-label&#39; : true },\n    label : &#39;Label&#39;,\n    placeholder : &#39;Метка над полем ввода&#39;\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__box\">__box</h3>\n<p>Обязательный элемент.</p>\n<p>Элемент, рисующий поля ввода (поля нативного инпута скрыты).</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Кнопка очистки содержимого инпута («крестик»).</p>\n<p>По умолчанию модификатор <code>_has-label</code> имеет значение <code>_false</code>, при котором крестик не отображается. Для отображения крестика нужно установить модификатор в значение <code>_true</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39;, &#39;has-clear&#39; : true },\n    placeholder : &#39;Добавлен крестик для очистки содержимого&#39;\n}\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>Обязательный элемент.</p>\n<p>BEMHTML- или BH-шаблоном преобразуется в нативный контрол <code>&lt;input&gt;</code>.</p>\n<h3 id=\"__label\">__label</h3>\n<p>Метка над полем ввода.\nЭлемент добавляет метку с тегом <code>&lt;label&gt;</code> над полем ввода. Связь метки с тэгом <code>&lt;input&gt;</code> устанавливается с помощью идентификатора <code>id</code>, который может генерироваться автоматически.\nПри щелчке кнопкой мыши на метку в поле ввода будет установлен фокус.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, &#39;has-label&#39; : true },\n    label : &#39;Метка над полем ввода&#39;\n}\n</code></pre>\n<h2 id=\"-\">Зависимости блока</h2>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "link",
                    "data": {
                        "en": {
                            "name": "link",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/link/chWrNSQqHxfoi-xep8pjJQnF124/chWrNSQqHxfoi-xep8pjJQnF124.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/link/MlN17lxDfpZbuzsh5l2N1VNo16U/MlN17lxDfpZbuzsh5l2N1VNo16U.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/link/rVrcuNJ0PMv5S2Q4KNH4HsM6Zds/rVrcuNJ0PMv5S2Q4KNH4HsM6Zds.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/link/v4bNHfaIobOFWcneUxLQDbb4T9g/v4bNHfaIobOFWcneUxLQDbb4T9g.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/link/Y3yr9bNzwYkA9sSkV8EkqO30JYI/Y3yr9bNzwYkA9sSkV8EkqO30JYI.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "link",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/link/chWrNSQqHxfoi-xep8pjJQnF124/chWrNSQqHxfoi-xep8pjJQnF124.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/link/MlN17lxDfpZbuzsh5l2N1VNo16U/MlN17lxDfpZbuzsh5l2N1VNo16U.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/link/rVrcuNJ0PMv5S2Q4KNH4HsM6Zds/rVrcuNJ0PMv5S2Q4KNH4HsM6Zds.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/link/v4bNHfaIobOFWcneUxLQDbb4T9g/v4bNHfaIobOFWcneUxLQDbb4T9g.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/link/Y3yr9bNzwYkA9sSkV8EkqO30JYI/Y3yr9bNzwYkA9sSkV8EkqO30JYI.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"link\">link</h1>\n<p>Блок <code>link</code> используется для создания различных типов ссылок и предоставляет возможность изменять их состояние, внешний вид и поведение.</p>\n<h2 id=\"-\">Варианты использования ссылок</h2>\n<p>Блок <strong>link</strong> служит для создания следующих типов ссылок:</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Описание</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычная ссылка</td>\n        <td>Применяется для любых ссылок веб-интерфейса. Используется по умолчанию.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;link&#39;,\n    url : &#39; #&#39;,\n    content : &#39;link&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Псевдоссылка</td>\n        <td>Разновидность ссылки, при нажатии по которой в браузере не осуществляется переход. Применяется для вызова сценариев.\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;link&#39;,\n    mods : { pseudo : true, theme: &#39;normal&#39; },\n    content : &#39;pseudo&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h2 id=\"-\">Допустимые параметры блока</h2>\n<p>Допустимые параметры блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td><code>String|BEMJSON</code></td>\n        <td>Адрес ссылки. Если указан, значение <code>url</code> становится атрибутом <code>href</code>. Обязательный параметр для обычной ссылки. Если в качестве значения передан BEMJSON, он будет обработан и вернет строку.</td>\n    </tr>\n    <tr>\n        <td>title</td>\n        <td><code>String</code></td>\n        <td>Текст всплывающей подсказки</td>\n    </tr>\n    <tr>\n        <td>target</td>\n        <td><code>String</code></td>\n        <td>Целевое окно. Обычно атрибут указывается со значением <code>_blank</code>, чтобы открыть адрес ссылки в новом окне.</td>\n    </tr>\n    <tr>\n        <td>tabIndex</td>\n        <td><code>Number</code></td>\n        <td> Индекс, задающий последовательность перехода между ссылками при нажатии на клавишу <code>Tab</code>. Атрибут преобразуется в нативный атрибут <code>tabindex</code>.</td>\n    </tr>\n</table>\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Например:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;link&#39;,\n    url : &#39;#&#39;,\n    content : &#39;link&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;link&#39;,\n    mods : { theme : &#39;simple&#39; },\n    url : &#39;#&#39;,\n    content : &#39;link&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;link&#39;,\n    mods : { theme : &#39;normal&#39; },\n    url : &#39;#&#39;,\n    content : &#39;link&#39;\n}\n</code></pre>\n<h3 id=\"-_pseudo-\">Псевдоссылка <code>_pseudo</code></h3>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;link&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        pseudo : true\n    },\n    title : &#39;pseudo mod are toggled&#39;,\n    content : &#39;link&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью. Нажатие по ней можно выполнить клавишей <code>Enter</code>.</p>\n<pre><code>{\n    block : &#39;link&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        focused : true\n    },\n    url : &#39;#&#39;,\n    content : &#39;_focused&#39;\n}\n</code></pre><h4 id=\"-_disabled-\">Неактивна <code>_disabled</code></h4>\n<p>В состоянии &quot;не активна&quot; ссылка отображается, но недоступна для действий пользователя.</p>\n<p>Для такой ссылки не будет:</p>\n<ul>\n<li>устанавливаться модификатор <code>_focused</code> в момент получения фокуса;</li>\n<li>осуществляться переход, если задан атрибут <code>url</code>;</li>\n<li>генерироваться БЭМ-событие <code>click</code>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;link&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        disabled : true\n    },\n    url : &#39;#&#39;,\n    content : &#39;_disabled&#39;\n}\n</code></pre>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>link</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "menu",
                    "data": {
                        "en": {
                            "name": "menu",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/menu/8mTA6MmyQr8VqdzJxhkrwh1ypW4/8mTA6MmyQr8VqdzJxhkrwh1ypW4.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu/j09oi8qGORMEkQNDKOmalqZBM1A/j09oi8qGORMEkQNDKOmalqZBM1A.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu/mNU2Ucfjxab1clvoW45IQTWsm30/mNU2Ucfjxab1clvoW45IQTWsm30.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu/V9ZPDhB9nl8kg2So6etTZN9GhGM/V9ZPDhB9nl8kg2So6etTZN9GhGM.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu/vOj7Zu3fBIVl7z06MI97PrXpqWI/vOj7Zu3fBIVl7z06MI97PrXpqWI.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu/wCjQ3Ywp-Sr5jbo9tVEXSlFoKxU/wCjQ3Ywp-Sr5jbo9tVEXSlFoKxU.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/00ejmLqt61w5ksAsfBl7KgE4dBE/00ejmLqt61w5ksAsfBl7KgE4dBE.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/47lHiiyDspaBs5AiC22G42Y-N_o/47lHiiyDspaBs5AiC22G42Y-N_o.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/Sgw4iIN4STar-QE05xyBmgntftw/Sgw4iIN4STar-QE05xyBmgntftw.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/sURVY49aNm3TBC1XVeOG1Q5_vi8/sURVY49aNm3TBC1XVeOG1Q5_vi8.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/T77G-B0x1-Z9ZaPqpW_TAskNFI8/T77G-B0x1-Z9ZaPqpW_TAskNFI8.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "menu",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/menu/8mTA6MmyQr8VqdzJxhkrwh1ypW4/8mTA6MmyQr8VqdzJxhkrwh1ypW4.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu/j09oi8qGORMEkQNDKOmalqZBM1A/j09oi8qGORMEkQNDKOmalqZBM1A.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu/mNU2Ucfjxab1clvoW45IQTWsm30/mNU2Ucfjxab1clvoW45IQTWsm30.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu/V9ZPDhB9nl8kg2So6etTZN9GhGM/V9ZPDhB9nl8kg2So6etTZN9GhGM.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu/vOj7Zu3fBIVl7z06MI97PrXpqWI/vOj7Zu3fBIVl7z06MI97PrXpqWI.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu/wCjQ3Ywp-Sr5jbo9tVEXSlFoKxU/wCjQ3Ywp-Sr5jbo9tVEXSlFoKxU.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/00ejmLqt61w5ksAsfBl7KgE4dBE/00ejmLqt61w5ksAsfBl7KgE4dBE.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/47lHiiyDspaBs5AiC22G42Y-N_o/47lHiiyDspaBs5AiC22G42Y-N_o.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/Sgw4iIN4STar-QE05xyBmgntftw/Sgw4iIN4STar-QE05xyBmgntftw.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/sURVY49aNm3TBC1XVeOG1Q5_vi8/sURVY49aNm3TBC1XVeOG1Q5_vi8.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/T77G-B0x1-Z9ZaPqpW_TAskNFI8/T77G-B0x1-Z9ZaPqpW_TAskNFI8.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"menu\">menu</h1>\n<p>Блок <code>menu</code> используется для создания различных типов меню и селектов.</p>\n<p>В результате BEMHTML-преобразований на странице блок становится HTML-элементом с тегом <code>&lt;div&gt;</code> и свойством <code>role=&quot;menu&quot;</code>. HTML-элементом содержит набор переключателей – пунктов меню (блок <code>menu-item</code>).</p>\n<p>Он предоставляет возможность изменять размер и внешний вид блоков меню, управлять поведением вложенных блоков – пунктов меню или селекта.</p>\n<h2 id=\"-\">Варианты использования меню</h2>\n<p>Блок <code>menu</code> служит для создания различных типов меню:</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Описание</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Меню-переключатель</td>\n        <td>Применяется для создания меню или селектов, позволяющих только одиночный выбор.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;, \n        select : &#39;radio&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Селект с множественным выбором (<code>_select_check</code>)</td>\n        <td>При щелчке мышью по пункту меню его состояние меняется на противоположное. Если пункт был активен – он деактивируется, и наоборот.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;,\n        select : &#39;check&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n<tr>\n        <td>Простой список (без модификатора <code>_select</code>)</td>\n        <td>При щелчке мышью по пункту меню его состояние не меняется. Модификатор <code>_cheked</code> не устанавливается.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;,\n        select : &#39;check&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr><br></table>\n\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { select : &#39;check&#39; },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { theme : &#39;simple&#39;, select : &#39;check&#39; },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { theme : &#39;normal&#39;, select : &#39;check&#39;, size : &#39;xl&#39; },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры меню <code>_size</code></h3>\n<p>Задает размер всем типам меню. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер/Параметры</th>\n        <th>Размер шрифта</th>\n        <th>Высота строки <code>line-heigh</code></th>\n        <th>Левый отступ <code>padding-left</code></th>\n        <th>Отступ <code>padding</code></th>\n        <th>Размер &quot;галочки&quot; для темы normal</code></th>\n    </tr>\n    <tr>\n        <td>s</td>\n        <td>13px</td>\n        <td>24px</td>\n        <td>30px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        select : &#39;check&#39;, \n        size : &#39;s&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>m</td>\n        <td>13px</td>\n        <td>24px</td>\n        <td>30px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        select : &#39;check&#39;, \n        size : &#39;m&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>l</td>\n        <td>15px</td>\n        <td>28px</td>\n        <td>34px</td>\n        <td>15px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        select : &#39;check&#39;, \n        size : &#39;l&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>xl</td>\n        <td>15px</td>\n        <td>32px</td>\n        <td>40px</td>\n        <td>15px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        select : &#39;check&#39;, \n        size : &#39;xl&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-_select-\">Способ выбора пунктов <code>_select</code></h3>\n<p>Модификатор <code>_select</code> управляет поведением пунктов меню при щелчке по ним мышью, например, возможностью множественного выбора пунктов меню.</p>\n<p>Доступны следующие значения модификатора:</p>\n<ul>\n<li><code>check</code> – селект. Пункт, по которому был произведен щелчек мышью, изменит состояние на противоположное и будет менять состояние при повторных щелчках. Доступна возможность множественного выбора пунктов;</li>\n<li><code>radio</code> – переключатель. При щелчке мышью будет производиться переключение активных пунктов меню. При повторном щелчке пункт, по которому он был произведен, останется <strong>активным</strong>. Множественный выбор недоступен;</li>\n<li><code>radio-check</code> – переключатель. При щелчке мышью будет производиться переключение активных пунктов меню. При повторном щелчке пункт, по которому он был произведен, станет <strong>неактивным</strong>. Множественный выбор недоступен.</li>\n</ul>\n<p>Реализован во всех темах блока.</p>\n<table>\n    <tr>\n        <th>Выбор пунктов</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Только один (<code>_select_radio</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        select : &#39;radio&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            mods : { checked : true },\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Множественный выбор или ни одного (<code>_select_check</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        select : &#39;check&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            mods : { checked : true },\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Один или ни одного (<code>_select_radio-check</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        select : &#39;radio-check&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            mods : { checked : true },\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        select : &#39;check&#39;, \n        size : &#39;xl&#39;,\n        focused : true \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__group\">__group</h3>\n<p>Элемент <code>__group</code> служит для группировки пунктов меню. Пункты, которые нужно сгруппировать, помещаются в поле <code>content</code> элемента. Группы визуально отделяются серой чертой.</p>\n<p>Например:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39;, select : &#39;radio&#39;, focused : true  },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;New&#39;\n        },\n        {\n            elem : &#39;group&#39;,\n            content : [\n                {\n                    block : &#39;menu-item&#39;,\n                    mods : { checked : true },\n                    val : 2,\n                    content : &#39;Open&#39;\n                },\n                {\n                    block : &#39;menu-item&#39;,\n                    val : 3,\n                    content : &#39;Open Recent&#39;\n                }\n            ]\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 4,\n            content : &#39;Open Not so Recent&#39;\n        }\n    ]\n}\n</code></pre>\n<h3 id=\"__group-title\">__group-title</h3>\n<p>Элемент позволяет задать заголовок для группы пунктов меню, создаваемой с помощью элемента <code>__group</code>.</p>\n<p>Например:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;xl&#39;, \n        select : &#39;radio&#39;, \n        focused : true  \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;New&#39;\n        },\n        {\n            elem : &#39;group&#39;,\n            title : &#39;Cool title&#39;,\n            content : [\n                {\n                    block : &#39;menu-item&#39;,\n                    mods : { checked : true },\n                    val : 2,\n                    content : &#39;Open&#39;\n                },\n                {\n                    block : &#39;menu-item&#39;,\n                    val : 3,\n                    content : &#39;Open Recent&#39;\n                }\n            ]\n        }\n    ]\n}\n</code></pre>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>menu</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>menu-item</code></li>\n<li><code>dom</code></li>\n<li><code>keyboard</code></li>\n<li><code>base-control</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n\n<h1 id=\"menu-item\">menu-item</h1>\n<p>Блок <code>menu-item</code> служит для создания пунктов меню или селекта. Используется внутри блока <code>menu</code>. Блок <code>menu-item</code> предоставляет возможность изменять состояние, содержимое и порядок отображения пунктов меню.</p>\n<p>Блок <code>menu-item</code> в результате BEMHTML-преобразований на странице становится HTML-элементом с тегом <code>&lt;div&gt;</code> со свойством <code>role=&quot;menuitem&quot;</code>.</p>\n<h2 id=\"-\">Варианты использования пунктов меню</h2>\n<p>Блок <code>menu-item</code> служит для создания различных типов пунктов меню:</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Описание</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Переключатель</td>\n        <td>Применяется для любых выпадающих списков, табов, пунктов меню и селектов и т.п. Используется по умолчанию.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    val : 1,\n    content : &#39;Selector value&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Ссылка</td>\n        <td>Элемент меню со ссылкой. Блок <code>link</code> помещается в поле <code>content</code> BEMJSON-декларации блока. Так же требуется установить блоку модификатор <code>type</code> в значение <code>link</code>.\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    mods : { type : &#39;link&#39; },\n    val : 2,\n    content : {\n        block : &#39;link&#39;,\n        url : &#39;#&#39;,\n        content : &#39;Link 1&#39;\n    }\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td><code>String|Number</code></td>\n        <td>Значение, возвращаемое пунктом меню, если он выбран.</td>\n    </tr>\n</table>\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_type-\">Типы блока <code>_type</code></h3>\n<p>Модификатор <code>_type</code> в значении <code>_link</code> позволяет создавать пункт меню-ссылку. Блок <code>link</code> при этом помещается в поле <code>content</code> BEMJSON-декларации блока. Если модификатор <code>_type_link</code> не установлен, вложенная ссылка будет доступна для действий пользователя при установленном модификаторе <code>_disabled</code>.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        type : &#39;link&#39; \n    },\n    content : {\n        block : &#39;link&#39;,\n        url : &#39;#&#39;,\n        content : &#39;Link 1&#39;\n    }\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии &quot;неактивен&quot; пункт меню отображается, но недоступен для действий пользователя.  </p>\n<p>Такой пункт меню не изменяет состояние при щелчке мышью. Если для блока установлен модификатор <code>_type_link</code>, переход по ссылке не осуществляется. </p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        disabled : true \n    },\n    content : &#39;_disabled&#39;\n}\n</code></pre>\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие &quot;наведение курсором&quot; на пункт меню.</p>\n<p>Реализован во всех темах блока.</p>\n<p>Автоматически выставляется при наведении указателем мыши на пункт меню.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        hovered : true \n    },\n    content : &#39;_hovered&#39;\n}\n</code></pre>\n<h4 id=\"-_checked-\">Выбранный пункт меню <code>_checked</code></h4>\n<p>Модификатор задает выбранный пункт меню.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    content : &#39;_checked&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        checked : true \n    }\n}\n</code></pre>\n<p>В блоке <code>menu</code> модификатор <code>_checked</code> устанавливается для пункта при щелчке мышью:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;,\n        select : &#39;check&#39;\n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>menu-item</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n</ul>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "menu-item",
                    "data": {
                        "en": {
                            "name": "menu-item",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/menu-item/00ejmLqt61w5ksAsfBl7KgE4dBE/00ejmLqt61w5ksAsfBl7KgE4dBE.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/47lHiiyDspaBs5AiC22G42Y-N_o/47lHiiyDspaBs5AiC22G42Y-N_o.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/Sgw4iIN4STar-QE05xyBmgntftw/Sgw4iIN4STar-QE05xyBmgntftw.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/sURVY49aNm3TBC1XVeOG1Q5_vi8/sURVY49aNm3TBC1XVeOG1Q5_vi8.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/T77G-B0x1-Z9ZaPqpW_TAskNFI8/T77G-B0x1-Z9ZaPqpW_TAskNFI8.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": ""
                                }
                            ]
                        },
                        "ru": {
                            "name": "menu-item",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/menu-item/00ejmLqt61w5ksAsfBl7KgE4dBE/00ejmLqt61w5ksAsfBl7KgE4dBE.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/47lHiiyDspaBs5AiC22G42Y-N_o/47lHiiyDspaBs5AiC22G42Y-N_o.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/Sgw4iIN4STar-QE05xyBmgntftw/Sgw4iIN4STar-QE05xyBmgntftw.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/sURVY49aNm3TBC1XVeOG1Q5_vi8/sURVY49aNm3TBC1XVeOG1Q5_vi8.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/menu-item/T77G-B0x1-Z9ZaPqpW_TAskNFI8/T77G-B0x1-Z9ZaPqpW_TAskNFI8.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"menu-item\">menu-item</h1>\n<p>Блок <code>menu-item</code> служит для создания пунктов меню или селекта. Используется внутри блока <code>menu</code>. Блок <code>menu-item</code> предоставляет возможность изменять состояние, содержимое и порядок отображения пунктов меню.</p>\n<p>Блок <code>menu-item</code> в результате BEMHTML-преобразований на странице становится HTML-элементом с тегом <code>&lt;div&gt;</code> со свойством <code>role=&quot;menuitem&quot;</code>.</p>\n<h2 id=\"-\">Варианты использования пунктов меню</h2>\n<p>Блок <code>menu-item</code> служит для создания различных типов пунктов меню:</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Описание</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Переключатель</td>\n        <td>Применяется для любых выпадающих списков, табов, пунктов меню и селектов и т.п. Используется по умолчанию.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    val : 1,\n    content : &#39;Selector value&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Ссылка</td>\n        <td>Элемент меню со ссылкой. Блок <code>link</code> помещается в поле <code>content</code> BEMJSON-декларации блока. Так же требуется установить блоку модификатор <code>type</code> в значение <code>link</code>.\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    mods : { type : &#39;link&#39; },\n    val : 2,\n    content : {\n        block : &#39;link&#39;,\n        url : &#39;#&#39;,\n        content : &#39;Link 1&#39;\n    }\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td><code>String|Number</code></td>\n        <td>Значение, возвращаемое пунктом меню, если он выбран.</td>\n    </tr>\n</table>\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_type-\">Типы блока <code>_type</code></h3>\n<p>Модификатор <code>_type</code> в значении <code>_link</code> позволяет создавать пункт меню-ссылку. Блок <code>link</code> при этом помещается в поле <code>content</code> BEMJSON-декларации блока. Если модификатор <code>_type_link</code> не установлен, вложенная ссылка будет доступна для действий пользователя при установленном модификаторе <code>_disabled</code>.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        type : &#39;link&#39; \n    },\n    content : {\n        block : &#39;link&#39;,\n        url : &#39;#&#39;,\n        content : &#39;Link 1&#39;\n    }\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии &quot;неактивен&quot; пункт меню отображается, но недоступен для действий пользователя.  </p>\n<p>Такой пункт меню не изменяет состояние при щелчке мышью. Если для блока установлен модификатор <code>_type_link</code>, переход по ссылке не осуществляется. </p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        disabled : true \n    },\n    content : &#39;_disabled&#39;\n}\n</code></pre>\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие &quot;наведение курсором&quot; на пункт меню.</p>\n<p>Реализован во всех темах блока.</p>\n<p>Автоматически выставляется при наведении указателем мыши на пункт меню.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        hovered : true \n    },\n    content : &#39;_hovered&#39;\n}\n</code></pre>\n<h4 id=\"-_checked-\">Выбранный пункт меню <code>_checked</code></h4>\n<p>Модификатор задает выбранный пункт меню.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    content : &#39;_checked&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        checked : true \n    }\n}\n</code></pre>\n<p>В блоке <code>menu</code> модификатор <code>_checked</code> устанавливается для пункта при щелчке мышью:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;,\n        select : &#39;check&#39;\n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>menu-item</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n</ul>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "popup",
                    "data": {
                        "en": {
                            "name": "popup",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/popup/7PzT7oA6awlAKgFGXccAdhfz0n0/7PzT7oA6awlAKgFGXccAdhfz0n0.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/popup/L1MMDUGHLM4djlDaj5mhiKHvDH8/L1MMDUGHLM4djlDaj5mhiKHvDH8.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/popup/M1T2dIuSVeBoluZEMgCmA90Stgc/M1T2dIuSVeBoluZEMgCmA90Stgc.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/popup/m6WdfiXJP4RkxnBzEuzumr9C4w0/m6WdfiXJP4RkxnBzEuzumr9C4w0.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/popup/ROJZHxrl71CFbWiWU5Ry_Q0Jbhw/ROJZHxrl71CFbWiWU5Ry_Q0Jbhw.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/popup/Uhdsvnf2MsxKNrQy7w6uLKTxdek/Uhdsvnf2MsxKNrQy7w6uLKTxdek.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/popup/VE0JWgs-I2gVU8suKC3_eTK29EE/VE0JWgs-I2gVU8suKC3_eTK29EE.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": ""
                                }
                            ]
                        },
                        "ru": {
                            "name": "popup",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/popup/7PzT7oA6awlAKgFGXccAdhfz0n0/7PzT7oA6awlAKgFGXccAdhfz0n0.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/popup/L1MMDUGHLM4djlDaj5mhiKHvDH8/L1MMDUGHLM4djlDaj5mhiKHvDH8.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/popup/M1T2dIuSVeBoluZEMgCmA90Stgc/M1T2dIuSVeBoluZEMgCmA90Stgc.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/popup/m6WdfiXJP4RkxnBzEuzumr9C4w0/m6WdfiXJP4RkxnBzEuzumr9C4w0.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/popup/ROJZHxrl71CFbWiWU5Ry_Q0Jbhw/ROJZHxrl71CFbWiWU5Ry_Q0Jbhw.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/popup/Uhdsvnf2MsxKNrQy7w6uLKTxdek/Uhdsvnf2MsxKNrQy7w6uLKTxdek.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/popup/VE0JWgs-I2gVU8suKC3_eTK29EE/VE0JWgs-I2gVU8suKC3_eTK29EE.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"popup\">popup</h1>\n<p>Блок <code>popup</code> используется для создания выпадающих элементов и позволяет изменять их состояние, поведение и внешний вид. Блок отображается поверх остальных элементов страницы.</p>\n<p>Попап может быть вызван различными элементами страницы, например, кнопками или псевдоссылками.</p>\n<p>В момент первого показа (установка модификатора <code>_visible</code>) DOM-элемент блока создается в конце <code>&lt;body&gt;</code>.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    content : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;simple&#39; },\n    content : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39; },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_visible-\">Видимый <code>_visible</code></h3>\n<p>Модификатор, отвечающий за видимость блока. При значении модификатора <code>false</code> блок не отображается.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39;, visible : true },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_direction-\">Расположение относительно родителя <code>_direction</code></h3>\n<p>Модификатор управляет положением попапа на странице, относительно вызвавшего его блока. Расположение блока определяется автоматически, исходя из массива допустимых расположений и положения родителя на странице.</p>\n<p>Выбранное расположение влияет на направление анимации раскрытия.</p>\n<p>По умолчанию используется следующий массив допустимых расположений:</p>\n<table>\n    <tr>\n        <th> Направление раскрытия </td>\n        <th> Индекс в массиве </td>\n    </tr>\n        <td> bottom-left </td>\n        <td> 0 </td>\n    </tr>\n    <tr>\n        <td> bottom-center </td>\n       <td> 1 </td>\n   </tr>\n    <tr>\n        <td> bottom-right</td>\n        <td> 2 </td>\n    </tr>\n    <tr>\n        <td> top-left </td>\n        <td> 3 </td>\n    </tr>\n    <tr>\n        <td> top-center </td>\n        <td> 4 </td>\n    </tr>\n    <tr>\n        <td> top-right </td>\n        <td> 5 </td>\n    </tr>\n    <tr>\n        <td> right-top </td>\n        <td> 6 </td>\n    </tr>\n    <tr>\n        <td> right-center </td>\n        <td> 7 </td>\n    </tr>\n    <tr>\n        <td> right-bottom </td>\n        <td> 8 </td>\n    </tr>\n    <tr>\n        <td> left-top </td>\n        <td> 9 </td>\n    </tr>\n    <tr>\n        <td> left-center </td>\n        <td> 10 </td>\n    </tr>\n    <tr>\n        <td> left-bottom </td>\n        <td> 11 </td>\n    </tr>\n</table>\n\n<p>Чтобы управлять расположением попапа, можно ограничить массив расположений, оставив только требуемые. Пользовательский массив нужно передать в качестве JS-параметра с ключом <code>directions</code>. При этом, из значений массива будет выбрано наиболее подходящее, исходя из положения родителя на странице.</p>\n<p>Например, если требуется, чтобы попап раскрывался над родителем:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { autoclosable : true, theme: &#39;simple&#39; },\n    js : { directions : [&#39;top-left&#39;, &#39;top-center&#39;, &#39;top-right&#39;] },\n    content : &#39;Hello, world!&#39;\n}\n</code></pre>\n<p>Или разместить попап справа по центру:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { autoclosable : true, theme: &#39;simple&#39; },\n    js : { directions : [&#39;right-center&#39;] },\n    content : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-_autoclosable-\">Автоматическое скрытие <code>_autoclosable</code></h3>\n<p>Модификатор отвечает за автоматическое скрытие попапа при клике вне блока. При установке модификатора <code>_autoclosable</code> в значении <code>_true</code> блок будет скрываться при щелчке за его пределами (будет снят модификатор <code>_visible</code>).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39;, autoclosable : true },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h2 id=\"-popup-\">Взаимосвязи между popup&#39;ами</h2>\n<p>Так как попап выносит себя в конец <code>&lt;body&gt;</code>, чтобы перекрывать другие элементы страницы, возникает необходимость в построении взаимосвязей. Блок умеет выстраивать связи Parent → [ Child, Child, ... ]. Для этого он выполняет проверку, вложен ли блок, вызывающий попап в другой <code>popup</code>. Потомки знают о наличии родителя.\nЕсли бы этих взаимосвязей не было, то родительский попап (при наличии модификатора <code>autoclosable</code> со значением <code>true</code>) закрылся бы при клике внутри дочернего.</p>\n<p>Другими словами, модификатор <code>autoclosable</code> со значением <code>true</code> означает, что попап закроется сам и закроет свои дочерние блоки при клике за пределами его самого и дочерних попапов.</p>\n<p>Дочерние блоки popup можно рассматривать в виде цепочки 1 → 2 → 3 → 4. При клике на 2-ом попапе – закрываются 3, 4. При клике в 1 – закрываются 2, 3, 4. При клике за пределами любого попапа из цепочки – закроются все.</p>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>popup</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n<li><code>objects</code></li>\n<li><code>functions__throttle</code></li>\n<li><code>keyboard</code></li>\n<li><code>ua</code></li>\n<li><code>jquery__event_pointer</code></li>\n</ul>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "radio",
                    "data": {
                        "en": {
                            "name": "radio",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/radio/L98T9NertqtVCJpvDLdlKg6huWI/L98T9NertqtVCJpvDLdlKg6huWI.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio/pPPjX0UcGCQBYmUNCpE27JADBCU/pPPjX0UcGCQBYmUNCpE27JADBCU.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio/RBPWsSDN_yrB6HXtmtrnXB3WSMY/RBPWsSDN_yrB6HXtmtrnXB3WSMY.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio/TLM9QTv-Pjlfq-MNpduxyTgw0cg/TLM9QTv-Pjlfq-MNpduxyTgw0cg.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio/wEYcA7ioT134yNzBSljZyhtiyg8/wEYcA7ioT134yNzBSljZyhtiyg8.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio/xr-zTTUYS3DD_e4xJV6Yn3a3BPI/xr-zTTUYS3DD_e4xJV6Yn3a3BPI.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/3eOE97EmaqvVB-6XycKG7cpGY5Y/3eOE97EmaqvVB-6XycKG7cpGY5Y.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/3iTePRGPbj1_dKvtQGd2bMai-Ac/3iTePRGPbj1_dKvtQGd2bMai-Ac.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/7DyHwAbpYHpT5TcturqqL57OMbA/7DyHwAbpYHpT5TcturqqL57OMbA.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/8YPfPGsfRbco7RPs63oF47Bj5d8/8YPfPGsfRbco7RPs63oF47Bj5d8.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/z74-X9bjA8-9fMUlFI8AH9R8Dfo/z74-X9bjA8-9fMUlFI8AH9R8Dfo.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "radio",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/radio/L98T9NertqtVCJpvDLdlKg6huWI/L98T9NertqtVCJpvDLdlKg6huWI.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio/pPPjX0UcGCQBYmUNCpE27JADBCU/pPPjX0UcGCQBYmUNCpE27JADBCU.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio/RBPWsSDN_yrB6HXtmtrnXB3WSMY/RBPWsSDN_yrB6HXtmtrnXB3WSMY.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio/TLM9QTv-Pjlfq-MNpduxyTgw0cg/TLM9QTv-Pjlfq-MNpduxyTgw0cg.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio/wEYcA7ioT134yNzBSljZyhtiyg8/wEYcA7ioT134yNzBSljZyhtiyg8.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio/xr-zTTUYS3DD_e4xJV6Yn3a3BPI/xr-zTTUYS3DD_e4xJV6Yn3a3BPI.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/3eOE97EmaqvVB-6XycKG7cpGY5Y/3eOE97EmaqvVB-6XycKG7cpGY5Y.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/3iTePRGPbj1_dKvtQGd2bMai-Ac/3iTePRGPbj1_dKvtQGd2bMai-Ac.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/7DyHwAbpYHpT5TcturqqL57OMbA/7DyHwAbpYHpT5TcturqqL57OMbA.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/8YPfPGsfRbco7RPs63oF47Bj5d8/8YPfPGsfRbco7RPs63oF47Bj5d8.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/z74-X9bjA8-9fMUlFI8AH9R8Dfo/z74-X9bjA8-9fMUlFI8AH9R8Dfo.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"radio\">radio</h1>\n<p>Блок <code>radio</code> – «радиопереключатель», «радиокнопка». Используется для создания одиночных радиобоксов.</p>\n<p>В реализации блока используется функциональность нативного контрола <code>input</code> с атрибутом <code>type=&quot;radio&quot;</code> – <code>&lt;input name=&quot;name&quot; type=&quot;radio&quot;&gt;</code>, который скрывается при использовании модификатора <code>_theme</code>.</p>\n<p>Блок <code>radio</code> в результате BEMHTML-преобразований на странице отображается как HTML-тег <code>&lt;label&gt;</code> – контейнер, содержащий:</p>\n<ul>\n<li>элемент <code>radio__box</code>, содержащий скрытый контрол <code>input</code> (элемент <code>__control</code>);</li>\n<li>подпись к радиокнопке, если задан BEMJSON-параметр <code>text</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON-блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td><code>name</code></td>\n        <td><code>String|Number</code></td>\n        <td>Имя радиокнопки. Преобразуется в HTML-атрибут <code>name</code> вложенного блока <code>input</code>.</td>\n    </tr>\n    <tr>\n        <td><code>text</code></td>\n        <td><code>String|Number</code></td>\n        <td>Подпись, отображаемая для радиокнопки.</td>\n    </tr>\n    <tr>\n        <td><code>val</code></td>\n        <td><code>String|Number</code></td>\n        <td>Значение, возвращаемое контролом радиопереключателя <code>radio__control</code>, если выбрана текущая радиокнопка. Преобразуется в HTML-атрибут <code>value</code> вложенного блока <code>input</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    name : &#39;radio-simple&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;simple&#39; },\n    name : &#39;radio-simple&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры радиопереключателя <code>_size</code></h3>\n<p>Задает размер всем типам радиопереключателей. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>В зависимости от значения модификатора <code>_type</code>, доступны следующие размеры реализации блока:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Обычный радиопереключатель</th>\n        <th>Кнопочный радиопереключатель (<code>_type_button</code>)</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>–</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>–</td>\n        <td>+</td>\n</table>\n\n\n<h3 id=\"-_type-\">Тип радиопереключателя <code>_type</code></h3>\n<p>Модификатор <code>_type</code> со значением <code>_button</code> используется для создания кнопочного радиопереключателя – кнопки (блок <code>button</code>) с установленным модификатором <code>_togglable_radio</code>.</p>\n<p>При этом к блоку <code>button</code> примешивается блок <code>radio</code>, а контентом кнопки становится <code>radio__control</code>.</p>\n<p>Кроме того, при установленном модификаторе <code>_type_button</code> для блока задается HTML-атрибут <code>role=&quot;button&quot;</code>.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Кнопочный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        type : &#39;button&#39;\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-_disabled-\">Неактивен <code>_disabled</code></h3>\n<p>В состоянии «неактивен» радиопереключатель отображается, но недоступен для действий пользователя.</p>\n<p>Такой радиопереключатель не будет получать фокус (модификатор <code>_focused</code>).</p>\n<p>При установке модификатора <code>_disabled</code> для радиопереключателя не будут:</p>\n<ul>\n<li>устанавливаться модификаторы состояния <code>_hovered</code>, <code>_pressed</code> и <code>_focused</code>;</li>\n<li>изменяться значение модификатора <code>_checked</code>.</li>\n</ul>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, disabled : true },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        focused : true\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h4 id=\"-_checked-\">Выбран <code>_checked</code></h4>\n<p>Модификатор <code>_checked</code> указывает на то, что радиопереключатель выбран (отмечен).</p>\n<p>Модификатор устанавливается по:</p>\n<ul>\n<li>щелчку мыши по блоку (при повторных щелчках модификатор сохраняется);</li>\n<li>нажатию клавиш <code>Enter</code> или <code>Space</code> (возможность использования клавиши <code>Enter</code> зависит от браузера), если радиопереключатель находится в фокусе (модификатор <code>_focused</code>);</li>\n<li>нажатию клавиш стрелок, если фокус установлен на соседний радиопереключатель в радиогруппе или в блоке, содержащем несколько блоков <code>radio</code>.</li>\n</ul>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, checked : true },\n    name : &#39;radio-norma&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h4 id=\"-_type_button-\">Состояния, доступные с модификатором <code>_type_button</code></h4>\n<p>При установленном модификаторе <code>_type_button</code> к блоку <code>button</code> примешивается блок <code>radio</code>. Как следствие, для блока с модификатором <code>_type_button</code> доступны состояния блока <code>button</code>:</p>\n<ul>\n<li><code>_hovered</code> – под курсором;</li>\n<li><code>_pressed</code> – кнопка нажата.</li>\n</ul>\n<h2 id=\"-\">Элементы</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>__box</code> используется в стандартной реализации блока как контейнер, содержащий контрол радиокнопки (элемент <code>__control</code>). В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;span&gt;</code>.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>Элемент <code>__control</code> – контрол радиокнопки. В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;input&gt;</code> с атрибутом <code>type=&quot;radio&quot;</code>. По умолчанию элемент скрыт. В блоке используется только его функциональность.</p>\n<h2 id=\"-\">Зависимости</h2>\n<p>Блок <code>radio</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>jquery__event</code></li>\n<li><code>__box</code></li>\n<li><code>__control</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "radio-group",
                    "data": {
                        "en": {
                            "name": "radio-group",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/radio-group/3eOE97EmaqvVB-6XycKG7cpGY5Y/3eOE97EmaqvVB-6XycKG7cpGY5Y.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/3iTePRGPbj1_dKvtQGd2bMai-Ac/3iTePRGPbj1_dKvtQGd2bMai-Ac.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/7DyHwAbpYHpT5TcturqqL57OMbA/7DyHwAbpYHpT5TcturqqL57OMbA.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/8YPfPGsfRbco7RPs63oF47Bj5d8/8YPfPGsfRbco7RPs63oF47Bj5d8.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/z74-X9bjA8-9fMUlFI8AH9R8Dfo/z74-X9bjA8-9fMUlFI8AH9R8Dfo.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "radio-group",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/radio-group/3eOE97EmaqvVB-6XycKG7cpGY5Y/3eOE97EmaqvVB-6XycKG7cpGY5Y.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/3iTePRGPbj1_dKvtQGd2bMai-Ac/3iTePRGPbj1_dKvtQGd2bMai-Ac.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/7DyHwAbpYHpT5TcturqqL57OMbA/7DyHwAbpYHpT5TcturqqL57OMbA.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/8YPfPGsfRbco7RPs63oF47Bj5d8/8YPfPGsfRbco7RPs63oF47Bj5d8.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/radio-group/z74-X9bjA8-9fMUlFI8AH9R8Dfo/z74-X9bjA8-9fMUlFI8AH9R8Dfo.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"radio-group\">radio-group</h1>\n<p>Блок <code>radio-group</code> – «радиогруппа», состоящая из набора зависимых переключателей «радиокнопок» (блоков <code>radio</code>). Радиогруппа используется для выбора единственного варианта из списка. </p>\n<p>Блок <code>radio-group</code> в результате BEMHTML-преобразований на странице становится HTML-элементом с тегом <code>&lt;span&gt;</code> – контейнером, содержащим группу переключателей (радиокнопок).</p>\n<h2 id=\"-\">Допустимые параметры блока</h2>\n<p>Допустимые параметры блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td><code>String</code></td>\n        <td>Имя радиогруппы. Преобразуется в HTML-атрибут <code>name</code> вложенного блока <code>input</code>.</td>\n    </tr>\n    <tr>\n        <td>options</td>\n        <td><code>Array</code></td>\n        <td>Массив хешей. Каждый хеш соответствует одному переключателю и содержит набор его параметров. </td>\n    </tr><br></table>\n\n<p>Среди параметров, передаваемых в атрибуте <code>option</code> для переключателя, обязательными являются:</p>\n<ul>\n<li><code>val</code> (<code>String</code> | <code>Number</code>) – значение, возвращаемое выбранным переключателем (элементом <code>radio__control</code>);</li>\n<li><code>text</code> (<code>String</code>) – подпись, отображаемая для текущего переключателя. </li>\n</ul>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<ul>\n<li>simple   </li>\n<li>normal  </li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером. </p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio-group&#39;,\n    name : &#39;radio-default&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio-group&#39;,\n    mods : { theme : &#39;simple&#39; },\n    name : &#39;radio-simple&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio-group&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры переключателей группы <code>_size</code></h3>\n<p>Задает размер переключателей для всех типов радиогрупп. Обязательный модификатор. </p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>В зависимости от значения модификатора <code>_type</code>, доступны следующие размеры реализации блока:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Обычная радиогруппа</th>\n        <th>Кнопочная радиогруппа (<code>_type_button</code>)</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>–</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>–</td>\n        <td>+</td>\n</table>\n\n\n<p>Размеры, на примере темы <em>normal</em> с модификатором <code>_type_button</code>:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;s&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;radio-S&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;radio-M&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;radio-L&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;xl&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;radio-XL&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Тип радиогруппы <code>_type</code></h3>\n<p>Модификатор <code>_type</code> может иметь следующие значения:</p>\n<ul>\n<li><code>button</code>. Используется для создания кнопочной радиогруппы – блока кнопок-переключателей;</li>\n<li><code>line</code>. Используется для создания радиогруппы с выравниванием в строку. После каждого переключателя группы, кроме последнего, автоматически добавляется отступ справа. Размер отступа зависит от значения модификатора <code>_size</code>. Реализован только в теме <em>normal</em>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычная радиогруппа</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Кнопочная радиогруппа</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;radio-button&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Строчная радиогруппа (<code>_type_line</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;line&#39; \n    },\n    name : &#39;radio-line&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr><br></table>\n\n\n<h3 id=\"-_disabled-\">Неактивна <code>_disabled</code></h3>\n<p>В состоянии &quot;неактивна&quot; радиогруппа отображается, но недоступна для действий пользователя.  </p>\n<p>Такая радиогруппа не будет получать фокус (модификатор <code>_focused</code>).</p>\n<p>При установке модификатора <code>_disabled</code> для радиогруппы, всем ее переключателям также устанавливается модификатор <code>_disabled</code>. Как следствие, для них не будут:</p>\n<ul>\n<li>устанавливаться модификаторы состояния <code>_hovered</code>, <code>_pressed</code> и <code>_focused</code>;</li>\n<li>изменяться значения модификатора <code>_checked</code>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39;,\n        disabled : true \n    },\n    name : &#39;radio-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда один из его элементов находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39;,\n        focused : true \n    },\n    name : &#39;radio-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h2 id=\"-\">Зависимости блока</h2>\n<p>Блок <code>radio-group</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>radio</code></li>\n<li><code>jquery</code></li>\n<li><code>_type_button</code> (у которого в зависимостях есть блок <code>button</code>)</li>\n</ul>\n\n<h1 id=\"radio\">radio</h1>\n<p>Блок <code>radio</code> – «радиопереключатель», «радиокнопка». Используется для создания одиночных радиобоксов.</p>\n<p>В реализации блока используется функциональность нативного контрола <code>input</code> с атрибутом <code>type=&quot;radio&quot;</code> – <code>&lt;input name=&quot;name&quot; type=&quot;radio&quot;&gt;</code>, который скрывается при использовании модификатора <code>_theme</code>.</p>\n<p>Блок <code>radio</code> в результате BEMHTML-преобразований на странице отображается как HTML-тег <code>&lt;label&gt;</code> – контейнер, содержащий:</p>\n<ul>\n<li>элемент <code>radio__box</code>, содержащий скрытый контрол <code>input</code> (элемент <code>__control</code>);</li>\n<li>подпись к радиокнопке, если задан BEMJSON-параметр <code>text</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON-блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td><code>name</code></td>\n        <td><code>String|Number</code></td>\n        <td>Имя радиокнопки. Преобразуется в HTML-атрибут <code>name</code> вложенного блока <code>input</code>.</td>\n    </tr>\n    <tr>\n        <td><code>text</code></td>\n        <td><code>String|Number</code></td>\n        <td>Подпись, отображаемая для радиокнопки.</td>\n    </tr>\n    <tr>\n        <td><code>val</code></td>\n        <td><code>String|Number</code></td>\n        <td>Значение, возвращаемое контролом радиопереключателя <code>radio__control</code>, если выбрана текущая радиокнопка. Преобразуется в HTML-атрибут <code>value</code> вложенного блока <code>input</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    name : &#39;radio-simple&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;simple&#39; },\n    name : &#39;radio-simple&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры радиопереключателя <code>_size</code></h3>\n<p>Задает размер всем типам радиопереключателей. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>В зависимости от значения модификатора <code>_type</code>, доступны следующие размеры реализации блока:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Обычный радиопереключатель</th>\n        <th>Кнопочный радиопереключатель (<code>_type_button</code>)</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>–</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>–</td>\n        <td>+</td>\n</table>\n\n\n<h3 id=\"-_type-\">Тип радиопереключателя <code>_type</code></h3>\n<p>Модификатор <code>_type</code> со значением <code>_button</code> используется для создания кнопочного радиопереключателя – кнопки (блок <code>button</code>) с установленным модификатором <code>_togglable_radio</code>.</p>\n<p>При этом к блоку <code>button</code> примешивается блок <code>radio</code>, а контентом кнопки становится <code>radio__control</code>.</p>\n<p>Кроме того, при установленном модификаторе <code>_type_button</code> для блока задается HTML-атрибут <code>role=&quot;button&quot;</code>.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Кнопочный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        type : &#39;button&#39;\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-_disabled-\">Неактивен <code>_disabled</code></h3>\n<p>В состоянии «неактивен» радиопереключатель отображается, но недоступен для действий пользователя.</p>\n<p>Такой радиопереключатель не будет получать фокус (модификатор <code>_focused</code>).</p>\n<p>При установке модификатора <code>_disabled</code> для радиопереключателя не будут:</p>\n<ul>\n<li>устанавливаться модификаторы состояния <code>_hovered</code>, <code>_pressed</code> и <code>_focused</code>;</li>\n<li>изменяться значение модификатора <code>_checked</code>.</li>\n</ul>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, disabled : true },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        focused : true\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h4 id=\"-_checked-\">Выбран <code>_checked</code></h4>\n<p>Модификатор <code>_checked</code> указывает на то, что радиопереключатель выбран (отмечен).</p>\n<p>Модификатор устанавливается по:</p>\n<ul>\n<li>щелчку мыши по блоку (при повторных щелчках модификатор сохраняется);</li>\n<li>нажатию клавиш <code>Enter</code> или <code>Space</code> (возможность использования клавиши <code>Enter</code> зависит от браузера), если радиопереключатель находится в фокусе (модификатор <code>_focused</code>);</li>\n<li>нажатию клавиш стрелок, если фокус установлен на соседний радиопереключатель в радиогруппе или в блоке, содержащем несколько блоков <code>radio</code>.</li>\n</ul>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, checked : true },\n    name : &#39;radio-norma&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h4 id=\"-_type_button-\">Состояния, доступные с модификатором <code>_type_button</code></h4>\n<p>При установленном модификаторе <code>_type_button</code> к блоку <code>button</code> примешивается блок <code>radio</code>. Как следствие, для блока с модификатором <code>_type_button</code> доступны состояния блока <code>button</code>:</p>\n<ul>\n<li><code>_hovered</code> – под курсором;</li>\n<li><code>_pressed</code> – кнопка нажата.</li>\n</ul>\n<h2 id=\"-\">Элементы</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>__box</code> используется в стандартной реализации блока как контейнер, содержащий контрол радиокнопки (элемент <code>__control</code>). В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;span&gt;</code>.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>Элемент <code>__control</code> – контрол радиокнопки. В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;input&gt;</code> с атрибутом <code>type=&quot;radio&quot;</code>. По умолчанию элемент скрыт. В блоке используется только его функциональность.</p>\n<h2 id=\"-\">Зависимости</h2>\n<p>Блок <code>radio</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>jquery__event</code></li>\n<li><code>__box</code></li>\n<li><code>__control</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "spin",
                    "data": {
                        "en": {
                            "name": "spin",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/spin/8nRZMnjcoWEtDxk8S584ZVjCjgM/8nRZMnjcoWEtDxk8S584ZVjCjgM.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/spin/dw4UDnC7PHm5UQ_f-yKnadONEQ4/dw4UDnC7PHm5UQ_f-yKnadONEQ4.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/spin/Hop39OtrdSzbBwyoib_9qGgQsGU/Hop39OtrdSzbBwyoib_9qGgQsGU.en"
                                        },
                                        {
                                            "url": "touch-pad.examples/spin/KkI2ijFRQcf0SzAPY0f_rby66Kw/KkI2ijFRQcf0SzAPY0f_rby66Kw.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"spin\">spin</h1>\n<p>This block indicates the progress of some process (e.g. site page or some media file loading).</p>\n<p>Rotation of the <strong>spin</strong> block is implemented by CSS3 animation.</p>\n<h2 id=\"block-modifiers\">Block Modifiers</h2>\n<p>The <strong>spin</strong> block requires the block modifiers listed below:</p>\n<h3 id=\"themes-of-a-block-_theme-\">Themes of a block <code>_theme</code></h3>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;s&#39;, progress : true }\n    }\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n    }\n</code></pre>\n<h3 id=\"sizes-_size-\">Sizes <code>_size</code></h3>\n<p>There are five sizes available: <strong>xs</strong>, <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n  <tr>\n    <th>Theme/Size</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <th>xs</th>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;simple&#39;, size : &#39;xs&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;xs&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th>s</th>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;simple&#39;, size : &#39;s&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th>m</th>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;simple&#39;, size : &#39;m&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th>l</th>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;simple&#39;, size : &#39;l&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th>xl</th>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;simple&#39;, size : &#39;xl&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;xl&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"spin-progress-_progress-\">Spin progress <code>_progress</code></h3>\n<p>The <code>{ progress : true }</code> modifier activates the spin. The <strong>spin</strong> block rotates in visible state.</p>\n<p>The <code>{ progress : false }</code> modifies paused rotation process. The <code>false</code> value is used when a <strong>spin</strong> block is invisible.</p>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "spin",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-pad.examples/spin/8nRZMnjcoWEtDxk8S584ZVjCjgM/8nRZMnjcoWEtDxk8S584ZVjCjgM.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/spin/dw4UDnC7PHm5UQ_f-yKnadONEQ4/dw4UDnC7PHm5UQ_f-yKnadONEQ4.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/spin/Hop39OtrdSzbBwyoib_9qGgQsGU/Hop39OtrdSzbBwyoib_9qGgQsGU.ru"
                                        },
                                        {
                                            "url": "touch-pad.examples/spin/KkI2ijFRQcf0SzAPY0f_rby66Kw/KkI2ijFRQcf0SzAPY0f_rby66Kw.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"spin\">spin</h1>\n<p>Блок <code>spin</code> визуально иллюстрирует ход выполнения какого-либо процесса. Например, загрузки сайта или медиа-файла.</p>\n<p>Вращается прелоадер при помощи только CSS3-анимации.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы оформления <code>_theme</code></h3>\n<p>Обязательный модификатор, так как блок не имеет нативного состояния контрола.</p>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;simple&#39;, progress : true }\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры <code>_size</code></h3>\n<p>Задает размер блоку <code>spin</code>. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно пять размеров реализации блока: <strong>xs</strong>, <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>блока</th>\n        <th>Размер, px</th>\n        <th>Реализация</th>\n    </tr>\n    <tr>\n        <th>XS</th>\n        <td>16px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xs&#39;, progress : true }\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, progress : true }\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, progress : true }\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39;, progress : true }\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_progress-\">Вращение прелоадера <code>_progress</code></h3>\n<p>Модификатор <code>_progress</code> в значении <code>_true</code> задает вращение прелоадера и показывает его на странице. Когда прелоадер виден, он крутится.</p>\n<p>Модификатор <code>_progress</code> в значении <code>_false</code> останавливает прелоадер и скрывает его со страницы.</p>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                }
            ]
        },
        {
            "name": "touch-phone.docs",
            "blocks": [
                {
                    "name": "attach",
                    "data": {
                        "en": {
                            "name": "attach",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/attach/2LkwTGo-4d7fxgnG4skRO2tHoic/2LkwTGo-4d7fxgnG4skRO2tHoic.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/5xB7ZOo0QLcc5PePNxJjLhIa9oY/5xB7ZOo0QLcc5PePNxJjLhIa9oY.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/8cgGhCbp_iZMx8M367v3_N8eRcg/8cgGhCbp_iZMx8M367v3_N8eRcg.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/9cWvWwDSqNsB1vRw6nid96kdkoo/9cWvWwDSqNsB1vRw6nid96kdkoo.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/c3tTTsQQpS_wyaTRUODJQMWC3x8/c3tTTsQQpS_wyaTRUODJQMWC3x8.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/dMMLn3JVWVrtmilJB6c2-UUGyZc/dMMLn3JVWVrtmilJB6c2-UUGyZc.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/LYQ2mpdVgO15THXOFHSn3LtLeWc/LYQ2mpdVgO15THXOFHSn3LtLeWc.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/nwytMff5nyXPoczzUvwVbgD7YQQ/nwytMff5nyXPoczzUvwVbgD7YQQ.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/TlYDF2oQVo93Y7ocT-4hcsjHHB8/TlYDF2oQVo93Y7ocT-4hcsjHHB8.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"attach\">attach</h1>\n<p>The <strong>attach</strong> block is used to send a file to a server.</p>\n<p>The block is visually represented by:</p>\n<ul>\n<li>button (<code>__button</code> based on the <a href=\"../button/\">button</a> block) that opens a system window for a file download</li>\n<li>deletion cross element (<code>__clear</code>)</li>\n</ul>\n<p>Block functionality does not support:</p>\n<ul>\n<li>more than one file attaching</li>\n<li>drag-and-drop</li>\n</ul>\n<p>Block <strong>attach</strong> provides native control functionality. The control is hidden. In MSIE8 block <strong>attach</strong> is rendered as native control <code>&lt;input type=&quot;file&quot;&gt;</code>.</p>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"themes-of-a-block\">Themes of a block</h3>\n<p><code>_theme</code></p>\n<p>The block supports only the <em>simple</em> theme.</p>\n<p>If theme is not specified, the block applies only default values:</p>\n<ul>\n<li>Theme of a button: native representation of a button by the browser.</li>\n<li>Localization: en</li>\n<li>Button&#39;s message text (<code>__button</code>): &quot;Choose file&quot;</li>\n<li>Text message rendered with no file selected (<code>__no-file</code>): &quot;no file selected&quot;</li>\n</ul>\n<p>Following example demonstrates this:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39; },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h3 id=\"block-state\">Block state</h3>\n<p><code>_disabled_true</code></p>\n<ul>\n<li>disabled\nIf block is disabled a file selection button becomes unavailable for user&#39;s manipulations.</li>\n</ul>\n<p>The button is active by default.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { disabled : true },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39;, disabled : true },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<p>The block is visually represented by the following elements:</p>\n<h3 id=\"__button\">__button</h3>\n<p>A mandatory element.</p>\n<p>A file selection button. It aims to open the system window for a file download. It is based on a <a href=\"../button/\">button</a> block and inherites its behavior (JS) and formatting (CSS).</p>\n<p>If a theme <em>simple</em> is not declared, the button&#39;s text &quot;Choose file&quot; is used by default.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39; },\n        button : {\n            block : &#39;button&#39;,\n            mods : { theme : &#39;simple&#39; },\n            icon : { elem : &#39;icon&#39; }\n        },\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>A native control of file attaching.</p>\n<p>It is rendered by BEMHTML and BH template engines as a native control of file attaching with attributes: <code>&lt;input class=&quot;file-name&quot; type=&quot;file&quot;&gt;</code>.</p>\n<h3 id=\"__no-file\">__no-file</h3>\n<p>Element for description rendering with no file selected.</p>\n<p>If a theme <em>simple</em> is not declared, the text message &quot;no file selected&quot; is used by default.</p>\n<h3 id=\"__file\">__file</h3>\n<p>A container for a attached file information.</p>\n<p>It consists of the following block&#39;s elements:</p>\n<ul>\n<li><code>__text</code></li>\n<li><code>__clear</code></li>\n</ul>\n<h3 id=\"__text\">__text</h3>\n<p>File name. It appears after some file is attached.</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Clear attachment button (deletion cross element). It appears after some file is attached.</p>\n<p>The element is available for a <em>simple</em> theme of <strong>attach</strong> block.</p>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n\n<h1 id=\"button\">button</h1>\n<p>The <strong>button</strong> block is used for different types of buttons creating. It allows you to manage size, sate, content and appearance of a button.</p>\n<p>In MSIE8 block <strong>button</strong> is rendered as native button <code>&lt;button&gt;</code>; <code>link-button</code> is rendered as native link <code>&lt;a&gt;</code>.</p>\n<h2 id=\"button-use-cases\">Button use cases</h2>\n<table>\n  <tr>\n    <th align=\"center\">Type</th>\n    <th align=\"center\">Description</th>\n    <th align=\"center\">Example</th>\n  </tr>\n  <tr>\n    <td>Button</td>\n    <td>Used by default.</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;\n  },\n  icon : {\n    block : &#39;icon&#39;,\n    mods : {\n      action : &#39;download&#39;\n    }\n  }\n}\n      </code></pre>\n    </td>\n   <tr>\n    <td>Link-button</td>\n    <td>A button that provides link functionality. <br>Has an optional attribute <code>url</code><br> to specify the address to which to <br>navigate.</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    type : &#39;link&#39;\n  },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n   </tr>\n   <tr>\n    <td>Action button</td>\n    <td>Designed to send data to the server (submit).<br> Always located in the form. <br>Set a <code>type</code> modifier with <code>submit</code> value in <br>BEMJSON to create an action button.\n    </td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : {\n      theme : &#39;normal&#39;,\n      size : &#39;m&#39;,\n      type : &#39;submit&#39;\n    },\n    text : &#39;button&#39;\n  }\n}\n      </code></pre>\n    </td>\n   </tr>\n</table>\n\n<h2 id=\"block-s-api\">Block&#39;s API</h2>\n<p>The public methods of the block are:</p>\n<table>\n  <tr>\n    <th align=\"center\">Method</th>\n    <th align=\"center\">Description</th>\n  </tr>\n  <tr>\n    <td>getText</td>\n    <td>Returns text of the button {String}.</td>\n  </tr>\n  <tr>\n    <td>setText</td>\n    <td>Sets text to the button.</td>\n  </tr>\n</table>\n\n<h2 id=\"valid-block-s-attributes\">Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n  <tr>\n    <th align=\"center\">Attributes</th>\n    <th align=\"center\">Type</th>\n    <th align=\"center\">Description</th>\n  </tr>\n  <tr>\n    <td>text</td>\n    <td>String</td>\n    <td>Text of the button.</td>\n   </tr>\n   <tr>\n    <td>icon</td>\n    <td>BEMJSON</td>\n    <td>The <strong>icon</strong> block.</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>String</td>\n    <td>URL address. If URL address is specified the <br>button provides a link functionality.</td>\n  </tr>\n</table>\n\n<p>The other valid block&#39;s attributes could be specified in the <code>attrs</code> field in BEMJSON.</p>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"the-themes-_theme-\">The themes <code>_theme</code></h3>\n<p>The block supports the follwing themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>It a <code>_theme</code> modifier is not specified the native representation (<code>default</code>) of a control is available.</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"the-sizes-_size-\">The sizes <code>_size</code></h3>\n<p>Mandatory modifier for <em>normal</em> theme only.\nProvides the size value to all types of buttons.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following example demonstrates this:</p>\n<table>\n  <tr>\n    <th align=\"center\">Size/Values</th>\n    <th align=\"center\">Font size</th>\n    <th align=\"center\">Button height</th>\n    <th align=\"center\">Example</th>\n  </tr>\n  <tr>\n    <th align=\"center\">s</th>\n    <td>13px</td>\n    <td>24px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;s&#39;\n  },\n  text : &#39;Small&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">m</th>\n    <td>13px</td>\n    <td>28px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;\n  },\n  text : &#39;Medium&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">l</th>\n    <td>15px</td>\n    <td>32px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;l&#39;\n  },\n  text : &#39;Large&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">xl</th>\n    <td>18px</td>\n    <td>38px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;xl&#39;\n  },\n  text : &#39;X-large&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"button-s-type-_type-\">Button&#39;s type <code>_type</code></h3>\n<p>The following types of button are available:</p>\n<ul>\n<li><p>link-button (<code>_link</code>). Has a mandatory attribute <code>url</code>. A link-button has an <code>&lt;a&gt;</code> attribute and the <code>url</code> value becomes a <code>href</code> attribute.</p>\n</li>\n<li><p>action  button (<code>_submit</code>). Should be a part of a form only.</p>\n</li>\n</ul>\n<p>The <code>_type</code> modifier is available for <em>simple</em> and <em>normal</em> themes.</p>\n<table>\n  <tr>\n    <th align=\"center\">Type/<br>Realisation</th>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td> <code>_link</code></td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : { type : &#39;link&#39; },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    type : &#39;link&#39;\n  },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <td><code>_submit</code></td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : { type : &#39;submit&#39; },\n    text : &#39;default&#39;\n}\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : {\n      theme : &#39;normal&#39;,\n      size : &#39;m&#39;,\n      type : &#39;submit&#39;\n    },\n    text : &#39;normal&#39;\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"button-s-states\">Button&#39;s states</h3>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If a <code>_disabled</code> modifier has <code>_true</code> value the button is visible, but is not available for user action.</p>\n<p>Disabled button cannot be focused by <code>Tab</code> pressing or mouse click.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_disabled_true&#39;,\n  mods : { disabled : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_disabled_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    disabled : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>If <code>focused</code> modifier has a <code>true</code> value the button is always focused. You can click the focused button using <code>Space</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<p>Available for all themes of block.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;_focused_true&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;,\n        focused : true\n    }\n}\n</code></pre>\n<h4 id=\"-_hovered-\"><code>_hovered</code></h4>\n<p>Defines the &quot;hover&quot; action.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_hovered_true&#39;,\n  mods : { hovered : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_hovered_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    hovered : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_pressed-\"><code>_pressed</code></h4>\n<p>Defines a &quot;pressed&quot; state of a button.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_pressed_true&#39;,\n  mods : { pressed : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_pressed_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    pressed : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_togglable-\"><code>_togglable</code></h4>\n<p>Determines the state of the pressed button when the first click the button presses it, and the second returns to its original state.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_togglable_true&#39;,\n  mods : { togglable : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_togglable_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    togglable : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_action-\"><code>_action</code></h4>\n<p>Visually detects the button on a page.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_action_true&#39;,\n  mods : { action : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_action_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    action : true\n  }\n}\n      </code></pre>\n  </td>\n  </tr>\n</table>\n\n<h4 id=\"pseudo-button-_pseudo-\">Pseudo button <code>_pseudo</code></h4>\n<p>If <code>pseudo</code> modifier has <code>true</code> value the button background becomes transparent. If pseudo button is disabled its boarders disappear.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true },\n    text : &#39;pseudo&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true, disabled : true },\n    text : &#39;pseudo&#39;\n}\n</code></pre>\n<h2 id=\"b-ock-s-elements\">B;ock&#39;s elements</h2>\n<p>The block is visually represented by the following elements:</p>\n<h3 id=\"__text\">__text</h3>\n<p>This element intended to set a text position in the button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } },\n    text : &#39;with icon&#39;\n}\n</code></pre>\n<h2 id=\"dependencies\">Dependencies</h2>\n<p>The <code>button</code> block depends on</p>\n<ul>\n<li><code>base-control</code>, that provides public API for the controls.<code>i-bem__dom</code></li>\n<li><code>i-bem__dom</code></li>\n</ul>\n\n<h1 id=\"icon\">icon</h1>\n<p><code>&lt;i&gt;</code>-based block for using as an element in other blocks, not for independent using. Picture is set as <code>background</code> property.</p>\n<p>In BEMJSON you can use both the modifier and the <code>url</code> field for a picture representation:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n     block : &#39;icon&#39;,\n     url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, mods : { social : &#39;twitter&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;checkbox&#39;,\n        mods : { theme : &#39;simple&#39;, type : &#39;button&#39; },\n        text : &#39;icon&#39;,\n        icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, url : &#39;../../../test.blocks/icon/_action/download.svg&#39; }\n    }\n</code></pre>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "attach",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/attach/2LkwTGo-4d7fxgnG4skRO2tHoic/2LkwTGo-4d7fxgnG4skRO2tHoic.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/5xB7ZOo0QLcc5PePNxJjLhIa9oY/5xB7ZOo0QLcc5PePNxJjLhIa9oY.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/8cgGhCbp_iZMx8M367v3_N8eRcg/8cgGhCbp_iZMx8M367v3_N8eRcg.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/9cWvWwDSqNsB1vRw6nid96kdkoo/9cWvWwDSqNsB1vRw6nid96kdkoo.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/c3tTTsQQpS_wyaTRUODJQMWC3x8/c3tTTsQQpS_wyaTRUODJQMWC3x8.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/dMMLn3JVWVrtmilJB6c2-UUGyZc/dMMLn3JVWVrtmilJB6c2-UUGyZc.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/LYQ2mpdVgO15THXOFHSn3LtLeWc/LYQ2mpdVgO15THXOFHSn3LtLeWc.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/nwytMff5nyXPoczzUvwVbgD7YQQ/nwytMff5nyXPoczzUvwVbgD7YQQ.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/attach/TlYDF2oQVo93Y7ocT-4hcsjHHB8/TlYDF2oQVo93Y7ocT-4hcsjHHB8.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"attach\">attach</h1>\n<p>Блок <code>attach</code> служит для загрузки файла, предназначенного для отправки на сервер.</p>\n<p>По умолчанию блок визуально представлен кнопкой на основе блока <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a>, открывающей системное окно загрузки файла, и текстовым сообщением «Файл не выбран». После загрузки файла отображаются следующие элементы:</p>\n<ul>\n<li>иконка файла (блок <code>icon</code>);</li>\n<li>имя файла (<code>__text</code>);</li>\n<li>крестик для отмены (<code>__clear</code>).</li>\n</ul>\n<p>Не позволяет прикреплять несколько файлов и не поддерживает drag-and-drop.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы оформления  <code>_theme</code></h3>\n<p>Блок представлен только в теме <em>simple</em>.</p>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    button : &#39;Выберите файл&#39;,\n    noFileText : &#39;Файл не выбран&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    mods : { theme : &#39;simple&#39; },\n    button : &#39;Выберите файл&#39;,\n    noFileText : &#39;Файл не выбран&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии блока «неактивен» кнопка выбора становится недоступной для действий пользователя.</p>\n<p>Если модификатор <code>disabled</code> не выбран, кнопка по умолчанию активна.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    mods : { theme : &#39;simple&#39;, disabled : true },\n    button : &#39;Выберите файл&#39;,\n    noFileText : &#39;файл не выбран&#39;\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__button\">__button</h3>\n<p>Обязательный элемент.\nКнопка выбора файла. Открывает системное окно загрузки файла. Создается на основе блока <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a> и использует его поведение (JS) и внешний вид (CSS). Контент кнопки задается во входных данных.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;attach&#39;,\n    mods : { theme : &#39;simple&#39; },\n    button : {\n        block : &#39;button&#39;,\n        mods : { theme : &#39;simple&#39; },\n        icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; },\n        text: &#39;Выберите файл&#39;\n        }\n    },\n    noFileText : &#39;Файл не выбран&#39;\n}\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>Нативный контрол «прикрепить файл».</p>\n<p>Преобразуется BEMHTML- и BH-шаблонами в нативный элемент прикрепления файла с атрибутами <code>&lt;input class=&quot;attach__control&quot; type=&quot;file&quot;&gt;</code>.</p>\n<h3 id=\"__no-file\">__no-file</h3>\n<p>Элемент для отображения текста, когда файл не выбран.</p>\n<p>Если тема <em>simple</em> не указана для блока <code>attach</code>, будет отображаться значение нативного контрола – «Файл не выбран».</p>\n<h3 id=\"__file\">__file</h3>\n<p>Контейнер с информацией о прикрепленном файле.</p>\n<p>Формируется из следующих элементов блока:</p>\n<ul>\n<li><code>__text</code></li>\n<li><code>__clear</code></li>\n</ul>\n<p>Может содержать блок <code>icon</code>. В зависимости от типа файла, блоку <code>icon</code> добавляется соответствующий модификатор, которому будет назначена иконка типа файла.</p>\n<h3 id=\"__text\">__text</h3>\n<p>Имя файла. Появляется после прикрепления файла.</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Кнопка отмены выбранного файла (крестик). Появляется после прикрепления файла.</p>\n<p>Элемент реализован для темы <em>simple</em>.</p>\n<h3 id=\"-\">Зависимости блока</h3>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n<li><code>icon</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n\n<h1 id=\"button\">button</h1>\n<p>Блок <code>button</code> используется для создания различных типов кнопок и предоставляет возможность изменять их размер, состояние, содержимое и внешний вид.</p>\n<h2 id=\"-\">Варианты использования кнопок</h2>\n<ul>\n<li>Обычная кнопка – применяется для любых кнопок веб-интерфейса; используется по умолчанию.</li>\n<li>Кнопка-ссылка – применяется для перехода по ссылке. Задается модификатором <code>_type</code> со значением <code>_link</code>.</li>\n<li>Кнопка действия – предназначена для отправки данных на сервер (submit). Всегда располагается в форме. Задается через атрибут блока <code>type</code> со значением <code>submit</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает текст кнопки.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code></td>\n        <td>Кнопка с иконкой, которая формируется блоком <code>icon</code>.</td>\n    </tr>\n    <tr>\n        <td>type</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Преобразует обычную кнопку в кнопку действия. Допустимое значение атрибута – <code>submit</code>.</td>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Адрес ссылки. Применяется только при наличии модификатора блока <code>_type_link</code>. Кнопка становится ссылкой, а значение <code>url</code> атрибутом <code>href</code>.</td>\n    </tr>\n</table>\n\n<p>Другие допустимые атрибуты блока могут задаваться в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Тема не указана&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;Тема simple&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Тема normal&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры кнопок <code>_size</code></h3>\n<p>Задает размер всем типам кнопок. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>кнопки</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота<br>кнопки</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39; },\n    text : &#39;Small&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Medium&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    text : &#39;Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39; },\n    text : &#39;X-large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Типы кнопок <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки-ссылки (<code>_type_link</code>).\nДополнительно во входных данных необходимо указать обязательный атрибут <code>url</code>. В таком случае кнопка получает тег <code>&lt;a&gt;</code>, а значение <code>url</code> становится атрибутом <code>href</code>.</p>\n<pre><code>{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;link&#39; },\n    url : &#39;#&#39;,\n    text : &#39;Кнопка-ссылка&#39;\n}\n</code></pre><h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_disabled-\">Неактивна <code>_disabled</code></h4>\n<p>В состоянии «неактивна» кнопка видна, но недоступна для действий пользователя.</p>\n<p>Такая кнопка не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<pre><code class=\"lang-bemjsom\">{\n    block : &#39;button&#39;,\n    text : &#39;Неактивна&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true }\n}\n</code></pre>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>focused</code> со значением <code>true</code> кнопка всегда находится в фокусе. Нажатие по ней можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;В фокусе&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true }\n}\n</code></pre>\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие «наведение курсором» на кнопку.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Наведение курсором&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, hovered : true }\n}\n</code></pre>\n<h4 id=\"-_pressed-\">Нажатие <code>_pressed</code></h4>\n<p>Определяет состояние «нажатие на кнопку» (действие).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка нажата&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pressed : true }\n}\n</code></pre>\n<h4 id=\"-_togglable-\">Залипание <code>_togglable</code></h4>\n<p>Определяет состояние кнопки в нажатом состоянии, когда первый клик по кнопке нажимает ее, а второй возвращает в исходное состояние.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка зажата&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, togglable : true }\n}\n</code></pre>\n<h4 id=\"-_action-\">Визуальное выделение <code>_action</code></h4>\n<p>Визуально выделяет кнопку на странице.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, action : true },\n    type : &#39;submit&#39;,\n    text : &#39;Action&#39;\n}\n</code></pre>\n<h4 id=\"-_pseudo-\">Псевдокнопка <code>_pseudo</code></h4>\n<p>При выборе модификатора <code>_pseudo</code> со значением <code>true</code>, кнопка получает прозрачный фон.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true },\n    text : &#39;Псевдокнопка&#39;\n}\n</code></pre>\n<p>В неактивном состоянии границы псевдокнопки исчезают и она сливается со страницей.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true, disabled : true },\n    text : &#39;Псевдокнопка&#39;\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"__text\">__text</h3>\n<p>Технический элемент. Обрамляет текст кнопки.\nНужен для позиционирования текста внутри кнопки, в том числе для случаев использования вместе с иконкой.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        mods : { action : &#39;download&#39; }\n    },\n    text : &#39;Кнопка с иконкой&#39;\n}\n</code></pre>\n<h2 id=\"-\">Зависимости</h2>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n<li><code>keyboard</code></li>\n</ul>\n\n<h1 id=\"icon\">icon</h1>\n<p>Блок <code>icon</code> используется в качестве графического элемента в других блоках. В HTML представлен тегом <code>&lt;i&gt;</code>. Иконка задается через свойство <code>background</code> и, соответственно, не имеет возможности фоллбека.</p>\n<p>Иконку можно передать как через модификатор, так и через поле <code>url</code>:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;icon&#39;,\n    mods : { social : &#39;twitter&#39; }\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;icon&#39;,\n    url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка с иконкой&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;with icon&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n}\n</code></pre>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "base-control",
                    "data": {
                        "en": {
                            "name": "base-control",
                            "examples": [
                                {
                                    "content": []
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "base-control",
                            "examples": [
                                {
                                    "content": []
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "button",
                    "data": {
                        "en": {
                            "name": "button",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/button/3kp2wC_8uzAG3WG-EYBeTIUwwm4/3kp2wC_8uzAG3WG-EYBeTIUwwm4.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/4gW9GihAqFCGYBCeWUGRD3QWKOs/4gW9GihAqFCGYBCeWUGRD3QWKOs.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/BE2ng8JZ0bG4R2mK7GVvUGNYvjI/BE2ng8JZ0bG4R2mK7GVvUGNYvjI.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/bFydl8wb2VHVtMu2vxBMm6icZHg/bFydl8wb2VHVtMu2vxBMm6icZHg.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/ByAZ1dHx4rZKUf9zbxuHmfOmGNs/ByAZ1dHx4rZKUf9zbxuHmfOmGNs.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/CtrqIPRzZO-TkVaDLVKvRK4P0og/CtrqIPRzZO-TkVaDLVKvRK4P0og.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/fc2vxXBIzzk2stACB-J9vRKlYQ4/fc2vxXBIzzk2stACB-J9vRKlYQ4.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/GVMyNpdJjINIl0Ab_qhtsWRf_YA/GVMyNpdJjINIl0Ab_qhtsWRf_YA.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/h_ijyu_mqbPaJBB22OxZERaFyZA/h_ijyu_mqbPaJBB22OxZERaFyZA.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/igxPz7KCvCVG6TTxlXRYzE2_5pI/igxPz7KCvCVG6TTxlXRYzE2_5pI.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/k-SAhgMwGcp5dgunAdBbNhiPcPI/k-SAhgMwGcp5dgunAdBbNhiPcPI.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/KtCevfKa_rzm7MTQMzA65Z0ZREU/KtCevfKa_rzm7MTQMzA65Z0ZREU.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/niHjaElKr9LiqQpXkfl1vRlgwo8/niHjaElKr9LiqQpXkfl1vRlgwo8.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/pxTNfkqsHxpJmDhwS0QK2QBs3ZY/pxTNfkqsHxpJmDhwS0QK2QBs3ZY.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/QdeiBav-xLD1UHlT_oJYRBLcueI/QdeiBav-xLD1UHlT_oJYRBLcueI.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/Rb77AVqNcSM2UUBxbCkUkHULKWc/Rb77AVqNcSM2UUBxbCkUkHULKWc.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/RQ8YcvhxhqjSwO3I3VjLBOanRns/RQ8YcvhxhqjSwO3I3VjLBOanRns.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/X1_VUgD2DCMkTeRUN6Vd4diR7Yk/X1_VUgD2DCMkTeRUN6Vd4diR7Yk.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"button\">button</h1>\n<p>The <strong>button</strong> block is used for different types of buttons creating. It allows you to manage size, sate, content and appearance of a button.</p>\n<p>In MSIE8 block <strong>button</strong> is rendered as native button <code>&lt;button&gt;</code>; <code>link-button</code> is rendered as native link <code>&lt;a&gt;</code>.</p>\n<h2 id=\"button-use-cases\">Button use cases</h2>\n<table>\n  <tr>\n    <th align=\"center\">Type</th>\n    <th align=\"center\">Description</th>\n    <th align=\"center\">Example</th>\n  </tr>\n  <tr>\n    <td>Button</td>\n    <td>Used by default.</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;\n  },\n  icon : {\n    block : &#39;icon&#39;,\n    mods : {\n      action : &#39;download&#39;\n    }\n  }\n}\n      </code></pre>\n    </td>\n   <tr>\n    <td>Link-button</td>\n    <td>A button that provides link functionality. <br>Has an optional attribute <code>url</code><br> to specify the address to which to <br>navigate.</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    type : &#39;link&#39;\n  },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n   </tr>\n   <tr>\n    <td>Action button</td>\n    <td>Designed to send data to the server (submit).<br> Always located in the form. <br>Set a <code>type</code> modifier with <code>submit</code> value in <br>BEMJSON to create an action button.\n    </td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : {\n      theme : &#39;normal&#39;,\n      size : &#39;m&#39;,\n      type : &#39;submit&#39;\n    },\n    text : &#39;button&#39;\n  }\n}\n      </code></pre>\n    </td>\n   </tr>\n</table>\n\n<h2 id=\"block-s-api\">Block&#39;s API</h2>\n<p>The public methods of the block are:</p>\n<table>\n  <tr>\n    <th align=\"center\">Method</th>\n    <th align=\"center\">Description</th>\n  </tr>\n  <tr>\n    <td>getText</td>\n    <td>Returns text of the button {String}.</td>\n  </tr>\n  <tr>\n    <td>setText</td>\n    <td>Sets text to the button.</td>\n  </tr>\n</table>\n\n<h2 id=\"valid-block-s-attributes\">Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n  <tr>\n    <th align=\"center\">Attributes</th>\n    <th align=\"center\">Type</th>\n    <th align=\"center\">Description</th>\n  </tr>\n  <tr>\n    <td>text</td>\n    <td>String</td>\n    <td>Text of the button.</td>\n   </tr>\n   <tr>\n    <td>icon</td>\n    <td>BEMJSON</td>\n    <td>The <strong>icon</strong> block.</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>String</td>\n    <td>URL address. If URL address is specified the <br>button provides a link functionality.</td>\n  </tr>\n</table>\n\n<p>The other valid block&#39;s attributes could be specified in the <code>attrs</code> field in BEMJSON.</p>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"the-themes-_theme-\">The themes <code>_theme</code></h3>\n<p>The block supports the follwing themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>It a <code>_theme</code> modifier is not specified the native representation (<code>default</code>) of a control is available.</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"the-sizes-_size-\">The sizes <code>_size</code></h3>\n<p>Mandatory modifier for <em>normal</em> theme only.\nProvides the size value to all types of buttons.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following example demonstrates this:</p>\n<table>\n  <tr>\n    <th align=\"center\">Size/Values</th>\n    <th align=\"center\">Font size</th>\n    <th align=\"center\">Button height</th>\n    <th align=\"center\">Example</th>\n  </tr>\n  <tr>\n    <th align=\"center\">s</th>\n    <td>13px</td>\n    <td>24px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;s&#39;\n  },\n  text : &#39;Small&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">m</th>\n    <td>13px</td>\n    <td>28px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;\n  },\n  text : &#39;Medium&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">l</th>\n    <td>15px</td>\n    <td>32px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;l&#39;\n  },\n  text : &#39;Large&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"center\">xl</th>\n    <td>18px</td>\n    <td>38px</td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;xl&#39;\n  },\n  text : &#39;X-large&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"button-s-type-_type-\">Button&#39;s type <code>_type</code></h3>\n<p>The following types of button are available:</p>\n<ul>\n<li><p>link-button (<code>_link</code>). Has a mandatory attribute <code>url</code>. A link-button has an <code>&lt;a&gt;</code> attribute and the <code>url</code> value becomes a <code>href</code> attribute.</p>\n</li>\n<li><p>action  button (<code>_submit</code>). Should be a part of a form only.</p>\n</li>\n</ul>\n<p>The <code>_type</code> modifier is available for <em>simple</em> and <em>normal</em> themes.</p>\n<table>\n  <tr>\n    <th align=\"center\">Type/<br>Realisation</th>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td> <code>_link</code></td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : { type : &#39;link&#39; },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    type : &#39;link&#39;\n  },\n  url : &#39;#&#39;,\n  text : &#39;link&#39;\n}\n      </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <td><code>_submit</code></td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : { type : &#39;submit&#39; },\n    text : &#39;default&#39;\n}\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  tag: &#39;form&#39;,\n  content: {\n    block : &#39;button&#39;,\n    mods : {\n      theme : &#39;normal&#39;,\n      size : &#39;m&#39;,\n      type : &#39;submit&#39;\n    },\n    text : &#39;normal&#39;\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"button-s-states\">Button&#39;s states</h3>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If a <code>_disabled</code> modifier has <code>_true</code> value the button is visible, but is not available for user action.</p>\n<p>Disabled button cannot be focused by <code>Tab</code> pressing or mouse click.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_disabled_true&#39;,\n  mods : { disabled : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_disabled_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    disabled : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>If <code>focused</code> modifier has a <code>true</code> value the button is always focused. You can click the focused button using <code>Space</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<p>Available for all themes of block.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;_focused_true&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;,\n        focused : true\n    }\n}\n</code></pre>\n<h4 id=\"-_hovered-\"><code>_hovered</code></h4>\n<p>Defines the &quot;hover&quot; action.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_hovered_true&#39;,\n  mods : { hovered : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_hovered_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    hovered : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_pressed-\"><code>_pressed</code></h4>\n<p>Defines a &quot;pressed&quot; state of a button.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_pressed_true&#39;,\n  mods : { pressed : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_pressed_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    pressed : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_togglable-\"><code>_togglable</code></h4>\n<p>Determines the state of the pressed button when the first click the button presses it, and the second returns to its original state.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_togglable_true&#39;,\n  mods : { togglable : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_togglable_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    togglable : true\n  }\n}\n      </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_action-\"><code>_action</code></h4>\n<p>Visually detects the button on a page.</p>\n<p>Available for all themes of block.</p>\n<table>\n  <tr>\n    <th align=\"center\">default</th>\n    <th align=\"center\">normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_action_true&#39;,\n  mods : { action : true }\n}\n      </code></pre>\n    </td>\n    <td>\n      <pre><code>\n{\n  block : &#39;button&#39;,\n  text : &#39;_action_true&#39;,\n  mods : {\n    theme : &#39;normal&#39;,\n    size : &#39;m&#39;,\n    action : true\n  }\n}\n      </code></pre>\n  </td>\n  </tr>\n</table>\n\n<h4 id=\"pseudo-button-_pseudo-\">Pseudo button <code>_pseudo</code></h4>\n<p>If <code>pseudo</code> modifier has <code>true</code> value the button background becomes transparent. If pseudo button is disabled its boarders disappear.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true },\n    text : &#39;pseudo&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true, disabled : true },\n    text : &#39;pseudo&#39;\n}\n</code></pre>\n<h2 id=\"b-ock-s-elements\">B;ock&#39;s elements</h2>\n<p>The block is visually represented by the following elements:</p>\n<h3 id=\"__text\">__text</h3>\n<p>This element intended to set a text position in the button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } },\n    text : &#39;with icon&#39;\n}\n</code></pre>\n<h2 id=\"dependencies\">Dependencies</h2>\n<p>The <code>button</code> block depends on</p>\n<ul>\n<li><code>base-control</code>, that provides public API for the controls.<code>i-bem__dom</code></li>\n<li><code>i-bem__dom</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "button",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/button/3kp2wC_8uzAG3WG-EYBeTIUwwm4/3kp2wC_8uzAG3WG-EYBeTIUwwm4.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/4gW9GihAqFCGYBCeWUGRD3QWKOs/4gW9GihAqFCGYBCeWUGRD3QWKOs.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/BE2ng8JZ0bG4R2mK7GVvUGNYvjI/BE2ng8JZ0bG4R2mK7GVvUGNYvjI.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/bFydl8wb2VHVtMu2vxBMm6icZHg/bFydl8wb2VHVtMu2vxBMm6icZHg.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/ByAZ1dHx4rZKUf9zbxuHmfOmGNs/ByAZ1dHx4rZKUf9zbxuHmfOmGNs.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/CtrqIPRzZO-TkVaDLVKvRK4P0og/CtrqIPRzZO-TkVaDLVKvRK4P0og.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/fc2vxXBIzzk2stACB-J9vRKlYQ4/fc2vxXBIzzk2stACB-J9vRKlYQ4.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/GVMyNpdJjINIl0Ab_qhtsWRf_YA/GVMyNpdJjINIl0Ab_qhtsWRf_YA.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/h_ijyu_mqbPaJBB22OxZERaFyZA/h_ijyu_mqbPaJBB22OxZERaFyZA.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/igxPz7KCvCVG6TTxlXRYzE2_5pI/igxPz7KCvCVG6TTxlXRYzE2_5pI.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/k-SAhgMwGcp5dgunAdBbNhiPcPI/k-SAhgMwGcp5dgunAdBbNhiPcPI.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/KtCevfKa_rzm7MTQMzA65Z0ZREU/KtCevfKa_rzm7MTQMzA65Z0ZREU.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/niHjaElKr9LiqQpXkfl1vRlgwo8/niHjaElKr9LiqQpXkfl1vRlgwo8.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/pxTNfkqsHxpJmDhwS0QK2QBs3ZY/pxTNfkqsHxpJmDhwS0QK2QBs3ZY.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/QdeiBav-xLD1UHlT_oJYRBLcueI/QdeiBav-xLD1UHlT_oJYRBLcueI.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/Rb77AVqNcSM2UUBxbCkUkHULKWc/Rb77AVqNcSM2UUBxbCkUkHULKWc.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/RQ8YcvhxhqjSwO3I3VjLBOanRns/RQ8YcvhxhqjSwO3I3VjLBOanRns.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/button/X1_VUgD2DCMkTeRUN6Vd4diR7Yk/X1_VUgD2DCMkTeRUN6Vd4diR7Yk.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"button\">button</h1>\n<p>Блок <code>button</code> используется для создания различных типов кнопок и предоставляет возможность изменять их размер, состояние, содержимое и внешний вид.</p>\n<h2 id=\"-\">Варианты использования кнопок</h2>\n<ul>\n<li>Обычная кнопка – применяется для любых кнопок веб-интерфейса; используется по умолчанию.</li>\n<li>Кнопка-ссылка – применяется для перехода по ссылке. Задается модификатором <code>_type</code> со значением <code>_link</code>.</li>\n<li>Кнопка действия – предназначена для отправки данных на сервер (submit). Всегда располагается в форме. Задается через атрибут блока <code>type</code> со значением <code>submit</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает текст кнопки.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code></td>\n        <td>Кнопка с иконкой, которая формируется блоком <code>icon</code>.</td>\n    </tr>\n    <tr>\n        <td>type</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Преобразует обычную кнопку в кнопку действия. Допустимое значение атрибута – <code>submit</code>.</td>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Адрес ссылки. Применяется только при наличии модификатора блока <code>_type_link</code>. Кнопка становится ссылкой, а значение <code>url</code> атрибутом <code>href</code>.</td>\n    </tr>\n</table>\n\n<p>Другие допустимые атрибуты блока могут задаваться в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Тема не указана&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;Тема simple&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Тема normal&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры кнопок <code>_size</code></h3>\n<p>Задает размер всем типам кнопок. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>кнопки</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота<br>кнопки</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39; },\n    text : &#39;Small&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Medium&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    text : &#39;Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39; },\n    text : &#39;X-large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Типы кнопок <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки-ссылки (<code>_type_link</code>).\nДополнительно во входных данных необходимо указать обязательный атрибут <code>url</code>. В таком случае кнопка получает тег <code>&lt;a&gt;</code>, а значение <code>url</code> становится атрибутом <code>href</code>.</p>\n<pre><code>{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;link&#39; },\n    url : &#39;#&#39;,\n    text : &#39;Кнопка-ссылка&#39;\n}\n</code></pre><h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_disabled-\">Неактивна <code>_disabled</code></h4>\n<p>В состоянии «неактивна» кнопка видна, но недоступна для действий пользователя.</p>\n<p>Такая кнопка не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<pre><code class=\"lang-bemjsom\">{\n    block : &#39;button&#39;,\n    text : &#39;Неактивна&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true }\n}\n</code></pre>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>focused</code> со значением <code>true</code> кнопка всегда находится в фокусе. Нажатие по ней можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;В фокусе&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true }\n}\n</code></pre>\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие «наведение курсором» на кнопку.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Наведение курсором&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, hovered : true }\n}\n</code></pre>\n<h4 id=\"-_pressed-\">Нажатие <code>_pressed</code></h4>\n<p>Определяет состояние «нажатие на кнопку» (действие).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка нажата&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pressed : true }\n}\n</code></pre>\n<h4 id=\"-_togglable-\">Залипание <code>_togglable</code></h4>\n<p>Определяет состояние кнопки в нажатом состоянии, когда первый клик по кнопке нажимает ее, а второй возвращает в исходное состояние.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка зажата&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, togglable : true }\n}\n</code></pre>\n<h4 id=\"-_action-\">Визуальное выделение <code>_action</code></h4>\n<p>Визуально выделяет кнопку на странице.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, action : true },\n    type : &#39;submit&#39;,\n    text : &#39;Action&#39;\n}\n</code></pre>\n<h4 id=\"-_pseudo-\">Псевдокнопка <code>_pseudo</code></h4>\n<p>При выборе модификатора <code>_pseudo</code> со значением <code>true</code>, кнопка получает прозрачный фон.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true },\n    text : &#39;Псевдокнопка&#39;\n}\n</code></pre>\n<p>В неактивном состоянии границы псевдокнопки исчезают и она сливается со страницей.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true, disabled : true },\n    text : &#39;Псевдокнопка&#39;\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"__text\">__text</h3>\n<p>Технический элемент. Обрамляет текст кнопки.\nНужен для позиционирования текста внутри кнопки, в том числе для случаев использования вместе с иконкой.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        mods : { action : &#39;download&#39; }\n    },\n    text : &#39;Кнопка с иконкой&#39;\n}\n</code></pre>\n<h2 id=\"-\">Зависимости</h2>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n<li><code>keyboard</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "checkbox",
                    "data": {
                        "en": {
                            "name": "checkbox",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/checkbox/79qZiqVxBY5r5ZaX_gUFH7MMT5Y/79qZiqVxBY5r5ZaX_gUFH7MMT5Y.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/9OMss9AsUlfFVAPsG8SlTTcVlLI/9OMss9AsUlfFVAPsG8SlTTcVlLI.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/C7ZkQCq0ZPpMgf1piyMISEARwPc/C7ZkQCq0ZPpMgf1piyMISEARwPc.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/dOZ5XkX9ojCi2r9kiY4DJa4YWvA/dOZ5XkX9ojCi2r9kiY4DJa4YWvA.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/Dz3sVcJ6LQvatoLktNJM35QPIso/Dz3sVcJ6LQvatoLktNJM35QPIso.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/FSuk4Im9Ao4_75PdjgBzm3U8Zww/FSuk4Im9Ao4_75PdjgBzm3U8Zww.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/GSqTjc8TX7KG5JpqDbcpS1N0CZM/GSqTjc8TX7KG5JpqDbcpS1N0CZM.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/IMYtMHFDZhN_agFpLXmNIDTAK4Q/IMYtMHFDZhN_agFpLXmNIDTAK4Q.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/Lc_qQBikKsf-9GuBeR0FLc4-3k0/Lc_qQBikKsf-9GuBeR0FLc4-3k0.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/MiwyveGqb-Q3hDh6b5dvanmXUc0/MiwyveGqb-Q3hDh6b5dvanmXUc0.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/QcTYyDncRH6DrvinlVti5iujuxU/QcTYyDncRH6DrvinlVti5iujuxU.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/sae-WwdkdYcrwwgUC5hw2NDih4/sae-WwdkdYcrwwgUC5hw2NDih4.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/Sgn48vD0-J9Y9jIc1geFcHu6qVA/Sgn48vD0-J9Y9jIc1geFcHu6qVA.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/SojNrUmXHg8qOEVNxLMELyPxf1I/SojNrUmXHg8qOEVNxLMELyPxf1I.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/tU4ymq_plszDwGgrM91feVLkv6s/tU4ymq_plszDwGgrM91feVLkv6s.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/v-9BRGnxLdDNcDKCfuStYG9PRYU/v-9BRGnxLdDNcDKCfuStYG9PRYU.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/XI4uPzI90-UiMiWRig9noeu3mrg/XI4uPzI90-UiMiWRig9noeu3mrg.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/ZQpxZtXWq6x9EgytPp4qnULF16g/ZQpxZtXWq6x9EgytPp4qnULF16g.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/ZWO500NSNVuNcdNcItDCWIHDH3o/ZWO500NSNVuNcdNcItDCWIHDH3o.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox-group/E4bazg4TDlm1W1tmOFMVgeAT1k0/E4bazg4TDlm1W1tmOFMVgeAT1k0.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox-group/tnfPsUBEHfiKv4Ay-bSkmy06NTs/tnfPsUBEHfiKv4Ay-bSkmy06NTs.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox-group/uf6KFu6RRJ3CJRzlZj5THp-53ss/uf6KFu6RRJ3CJRzlZj5THp-53ss.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox-group/Yy5DRxHNPA5fsD-l76T556p1aMY/Yy5DRxHNPA5fsD-l76T556p1aMY.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"checkbox\">checkbox</h1>\n<p>Block <code>checkbox</code> is a graphical user interface element that permits the user to make a binary choice.</p>\n<p>The block creates a container that includes a native checkbox control (<code>control</code> element) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot; attributes&gt;</code> and uses its functionality. A native control is hidden. An <code>autocomplete</code> attribute is <code>off</code> by default.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;Label 1&#39;,\n    name: &#39;name1&#39;,\n    value: &#39;1&#39;\n}\n</code></pre>\n<h2 id=\"-valid-block-s-attributes\">## Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n    <tr>\n        <th>Attribute</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies text string value of a checkbox.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies a checkbox name. A mandatory attribute. The name part of the name/value pair associated with this element for the purposes of form submission.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n            <code>String</code>\n        <td>Specifies a checkbox value. The value part of the name/value pair associated with this element for the purposes of form submission.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>An icon that is rendered using an <code>icon</code> block.</td>\n    </tr>\n</table>\n\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"themes-_theme-\">Themes <code>_theme</code></h3>\n<p>The block supports the following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>It a <code>_theme</code> modifier is not specified the native representation (<em>default</em>) of a control is available.</p>\n<p>Following example demonstrates this:</p>\n<ul>\n<li><p>default</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      text : &#39;default&#39;,\n      name: &#39;default&#39;,\n      value: &#39;1&#39;\n  }\n</code></pre>\n</li>\n<li><p>simple</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      mods : { theme : &#39;simple&#39; },\n      text : &#39;Theme Simple&#39;,\n      name: &#39;simple&#39;,\n      value: &#39;2&#39;\n  }\n</code></pre>\n</li>\n<li><p>normal</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n      text : &#39;Theme Normal&#39;,\n      name: &#39;normal&#39;,\n      value: &#39;3&#39;\n  }\n</code></pre>\n</li>\n</ul>\n<h3 id=\"font-size-_size-\">Font size <code>_size</code></h3>\n<p>Mandatory modifier for <em>normal</em> theme only.\nProvides the font size value to the checkbox text elements.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following example demonstrates this:</p>\n<table>\n    <tr>\n        <th>Size/Parameters</th>\n        <th>Font size</th>\n        <th>String height</th>\n        <th>Example</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;s&#39;\n    },\n    text : &#39;Size S&#39;,\n    name: &#39;name1&#39;,\n    value: &#39;1&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Size M&#39;,\n    name: &#39;name2&#39;,\n    value: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Size L&#39;,\n    name: &#39;name3&#39;,\n    value: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    text : &#39;Size XL&#39;,\n    name: &#39;name4&#39;,\n    value: &#39;4&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"types-_type-\">Types <code>_type</code></h3>\n<p>The <code>checkbox</code> block can be rendered as a buttons. For this use a <code>type</code> modifier with a <code>button</code> value. In this case a <code>checked</code> state of a checkbox is defined by clicking the button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;,\n        type : &#39;button&#39;\n    },\n    text : &#39;Label&#39;,\n    name: &#39;button&#39;,\n    value: &#39;1&#39;\n}\n</code></pre>\n<h3 id=\"states-of-a-checkbox\">States of a checkbox</h3>\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>Checkbox is focused if a block has a <code>focused</code> modifier with a <code>true</code> value.</p>\n<p>You can tick off the focused checkbox using <code>Space</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    text : &#39;Focused&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, focused : true },\n    text : &#39;Focused&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If a <code>disabled</code> modifier has <code>true</code> value the checkbox is visible, but is not available for the user action.</p>\n<p>Disabled checkbox cannot be focused by <code>Tab</code> pressing or mouse click.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    text : &#39;Disabled&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, disabled : true },\n    text : &#39;Disabled&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_checked-\"><code>_checked</code></h4>\n<p>A <code>checked</code> modifier with <code>true</code> value ticks off the checkbox, or clicks a button if a checkbox has <code>{ type : &#39;button&#39; }</code> modifier.</p>\n<p>A <code>checked</code> modifier can be used for all checkboxes in the group.ппе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, checked : true },\n    text : &#39;Checked&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, checked : true },\n    text : &#39;Checked&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>The <code>box</code> element is used to draw the checkbox. A native checkbox is hidden.</p>\n<p>The <code>box</code> element is added to the block on a template engine level.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>The <code>control</code> element is used to provide native control checkbox functionality.</p>\n<p>The <code>control</code> element is added to the block on a template engine level.</p>\n<h2 id=\"block-s-dependencies\">Block&#39;s dependencies</h2>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "checkbox",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/checkbox/79qZiqVxBY5r5ZaX_gUFH7MMT5Y/79qZiqVxBY5r5ZaX_gUFH7MMT5Y.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/9OMss9AsUlfFVAPsG8SlTTcVlLI/9OMss9AsUlfFVAPsG8SlTTcVlLI.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/C7ZkQCq0ZPpMgf1piyMISEARwPc/C7ZkQCq0ZPpMgf1piyMISEARwPc.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/dOZ5XkX9ojCi2r9kiY4DJa4YWvA/dOZ5XkX9ojCi2r9kiY4DJa4YWvA.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/Dz3sVcJ6LQvatoLktNJM35QPIso/Dz3sVcJ6LQvatoLktNJM35QPIso.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/FSuk4Im9Ao4_75PdjgBzm3U8Zww/FSuk4Im9Ao4_75PdjgBzm3U8Zww.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/GSqTjc8TX7KG5JpqDbcpS1N0CZM/GSqTjc8TX7KG5JpqDbcpS1N0CZM.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/IMYtMHFDZhN_agFpLXmNIDTAK4Q/IMYtMHFDZhN_agFpLXmNIDTAK4Q.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/Lc_qQBikKsf-9GuBeR0FLc4-3k0/Lc_qQBikKsf-9GuBeR0FLc4-3k0.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/MiwyveGqb-Q3hDh6b5dvanmXUc0/MiwyveGqb-Q3hDh6b5dvanmXUc0.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/QcTYyDncRH6DrvinlVti5iujuxU/QcTYyDncRH6DrvinlVti5iujuxU.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/sae-WwdkdYcrwwgUC5hw2NDih4/sae-WwdkdYcrwwgUC5hw2NDih4.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/Sgn48vD0-J9Y9jIc1geFcHu6qVA/Sgn48vD0-J9Y9jIc1geFcHu6qVA.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/SojNrUmXHg8qOEVNxLMELyPxf1I/SojNrUmXHg8qOEVNxLMELyPxf1I.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/tU4ymq_plszDwGgrM91feVLkv6s/tU4ymq_plszDwGgrM91feVLkv6s.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/v-9BRGnxLdDNcDKCfuStYG9PRYU/v-9BRGnxLdDNcDKCfuStYG9PRYU.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/XI4uPzI90-UiMiWRig9noeu3mrg/XI4uPzI90-UiMiWRig9noeu3mrg.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/ZQpxZtXWq6x9EgytPp4qnULF16g/ZQpxZtXWq6x9EgytPp4qnULF16g.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox/ZWO500NSNVuNcdNcItDCWIHDH3o/ZWO500NSNVuNcdNcItDCWIHDH3o.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox-group/E4bazg4TDlm1W1tmOFMVgeAT1k0/E4bazg4TDlm1W1tmOFMVgeAT1k0.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox-group/tnfPsUBEHfiKv4Ay-bSkmy06NTs/tnfPsUBEHfiKv4Ay-bSkmy06NTs.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox-group/uf6KFu6RRJ3CJRzlZj5THp-53ss/uf6KFu6RRJ3CJRzlZj5THp-53ss.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox-group/Yy5DRxHNPA5fsD-l76T556p1aMY/Yy5DRxHNPA5fsD-l76T556p1aMY.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"checkbox\">checkbox</h1>\n<p>Блок <code>checkbox</code> («чекбокс») позволяет управлять параметром выбора с двумя состояниями – включено и выключено. Используется, когда необходимо выбрать более одного варианта из предложенных.</p>\n<p>Блок создает контейнер, содержащий нативный контрол чекбокс (элемент <code>__control</code>) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot;&gt;</code>, который скрывается при использовании модификатора <code>_theme</code>.</p>\n<p>Атрибут <code>autocomplete</code> принудительно переведен в состояние <code>off</code> для обеспечения корректной работы блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;Вариант 1&#39;,\n    name: &#39;name1&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение текстовой строке чекбокса.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает имя чекбокса. Обязательный атрибут. Является частью пары имя / значение (name / val), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение чекбокса. Является частью пары имя / значение (name / val), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Иконка, которая отображается с помощью блока <code>icon</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;default&#39;,\n    name: &#39;default&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;Тема Simple&#39;,\n    name: &#39;simple&#39;,\n    val: &#39;2&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Тема Normal&#39;,\n    name: &#39;normal&#39;,\n    val: &#39;3&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размер <code>_size</code></h3>\n<p>Задает размер шрифта.</p>\n<p>Обязательный модификатор. Реализован только в теме <em>normal</em>.</p>\n<p>Доступно два размера реализации блока: <strong>M</strong>, <strong>L</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>блока</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота строки<br>элемента <code>__box</code></th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Размер M&#39;,\n    name: &#39;name2&#39;,\n    val: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>17px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Размер L&#39;,\n    name: &#39;name3&#39;,\n    val: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Тип <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки (модификатор <code>_type</code> в значении <code>_button</code>). В таком случае выбор элемента происходит нажатием на кнопку.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39; },\n    text : &#39;Кнопка Normal&#39;,\n    name: &#39;button&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>_focused</code> со значением <code>_true</code> чекбокс всегда находится в фокусе. Если блок представлен в виде кнопки, она приобретает желтую тень. Нажатие по чекбоксу можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    text : &#39;В фокусе&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, focused : true },\n    text : &#39;В фокусе&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии «неактивен» чекбокс виден, но недоступен для действий пользователя.</p>\n<p>Такой чекбос не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    text : &#39;Неактивна&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, disabled : true },\n    text : &#39;Неактивна&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_checked-\">Отмечен <code>_checked</code></h4>\n<p>Модификатор <code>_checked</code> в значении <code>true</code> определяет, что чекбокс отмечен (выбран).</p>\n<p>Модификатор <code>_checked</code> может быть применен ко всем чекбоксам в группе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, checked : true },\n    text : &#39;Отмечен&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, checked : true },\n    text : &#39;Отмечен&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>__box</code> служит для отрисовки чекбокса, нативный чекбокс скрыт.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n<h3 id=\"-__control-\">Контрол <code>__control</code></h3>\n<p>Элемент <code>__control</code> служит для использования функциональности нативного контрола чекбокса.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n<h2 id=\"-\">Зависимости блока</h2>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "checkbox-group",
                    "data": {
                        "en": {
                            "name": "checkbox-group",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/checkbox-group/E4bazg4TDlm1W1tmOFMVgeAT1k0/E4bazg4TDlm1W1tmOFMVgeAT1k0.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox-group/tnfPsUBEHfiKv4Ay-bSkmy06NTs/tnfPsUBEHfiKv4Ay-bSkmy06NTs.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox-group/uf6KFu6RRJ3CJRzlZj5THp-53ss/uf6KFu6RRJ3CJRzlZj5THp-53ss.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox-group/Yy5DRxHNPA5fsD-l76T556p1aMY/Yy5DRxHNPA5fsD-l76T556p1aMY.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"checkbox\">checkbox</h1>\n<p>Block <code>checkbox</code> is a graphical user interface element that permits the user to make a binary choice.</p>\n<p>The block creates a container that includes a native checkbox control (<code>control</code> element) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot; attributes&gt;</code> and uses its functionality. A native control is hidden. An <code>autocomplete</code> attribute is <code>off</code> by default.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;Label 1&#39;,\n    name: &#39;name1&#39;,\n    value: &#39;1&#39;\n}\n</code></pre>\n<h2 id=\"-valid-block-s-attributes\">## Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n    <tr>\n        <th>Attribute</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies text string value of a checkbox.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies a checkbox name. A mandatory attribute. The name part of the name/value pair associated with this element for the purposes of form submission.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n            <code>String</code>\n        <td>Specifies a checkbox value. The value part of the name/value pair associated with this element for the purposes of form submission.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>An icon that is rendered using an <code>icon</code> block.</td>\n    </tr>\n</table>\n\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"themes-_theme-\">Themes <code>_theme</code></h3>\n<p>The block supports the following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>It a <code>_theme</code> modifier is not specified the native representation (<em>default</em>) of a control is available.</p>\n<p>Following example demonstrates this:</p>\n<ul>\n<li><p>default</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      text : &#39;default&#39;,\n      name: &#39;default&#39;,\n      value: &#39;1&#39;\n  }\n</code></pre>\n</li>\n<li><p>simple</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      mods : { theme : &#39;simple&#39; },\n      text : &#39;Theme Simple&#39;,\n      name: &#39;simple&#39;,\n      value: &#39;2&#39;\n  }\n</code></pre>\n</li>\n<li><p>normal</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n      text : &#39;Theme Normal&#39;,\n      name: &#39;normal&#39;,\n      value: &#39;3&#39;\n  }\n</code></pre>\n</li>\n</ul>\n<h3 id=\"font-size-_size-\">Font size <code>_size</code></h3>\n<p>Mandatory modifier for <em>normal</em> theme only.\nProvides the font size value to the checkbox text elements.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following example demonstrates this:</p>\n<table>\n    <tr>\n        <th>Size/Parameters</th>\n        <th>Font size</th>\n        <th>String height</th>\n        <th>Example</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;s&#39;\n    },\n    text : &#39;Size S&#39;,\n    name: &#39;name1&#39;,\n    value: &#39;1&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Size M&#39;,\n    name: &#39;name2&#39;,\n    value: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Size L&#39;,\n    name: &#39;name3&#39;,\n    value: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    text : &#39;Size XL&#39;,\n    name: &#39;name4&#39;,\n    value: &#39;4&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"types-_type-\">Types <code>_type</code></h3>\n<p>The <code>checkbox</code> block can be rendered as a buttons. For this use a <code>type</code> modifier with a <code>button</code> value. In this case a <code>checked</code> state of a checkbox is defined by clicking the button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;,\n        type : &#39;button&#39;\n    },\n    text : &#39;Label&#39;,\n    name: &#39;button&#39;,\n    value: &#39;1&#39;\n}\n</code></pre>\n<h3 id=\"states-of-a-checkbox\">States of a checkbox</h3>\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>Checkbox is focused if a block has a <code>focused</code> modifier with a <code>true</code> value.</p>\n<p>You can tick off the focused checkbox using <code>Space</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    text : &#39;Focused&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, focused : true },\n    text : &#39;Focused&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If a <code>disabled</code> modifier has <code>true</code> value the checkbox is visible, but is not available for the user action.</p>\n<p>Disabled checkbox cannot be focused by <code>Tab</code> pressing or mouse click.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    text : &#39;Disabled&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, disabled : true },\n    text : &#39;Disabled&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_checked-\"><code>_checked</code></h4>\n<p>A <code>checked</code> modifier with <code>true</code> value ticks off the checkbox, or clicks a button if a checkbox has <code>{ type : &#39;button&#39; }</code> modifier.</p>\n<p>A <code>checked</code> modifier can be used for all checkboxes in the group.ппе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, checked : true },\n    text : &#39;Checked&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, checked : true },\n    text : &#39;Checked&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>The <code>box</code> element is used to draw the checkbox. A native checkbox is hidden.</p>\n<p>The <code>box</code> element is added to the block on a template engine level.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>The <code>control</code> element is used to provide native control checkbox functionality.</p>\n<p>The <code>control</code> element is added to the block on a template engine level.</p>\n<h2 id=\"block-s-dependencies\">Block&#39;s dependencies</h2>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "checkbox-group",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/checkbox-group/E4bazg4TDlm1W1tmOFMVgeAT1k0/E4bazg4TDlm1W1tmOFMVgeAT1k0.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox-group/tnfPsUBEHfiKv4Ay-bSkmy06NTs/tnfPsUBEHfiKv4Ay-bSkmy06NTs.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox-group/uf6KFu6RRJ3CJRzlZj5THp-53ss/uf6KFu6RRJ3CJRzlZj5THp-53ss.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/checkbox-group/Yy5DRxHNPA5fsD-l76T556p1aMY/Yy5DRxHNPA5fsD-l76T556p1aMY.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"checkbox-group\">checkbox-group</h1>\n<p>Блок <code>checkbox-group</code> служит для отображения группы однотипных переключателей – чекбоксов (блоков <code>checkbox</code>). Любой из переключателей группы может быть либо активен, либо нет, вне зависимости от состояния других переключателей.</p>\n<p>Блок позволяет управлять внешним видом и состоянием вложенных переключателей. </p>\n<p>В результате BEMHTML-преобразований блок <code>checkbox-group</code> становится HTML-элементом с тегом <code>&lt;span&gt;</code> – контейнером, содержащим группу чекбоксов и подписи к ним.</p>\n<h2 id=\"-\">Допустимые параметры блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td><code>String</code></td>\n        <td>Имя группы чекбоксов. Преобразуется в HTML-атрибут <code>name</code> вложенного блока <code>input</code>.</td>\n    </tr>\n    <tr>\n        <td>options</td>\n        <td><code>Array</code></td>\n        <td>Массив хешей. Каждый хеш соответствует одному переключателю группы чекбоксов и содержит набор его параметров.</td>\n    </tr><br></table>\n\n<p>Среди параметров, передаваемых для переключателя в массиве хешей <code>option</code>, обязательными являются:</p>\n<ul>\n<li><code>val</code> (<code>String</code>|<code>Number</code>) – значение, возвращаемое выбранным чекбоксом (элемент <code>checkbox__control</code>);</li>\n<li><code>text</code>  (<code>String</code>) – подпись, отображаемая для текущего переключателя. </li>\n</ul>\n<p>Помимо обязательных параметров, в массиве <code>option</code> могут быть переданы любые параметры, допустимые для блока <code>checkbox</code>, например, модификаторы <code>_checked</code> или <code>_disabled</code>.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<ul>\n<li>simple   </li>\n<li>normal  </li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером. </p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox-group&#39;,\n    name : &#39;checkbox-default&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox-group&#39;,\n    mods : { theme : &#39;simple&#39; },\n    name : &#39;checkbox-simple&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox-group&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h3 id=\"-_size-\">Размер переключателей <code>_size</code></h3>\n<p>Модификатор <code>_size</code> устанавливает размер переключателей для всех типов групп чекбоксов. Обязательный модификатор. </p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>В зависимости от значения модификатора <code>_type</code>, доступны следующие размеры реализации блока:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Обычная группа чекбоксов и <code>_type_line</code></th>\n        <th>Кнопочная группа чекбоксов (<code>_type_button</code>)</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>–</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>–</td>\n        <td>+</td>\n</table>\n\n<p>Размеры, на примере темы <em>normal</em> с модификатором <code>_type_button</code>:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;s&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;xl&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-_type-\">Тип группы чекбоксов <code>_type</code></h3>\n<p>Доступны следующие значения модификатор <code>_type</code>:</p>\n<ul>\n<li>Модификатор <code>_type</code> со значением <code>button</code>. Используется для создания кнопочной группы чекбоксов – блока из кнопок-переключателей. </li>\n<li>Модификатор <code>_type</code> со значением <code>line</code> используется для создания группы чекбоксов с выравниванием в строку. После каждого переключателя группы, кроме последнего, автоматически добавляется отступ справа. Размер отступа зависит от значения модификатора <code>_size</code>. Реализован только в теме <em>normal</em>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычная группа чекбоксов</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;checkbox-button&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Кнопочная группа чекбоксов (<code>_type_button</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Строчная группа чекбоксов (<code>_type_line</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;line&#39; \n    },\n    name : &#39;checkbox-line&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr><br></table>\n\n\n<h3 id=\"-_disabled-\">Неактивна <code>_disabled</code></h3>\n<p>В состоянии &quot;неактивна&quot; группа чекбоксов отображается, но недоступна для действий пользователя.  </p>\n<p>Такая группа чекбоксов не будет получать фокус (модификатор <code>_focused</code>).</p>\n<p>При установке модификатора <code>_disabled</code> для группы, всем переключателям группы также устанавливается модификатор <code>_disabled</code>. Как следствие, для них не будут:</p>\n<ul>\n<li>устанавливаться модификаторы состояния <code>_hovered</code>, <code>_pressed</code> и <code>_focused</code>;</li>\n<li>изменяться значения модификатора <code>_checked</code>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39;,\n        disabled : true \n    },\n    name : &#39;checkbox-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39;, checked : true }\n    ]\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда один из его элементов находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<p>Реализован во всех темах блока.</p>\n<h2 id=\"-\">Зависимости блока</h2>\n<p>Блок <code>checkbox-group</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>checkbox</code></li>\n<li><code>jquery</code></li>\n</ul>\n\n<h1 id=\"checkbox\">checkbox</h1>\n<p>Блок <code>checkbox</code> («чекбокс») позволяет управлять параметром выбора с двумя состояниями – включено и выключено. Используется, когда необходимо выбрать более одного варианта из предложенных.</p>\n<p>Блок создает контейнер, содержащий нативный контрол чекбокс (элемент <code>__control</code>) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot;&gt;</code>, который скрывается при использовании модификатора <code>_theme</code>.</p>\n<p>Атрибут <code>autocomplete</code> принудительно переведен в состояние <code>off</code> для обеспечения корректной работы блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;Вариант 1&#39;,\n    name: &#39;name1&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение текстовой строке чекбокса.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает имя чекбокса. Обязательный атрибут. Является частью пары имя / значение (name / val), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение чекбокса. Является частью пары имя / значение (name / val), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Иконка, которая отображается с помощью блока <code>icon</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;default&#39;,\n    name: &#39;default&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;Тема Simple&#39;,\n    name: &#39;simple&#39;,\n    val: &#39;2&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Тема Normal&#39;,\n    name: &#39;normal&#39;,\n    val: &#39;3&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размер <code>_size</code></h3>\n<p>Задает размер шрифта.</p>\n<p>Обязательный модификатор. Реализован только в теме <em>normal</em>.</p>\n<p>Доступно два размера реализации блока: <strong>M</strong>, <strong>L</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>блока</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота строки<br>элемента <code>__box</code></th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Размер M&#39;,\n    name: &#39;name2&#39;,\n    val: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>17px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Размер L&#39;,\n    name: &#39;name3&#39;,\n    val: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Тип <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки (модификатор <code>_type</code> в значении <code>_button</code>). В таком случае выбор элемента происходит нажатием на кнопку.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39; },\n    text : &#39;Кнопка Normal&#39;,\n    name: &#39;button&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>_focused</code> со значением <code>_true</code> чекбокс всегда находится в фокусе. Если блок представлен в виде кнопки, она приобретает желтую тень. Нажатие по чекбоксу можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    text : &#39;В фокусе&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, focused : true },\n    text : &#39;В фокусе&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии «неактивен» чекбокс виден, но недоступен для действий пользователя.</p>\n<p>Такой чекбос не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    text : &#39;Неактивна&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, disabled : true },\n    text : &#39;Неактивна&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_checked-\">Отмечен <code>_checked</code></h4>\n<p>Модификатор <code>_checked</code> в значении <code>true</code> определяет, что чекбокс отмечен (выбран).</p>\n<p>Модификатор <code>_checked</code> может быть применен ко всем чекбоксам в группе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, checked : true },\n    text : &#39;Отмечен&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, checked : true },\n    text : &#39;Отмечен&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>__box</code> служит для отрисовки чекбокса, нативный чекбокс скрыт.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n<h3 id=\"-__control-\">Контрол <code>__control</code></h3>\n<p>Элемент <code>__control</code> служит для использования функциональности нативного контрола чекбокса.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n<h2 id=\"-\">Зависимости блока</h2>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "dropdown",
                    "data": {
                        "en": {
                            "name": "dropdown",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/dropdown/3LxBJkGCYdsRIM3jgENaGnBRRuI/3LxBJkGCYdsRIM3jgENaGnBRRuI.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/dropdown/7xwP-2BJ2nd_leTd5MyNfCK8-wA/7xwP-2BJ2nd_leTd5MyNfCK8-wA.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/dropdown/8Fm0DE_2FJy1NDrA8TqWefQAcRg/8Fm0DE_2FJy1NDrA8TqWefQAcRg.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/dropdown/T2LPHF5xz8GwGt4VOGdjyOJF_lA/T2LPHF5xz8GwGt4VOGdjyOJF_lA.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/dropdown/TZQCpS37p6PxRpc44EhMDX395AA/TZQCpS37p6PxRpc44EhMDX395AA.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/dropdown/vkuviqNPhqQ2uV_ZhFfhVegfskc/vkuviqNPhqQ2uV_ZhFfhVegfskc.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/dropdown/WcgFmT2l-N83y2w6hRJ-qqSpzkY/WcgFmT2l-N83y2w6hRJ-qqSpzkY.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/dropdown/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": ""
                                }
                            ]
                        },
                        "ru": {
                            "name": "dropdown",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/dropdown/3LxBJkGCYdsRIM3jgENaGnBRRuI/3LxBJkGCYdsRIM3jgENaGnBRRuI.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/dropdown/7xwP-2BJ2nd_leTd5MyNfCK8-wA/7xwP-2BJ2nd_leTd5MyNfCK8-wA.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/dropdown/8Fm0DE_2FJy1NDrA8TqWefQAcRg/8Fm0DE_2FJy1NDrA8TqWefQAcRg.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/dropdown/T2LPHF5xz8GwGt4VOGdjyOJF_lA/T2LPHF5xz8GwGt4VOGdjyOJF_lA.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/dropdown/TZQCpS37p6PxRpc44EhMDX395AA/TZQCpS37p6PxRpc44EhMDX395AA.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/dropdown/vkuviqNPhqQ2uV_ZhFfhVegfskc/vkuviqNPhqQ2uV_ZhFfhVegfskc.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/dropdown/WcgFmT2l-N83y2w6hRJ-qqSpzkY/WcgFmT2l-N83y2w6hRJ-qqSpzkY.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/dropdown/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y/ZBE6qMuVVtpA4JVJk1Z0eHxMx2Y.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"dropdown\">dropdown</h1>\n<p>Блок <code>dropdown</code> используется для создания выпадающих элементов и позволяет изменять их состояние, поведение и внешний вид. Блок состоит из двух компонентов – управляющего компонента и попапа (блок <code>popup</code>), который отображается поверх остальных элементов страницы.</p>\n<p>Управляющий компонент при щелчке мышью вызывает попап (устанавливает для блока <code>popup</code> модификатор <code>_visible</code>).</p>\n<p>В зависимости от значения модификатора <code>_switcher</code>,  управляющим компонентом может служить ссылка, псевдоссылка или кнопка.</p>\n<h2 id=\"-\">Допустимые параметры блока</h2>\n<p>Допустимые параметры блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>switcher</td>\n        <td><code>String|BEMJSON</code></td>\n        <td>Текст управляющего компонента. Может содержать фрагмент BEMJSON, например, если нужно обернуть управляющий компонент в другой блок или передать ему дополнительные параметры. </td>\n    </tr>\n    <tr>\n        <td>popup</td>\n        <td><code>String|BEMJSON</code></td>\n        <td>Текст или фрагмент BEMJSON, отображаемый во всплывающем окне <code>popup</code>. BEMJSON при этом будет преобразован в HTML.</td>\n    </tr>\n</table>\n\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : { switcher : &#39;link&#39; },\n    switcher : &#39;link&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : { switcher : &#39;link&#39;, theme : &#39;simple&#39; },\n    switcher : &#39;link&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : { switcher : &#39;link&#39;, theme : &#39;normal&#39; },\n    switcher : &#39;link&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-_switcher-\">Управляющий компонент <code>_switcher</code></h3>\n<p>Обязательный модификатор.</p>\n<p>Модификатор отвечает за то, какой блок будет использоваться в качестве управляющего компонента:</p>\n<ul>\n<li><code>_switcher_link</code> - ссылка. В качестве управляющего компонента используется блок <code>link</code>.</li>\n<li><code>_switcher_button</code> - кнопка. В качестве управляющего компонента используется блок <code>button</code>.</li>\n</ul>\n<p>Реализован во всех темах.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    switcher : &#39;button&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-_disabled-\">Неактивен <code>_disabled</code></h3>\n<p>В состоянии &quot;неактивен&quot; дропдаун отображается, но недоступен для действий пользователя.</p>\n<p>Для такого блока не будет устанавливаться состояние <code>_opened</code> при щелчке мышью по управляющему компоненту.</p>\n<p>При установке для блока модификатора <code>_disabled</code>, для компонентов блока не будут производиться следующие действия:</p>\n<ul>\n<li>Блок </code>popup – установка модификатора <code>_visible</code>;</li>\n<li>Управляющий компонент <code>link</code> – установка состояния <code>_focused</code>. Ссылка не получает фокус по щелчку мышью или по нажатию клавиши <code>Tab</code>;</li>\n<li>Управляющий компонент <code>button</code>:<ul>\n<li>установка состояния <code>_focused</code>. Кнопка не получает фокус по щелчку мышью или по нажатию клавиши <code>Tab</code>;</li>\n<li>установка состояния <code>_hovered</code> при наведении указателем мыши.</li>\n</ul>\n</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;,\n        disabled : true\n    },\n    switcher : &#39;button&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_opened-\">Открыт <code>_opened</code></h4>\n<p>Модификатор <code>_opened</code> в значении <code>true</code> автоматически выставляется блоку при щелчке мышью по управляющему компоненту блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;,\n        opened : true\n    },\n    switcher : &#39;button&#39;,\n    popup : &#39;Hello, world!&#39;\n}\n</code></pre>\n<p>Модификатор снимается при повторном щелчке мышью по управляющему компоненту или за пределами попапа (зависит от наличия модификатора <code>_autoclosable</code> блока <code>popup</code>).</p>\n<h2 id=\"bemjson-switcher-popup-\">BEMJSON в атрибутах <code>switcher</code> и <code>popup</code></h2>\n<p>Атрибуты управляющего компонента и попапа могут содержать фрагмент БЭМ-дерева, например, если нужно обернуть управляющий компонент в другой блок или передать ему дополнительные параметры.</p>\n<p>Например, можно сделать кнопку управляющего компонента &quot;залипающей&quot;:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    switcher : {\n        block : &#39;button&#39;,\n        mods : { togglable : &#39;true&#39; },\n        text : &#39;custom button&#39;\n    },\n    popup : &#39;Popup message&#39;\n}\n</code></pre>\n<p>Или создать на основе блока выпадающий селект:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;dropdown&#39;,\n    mods : {\n        switcher : &#39;button&#39;,\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    switcher : &#39;Dropdown menu&#39;,\n    popup : {\n        block : &#39;menu&#39;,\n        mods : {\n            theme : &#39;normal&#39;,\n            size : &#39;xl&#39;,\n            select : &#39;check&#39;\n        },\n        content : [\n            {\n                block : &#39;menu-item&#39;,\n                val : 1,\n                content : &#39;First item&#39;\n            },\n            {\n                block : &#39;menu-item&#39;,\n                val : 2,\n                content : &#39;Second item&#39;\n            }\n        ]\n    }\n}\n</code></pre>\n<h2 id=\"-\">Зависимости блока</h2>\n<p>Блок <code>dropdown</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>dom</code></li>\n<li><code>popup</code></li>\n<li><code>button</code>/<code>link</code> (в зависимости от управляющего компонента <code>_switcher</code>)</li>\n</ul>\n\n<h1 id=\"popup\">popup</h1>\n<p>Блок <code>popup</code> используется для создания выпадающих элементов и позволяет изменять их состояние, поведение и внешний вид. Блок отображается поверх остальных элементов страницы.</p>\n<p>Попап может быть вызван различными элементами страницы, например, кнопками или псевдоссылками.</p>\n<p>В момент первого показа (установка модификатора <code>_visible</code>) DOM-элемент блока создается в конце <code>&lt;body&gt;</code>.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    content : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;simple&#39; },\n    content : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39; },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_visible-\">Видимый <code>_visible</code></h3>\n<p>Модификатор, отвечающий за видимость блока. При значении модификатора <code>false</code> блок не отображается.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39;, visible : true },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_direction-\">Расположение относительно родителя <code>_direction</code></h3>\n<p>Модификатор управляет положением попапа на странице, относительно вызвавшего его блока. Расположение блока определяется автоматически, исходя из массива допустимых расположений и положения родителя на странице.</p>\n<p>Выбранное расположение влияет на направление анимации раскрытия.</p>\n<p>По умолчанию используется следующий массив допустимых расположений:</p>\n<table>\n    <tr>\n        <th> Направление раскрытия </td>\n        <th> Индекс в массиве </td>\n    </tr>\n        <td> bottom-left </td>\n        <td> 0 </td>\n    </tr>\n    <tr>\n        <td> bottom-center </td>\n       <td> 1 </td>\n   </tr>\n    <tr>\n        <td> bottom-right</td>\n        <td> 2 </td>\n    </tr>\n    <tr>\n        <td> top-left </td>\n        <td> 3 </td>\n    </tr>\n    <tr>\n        <td> top-center </td>\n        <td> 4 </td>\n    </tr>\n    <tr>\n        <td> top-right </td>\n        <td> 5 </td>\n    </tr>\n    <tr>\n        <td> right-top </td>\n        <td> 6 </td>\n    </tr>\n    <tr>\n        <td> right-center </td>\n        <td> 7 </td>\n    </tr>\n    <tr>\n        <td> right-bottom </td>\n        <td> 8 </td>\n    </tr>\n    <tr>\n        <td> left-top </td>\n        <td> 9 </td>\n    </tr>\n    <tr>\n        <td> left-center </td>\n        <td> 10 </td>\n    </tr>\n    <tr>\n        <td> left-bottom </td>\n        <td> 11 </td>\n    </tr>\n</table>\n\n<p>Чтобы управлять расположением попапа, можно ограничить массив расположений, оставив только требуемые. Пользовательский массив нужно передать в качестве JS-параметра с ключом <code>directions</code>. При этом, из значений массива будет выбрано наиболее подходящее, исходя из положения родителя на странице.</p>\n<p>Например, если требуется, чтобы попап раскрывался над родителем:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { autoclosable : true, theme: &#39;simple&#39; },\n    js : { directions : [&#39;top-left&#39;, &#39;top-center&#39;, &#39;top-right&#39;] },\n    content : &#39;Hello, world!&#39;\n}\n</code></pre>\n<p>Или разместить попап справа по центру:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { autoclosable : true, theme: &#39;simple&#39; },\n    js : { directions : [&#39;right-center&#39;] },\n    content : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-_autoclosable-\">Автоматическое скрытие <code>_autoclosable</code></h3>\n<p>Модификатор отвечает за автоматическое скрытие попапа при клике вне блока. При установке модификатора <code>_autoclosable</code> в значении <code>_true</code> блок будет скрываться при щелчке за его пределами (будет снят модификатор <code>_visible</code>).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39;, autoclosable : true },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h2 id=\"-popup-\">Взаимосвязи между popup&#39;ами</h2>\n<p>Так как попап выносит себя в конец <code>&lt;body&gt;</code>, чтобы перекрывать другие элементы страницы, возникает необходимость в построении взаимосвязей. Блок умеет выстраивать связи Parent → [ Child, Child, ... ]. Для этого он выполняет проверку, вложен ли блок, вызывающий попап в другой <code>popup</code>. Потомки знают о наличии родителя.\nЕсли бы этих взаимосвязей не было, то родительский попап (при наличии модификатора <code>autoclosable</code> со значением <code>true</code>) закрылся бы при клике внутри дочернего.</p>\n<p>Другими словами, модификатор <code>autoclosable</code> со значением <code>true</code> означает, что попап закроется сам и закроет свои дочерние блоки при клике за пределами его самого и дочерних попапов.</p>\n<p>Дочерние блоки popup можно рассматривать в виде цепочки 1 → 2 → 3 → 4. При клике на 2-ом попапе – закрываются 3, 4. При клике в 1 – закрываются 2, 3, 4. При клике за пределами любого попапа из цепочки – закроются все.</p>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>popup</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n<li><code>objects</code></li>\n<li><code>functions__throttle</code></li>\n<li><code>keyboard</code></li>\n<li><code>ua</code></li>\n<li><code>jquery__event_pointer</code></li>\n</ul>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "icon",
                    "data": {
                        "en": {
                            "name": "icon",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/icon/736jrhNCMKyzz6eOAkelfMYfHUY/736jrhNCMKyzz6eOAkelfMYfHUY.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/AGqG4VvhTvV3H5tD4ed6nkvlHJ4/AGqG4VvhTvV3H5tD4ed6nkvlHJ4.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/b2PchFG0vbxDCGt-_1VzrN-GK0/b2PchFG0vbxDCGt-_1VzrN-GK0.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/bek_pi0vSgei-mm8QD-H3qy_E0c/bek_pi0vSgei-mm8QD-H3qy_E0c.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/bqsLdaiup-wWnOz-fYrlos47T_c/bqsLdaiup-wWnOz-fYrlos47T_c.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/DEqt3yJaoYjT7_-VWb6vuJTvDVk/DEqt3yJaoYjT7_-VWb6vuJTvDVk.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/NbDEoCuSh4Kby-HPFpw0JdrlyQQ/NbDEoCuSh4Kby-HPFpw0JdrlyQQ.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/w_tWuwVyYuwv7N6i7jChuJOj8Vc/w_tWuwVyYuwv7N6i7jChuJOj8Vc.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/ynzqkkw6NrAupB31X9zL3RrjsuA/ynzqkkw6NrAupB31X9zL3RrjsuA.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"icon\">icon</h1>\n<p><code>&lt;i&gt;</code>-based block for using as an element in other blocks, not for independent using. Picture is set as <code>background</code> property.</p>\n<p>In BEMJSON you can use both the modifier and the <code>url</code> field for a picture representation:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n     block : &#39;icon&#39;,\n     url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, mods : { social : &#39;twitter&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;checkbox&#39;,\n        mods : { theme : &#39;simple&#39;, type : &#39;button&#39; },\n        text : &#39;icon&#39;,\n        icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, url : &#39;../../../test.blocks/icon/_action/download.svg&#39; }\n    }\n</code></pre>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "icon",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/icon/736jrhNCMKyzz6eOAkelfMYfHUY/736jrhNCMKyzz6eOAkelfMYfHUY.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/AGqG4VvhTvV3H5tD4ed6nkvlHJ4/AGqG4VvhTvV3H5tD4ed6nkvlHJ4.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/b2PchFG0vbxDCGt-_1VzrN-GK0/b2PchFG0vbxDCGt-_1VzrN-GK0.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/bek_pi0vSgei-mm8QD-H3qy_E0c/bek_pi0vSgei-mm8QD-H3qy_E0c.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/bqsLdaiup-wWnOz-fYrlos47T_c/bqsLdaiup-wWnOz-fYrlos47T_c.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/DEqt3yJaoYjT7_-VWb6vuJTvDVk/DEqt3yJaoYjT7_-VWb6vuJTvDVk.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/NbDEoCuSh4Kby-HPFpw0JdrlyQQ/NbDEoCuSh4Kby-HPFpw0JdrlyQQ.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/w_tWuwVyYuwv7N6i7jChuJOj8Vc/w_tWuwVyYuwv7N6i7jChuJOj8Vc.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/icon/ynzqkkw6NrAupB31X9zL3RrjsuA/ynzqkkw6NrAupB31X9zL3RrjsuA.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"icon\">icon</h1>\n<p>Блок <code>icon</code> используется в качестве графического элемента в других блоках. В HTML представлен тегом <code>&lt;i&gt;</code>. Иконка задается через свойство <code>background</code> и, соответственно, не имеет возможности фоллбека.</p>\n<p>Иконку можно передать как через модификатор, так и через поле <code>url</code>:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;icon&#39;,\n    mods : { social : &#39;twitter&#39; }\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;icon&#39;,\n    url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;Кнопка с иконкой&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;button&#39;,\n    text : &#39;with icon&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    icon : {\n        block : &#39;icon&#39;,\n        url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n}\n</code></pre>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "image",
                    "data": {
                        "en": {
                            "name": "image",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/image/lC8WanGqU6n--Ri8zFvBCOidyB8/lC8WanGqU6n--Ri8zFvBCOidyB8.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/image/W7nRFaBTSLrx_BrCfEIKX7fNYJg/W7nRFaBTSLrx_BrCfEIKX7fNYJg.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"image\">image</h1>\n<p><code>&lt;img&gt;</code>-based block for images, using as a content (logo, for example).</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;image&#39;,\n        url : &#39;http://bem.info/m/_/20zuV2gLiyoaqrHv9LoBRTmB0Ow.svg&#39;,\n        width : 16,\n        height : 16,\n        alt : &#39;BEM&#39;,\n        title : &#39;Find us on bem.info&#39;\n    }\n</code></pre>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "image",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/image/lC8WanGqU6n--Ri8zFvBCOidyB8/lC8WanGqU6n--Ri8zFvBCOidyB8.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/image/W7nRFaBTSLrx_BrCfEIKX7fNYJg/W7nRFaBTSLrx_BrCfEIKX7fNYJg.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"image\">image</h1>\n<p>Блок <code>image</code> используется для вставки картинок.</p>\n<p>В HTML представлен тегом <code>&lt;img&gt;</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;image&#39;,\n    url : &#39;http://bem.info/m/_/20zuV2gLiyoaqrHv9LoBRTmB0Ow.svg&#39;,\n    width : 100,\n    height : 100,\n    alt : &#39;BEM&#39;,\n    title : &#39;Find us on bem.info&#39;\n}\n</code></pre>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>title</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает имя картинки.</td>\n    </tr>\n    <tr>\n        <td>alt</td>\n        <td>\n            <code>String</code></td>\n        <td>Обязательный атрибут. Устанавливает альтернативный текст для изображений. Такой текст позволяет получить текстовую информацию о картинке при отключенной в браузере загрузке изображений. <br>Блок распознается программами чтения с экрана для альтернативного воспроизведения.</td>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Адрес ссылки, по которой подгружается картинка.</td>\n    </tr>\n    <tr>\n        <td>width, height</td>\n        <td>\n            <code>Number</code>\n        </td>\n        <td>Значения, которые будут переданы в одноименные атрибуты картинки.</td>\n    </tr>\n</table>\n\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "input",
                    "data": {
                        "en": {
                            "name": "input",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/input/0jZ6y8S1ANsxfMm_E1peUdEhyy0/0jZ6y8S1ANsxfMm_E1peUdEhyy0.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/4hhBI_vwtFJlpwXu8DnFh6HdrYY/4hhBI_vwtFJlpwXu8DnFh6HdrYY.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/_rQiPCz_bRgjryQQWFEhXhyJnyM/_rQiPCz_bRgjryQQWFEhXhyJnyM.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/b18rvMU7reGrqw4kb0MSTpvQ3YI/b18rvMU7reGrqw4kb0MSTpvQ3YI.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/CdWLw8cu0kAjbKLZFrp_sw7N67s/CdWLw8cu0kAjbKLZFrp_sw7N67s.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/hwtIQVRUxvCPVxAJgWKBqBRt6Is/hwtIQVRUxvCPVxAJgWKBqBRt6Is.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/JCaTuV74Ua-xND0IW39wBPdvHBI/JCaTuV74Ua-xND0IW39wBPdvHBI.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/m1GvVMb4ZI4DvaKjyQWVNZLyquA/m1GvVMb4ZI4DvaKjyQWVNZLyquA.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/r1ntKHWLCj3QPfaejFd3aVNqDNo/r1ntKHWLCj3QPfaejFd3aVNqDNo.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/SwtjmJjtMXak9KKSsPMLXihNiQI/SwtjmJjtMXak9KKSsPMLXihNiQI.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/TOwrkpCDAmLABnXxE-2IBwxsCXo/TOwrkpCDAmLABnXxE-2IBwxsCXo.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/U1jetXgNoFl9qXtgecJy3MmnnJ0/U1jetXgNoFl9qXtgecJy3MmnnJ0.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/yAehEbulTw29FYJa_ye7ntQkTkU/yAehEbulTw29FYJa_ye7ntQkTkU.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"input\">input</h1>\n<p>The <strong>input</strong> block is intended to create different types of text fields:</p>\n<ul>\n<li>textarea</li>\n<li>password field</li>\n<li>search form</li>\n</ul>\n<p>In MSIE8 block <strong>input</strong> degrades to a native control <code>&lt;input attribute&gt;</code>; a text field is renedered as native text area <code>&lt;textarea attribute&gt;</code>.</p>\n<h2 id=\"available-block-s-attributes\">Available block&#39;s attributes</h2>\n<p>Available block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n    <tr>\n        <th>Attribute</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>String</td>\n        <td>Value to be sent to the server. It is empty by default.</td>\n    </tr>\n    <tr>\n        <td>placeholder</td>\n        <td>String</td>\n        <td>Text to be replaced. Has an empty value by default.</td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>String</td>\n        <td>Unique block modifier. The value is randomly generated by default. Could be specified manually.</td>\n    </tr>\n    <tr>\n        <td>label</td>\n        <td><code>string</code></td>\n        <td>Lable above an input field.</td>\n    </tr>\n</table>\n\n\n<p>Available block&#39;s attributes that could be provided in <code>attrs</code> field in BEMJSON:</p>\n<ul>\n<li>name (<em>common</em>)</li>\n<li>tabindex (<em>common</em>)</li>\n<li>spellcheck (<em>common</em>)</li>\n<li>accesskey (<em>common</em>)</li>\n<li>rows (<code>_textarea</code>)</li>\n<li>cols (<code>_textarea</code>)</li>\n<li>readonly (<code>_textarea</code>)</li>\n<li>wrap (<code>_textarea</code>)</li>\n<li>maxlength (<code>_textarea</code>)</li>\n</ul>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"-_theme-\"><code>_theme</code></h3>\n<p>The block is available in the following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>If the theme is not specified the block obtains default values:</p>\n<ul>\n<li>Input field type: text field</li>\n<li>Width: 100%</li>\n<li>Theme: native representation</li>\n<li>Text area size: <code>cols:10</code>, <code>rows:10</code></li>\n</ul>\n<p>Following example demonstrates this:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    placeholder : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;simple&#39; },\n    placeholder : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39; },\n    placeholder : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_type-\"><code>_type</code></h3>\n<p>The following types of <strong>input</strong> block are available:</p>\n<ul>\n<li><code>_textarea</code></li>\n<li><code>_password</code></li>\n<li><code>_search</code></li>\n</ul>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<table>\n    <tr>\n        <th>Type / Realisation</th>\n        <th>default</th>\n        <th>simple</th>\n        <th>normal</th>\n    </tr>\n    <tr>\n        <td> <code>_textarea</code></td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { type : &#39;textarea&#39; },\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        type : &#39;textarea&#39;\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        type : &#39;textarea&#39;\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td> <code>_password</code></td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    placeholder : &#39;default&#39;,\n    mods : { type : &#39;password&#39; }\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        type : &#39;password&#39;\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        type : &#39;password&#39;\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td> <code>_search</code></td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { type : &#39;search&#39; },\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        type : &#39;search&#39;\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        type : &#39;search&#39;\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"block-s-state\">Block&#39;s state</h3>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If block is disabled all its elements become unavailable for user&#39;s action.</p>\n<p>The <strong>input</strong> block is active by default even it disabled modifier is not specified.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, disabled : true },\n    val : &#39;disabled&#39;\n}\n</code></pre>\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>The input field is focused if a block has a <code>_focused</code> modifier with <code>true</code> vlue.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<pre><code>{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, focused : true },\n    val : &#39;focused&#39;\n}\n</code></pre><h3 id=\"-_has-clear-\"><code>_has-clear</code></h3>\n<p>A <code>clear</code> cross element appears in the input field if a block has a <code>_has-clear</code> modifier with <code>true</code> value.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<table>\n    <tr>\n        <th>default</th>\n        <th>simple</th>\n        <th>normal</th>\n    </tr>\n    <tr>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { &#39;has-clear&#39; : true },\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        &#39;has-clear&#39; : true\n    },\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        &#39;has-clear&#39; : true\n    },\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<hr>\n<p><strong>NB</strong> Be aware the modifier <code>has-clear</code> is not available for a <code>search field</code> in <em>simple</em> theme.</p>\n<hr>\n<h3 id=\"-_has-label-\"><code>_has-label</code></h3>\n<p>A lable (<code>__label</code> element) above the input field is available if a block has a <code>_has-label</code> modifier with <code>true</code> value.</p>\n<p>The block is available in <code>simple</code> and <code>normal</code> themes.</p>\n<table>\n    <tr>\n        <th>default</th>\n        <th>simple</th>\n        <th>normal</th>\n    </tr>\n    <tr>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { &#39;has-clear&#39; : true },\n    label : &#39;Label&#39;,\n    placeholder : &#39;default&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;simple&#39;,\n        &#39;has-label&#39; : true\n    },\n    label : &#39;Label&#39;,\n    placeholder : &#39;simple&#39;\n}\n            </code></pre>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        &#39;has-label&#39; : true\n    },\n    label : &#39;Label&#39;,\n    placeholder : &#39;normal&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<p>The following elements provide visual representation of a <strong>input</strong> block:</p>\n<h3 id=\"__box\">__box</h3>\n<p>A mandatory element.</p>\n<p>An element fot input field forming (native input field is hidden).</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>A button (cross element) intended to clear an input field content.</p>\n<p>The cross element is unavailable if a block has a <code>has-clear</code> modifier with <code>false</code> value.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, &#39;has-clear&#39; : true },\n    label : &#39;label&#39;\n}\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>A mndatory element.</p>\n<p>This element is processed by BEMHTML or BH template engine to a native <code>&lt;input attribute&gt;</code> control.</p>\n<h3 id=\"__label\">__label</h3>\n<p>A lablel above an input field.</p>\n<p>This element provides a lable above an input field. In HTML is rendered as a <code>&lt;label&gt;</code> tag. A lable is linked with an <code>&lt;input&gt;</code> tag by the unique <code>id</code> identifier, that is generated random by default.</p>\n<p>Click the input field to set a <code>focused</code> modifier.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, &#39;has-label&#39; : true },\n    label : &#39;label&#39;\n}\n</code></pre>\n<h2 id=\"block-s-dependencies\">Block&#39;s dependencies</h2>\n<p>An <strong>input</strong> block depends on:</p>\n<ul>\n<li><code>base-control</code>, that provides public API;</li>\n<li><code>i-bem__dom</code> block.</li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "input",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/input/0jZ6y8S1ANsxfMm_E1peUdEhyy0/0jZ6y8S1ANsxfMm_E1peUdEhyy0.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/4hhBI_vwtFJlpwXu8DnFh6HdrYY/4hhBI_vwtFJlpwXu8DnFh6HdrYY.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/_rQiPCz_bRgjryQQWFEhXhyJnyM/_rQiPCz_bRgjryQQWFEhXhyJnyM.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/b18rvMU7reGrqw4kb0MSTpvQ3YI/b18rvMU7reGrqw4kb0MSTpvQ3YI.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/CdWLw8cu0kAjbKLZFrp_sw7N67s/CdWLw8cu0kAjbKLZFrp_sw7N67s.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/hwtIQVRUxvCPVxAJgWKBqBRt6Is/hwtIQVRUxvCPVxAJgWKBqBRt6Is.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/JCaTuV74Ua-xND0IW39wBPdvHBI/JCaTuV74Ua-xND0IW39wBPdvHBI.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/m1GvVMb4ZI4DvaKjyQWVNZLyquA/m1GvVMb4ZI4DvaKjyQWVNZLyquA.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/r1ntKHWLCj3QPfaejFd3aVNqDNo/r1ntKHWLCj3QPfaejFd3aVNqDNo.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/SwtjmJjtMXak9KKSsPMLXihNiQI/SwtjmJjtMXak9KKSsPMLXihNiQI.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/TOwrkpCDAmLABnXxE-2IBwxsCXo/TOwrkpCDAmLABnXxE-2IBwxsCXo.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/U1jetXgNoFl9qXtgecJy3MmnnJ0/U1jetXgNoFl9qXtgecJy3MmnnJ0.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/input/yAehEbulTw29FYJa_ye7ntQkTkU/yAehEbulTw29FYJa_ye7ntQkTkU.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"input\">input</h1>\n<p>Блок <code>input</code> служит для создания различных типов текстовых полей:</p>\n<ul>\n<li>поле ввода (значение по умолчанию);</li>\n<li>текстовая область;</li>\n<li>поле с паролем;</li>\n<li>поисковая форма.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Значение, отправляемое на сервер. По умолчанию пустое.</td>\n    </tr>\n    <tr>\n        <td>placeholder</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Подсказка в поле ввода.</td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Уникальный идентификатор блока. По умолчанию генерируется случайным образом, если явно не задан в BEMJSON.</td>\n    </tr>\n    <tr>\n        <td>label</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Метка над полем ввода.</td>\n    </tr>\n</table>\n\n\n<p>Другие допустимые атрибуты блока могут быть заданы в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    placeholder : &#39;default&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;simple&#39; },\n    placeholder : &#39;simple&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39; },\n    placeholder : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры <code>_size</code></h3>\n<p>Задает размер всем типам текстовых полей. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота<br>строки</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;s&#39; },\n    placeholder : &#39;Small&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39; },\n    placeholder : &#39;Medium&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;l&#39; },\n    placeholder : &#39;Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;xl&#39; },\n    placeholder : &#39;X-Large&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Типы <code>_type</code></h3>\n<p>Блок представлен следующими типами:</p>\n<ul>\n<li>текстовая область (<code>_textarea</code>)</li>\n<li>поле с паролем (<code>_password</code>)</li>\n<li>поисковая форма (<code>_search</code>)</li>\n</ul>\n<p>Без указания типа поля блок <code>input</code> по умолчанию получает значение <code>&lt;input type=&quot;text&quot;/&gt;</code>.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Реализация</th>\n    </tr>\n    <tr>\n        <td>\n            <code>_textarea</code>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;textarea&#39; },\n    placeholder : &#39;Тексторвая область&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>_password</code>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39;, type : &#39;password&#39; },\n    placeholder : &#39;Поле с паролем&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>_search</code>\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;search&#39; },\n    placeholder : &#39;Поисковая форма&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии блока «неактивен» поле ввода и все его элементы становятся недоступными для действий пользователя.</p>\n<p>Если модификатор <code>_disabled</code> не установлен, инпут по умолчанию активен.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    val : &#39;Неактивно&#39;\n}\n</code></pre>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>_focused</code> со значением <code>true</code> поле ввода находится в фокусе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    val : &#39;В фокусе&#39;\n}\n</code></pre>\n<h3 id=\"-_has-clear-\">Очистка содержимого <code>_has-clear</code></h3>\n<p>Модификатор <code>_has-clear</code> в значении <code>_true</code> отображает в инпуте крестик для очистки содержимого (элемент <code>__clear</code>).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, &#39;has-clear&#39; : true },\n    placeholder : &#39;Добавлен крестик для очистки содержимого&#39;\n}\n</code></pre>\n<h3 id=\"-_has-label-\">Метка над полем ввода <code>_has-label</code></h3>\n<p>Модификатор <code>_has-label</code> в значении <code>_true</code> указывает на наличие метки над полем ввода (элемент <code>__label</code>).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, &#39;has-label&#39; : true },\n    label : &#39;Label&#39;,\n    placeholder : &#39;Метка над полем ввода&#39;\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__box\">__box</h3>\n<p>Обязательный элемент.</p>\n<p>Элемент, рисующий поля ввода (поля нативного инпута скрыты).</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Кнопка очистки содержимого инпута («крестик»).</p>\n<p>По умолчанию модификатор <code>_has-label</code> имеет значение <code>_false</code>, при котором крестик не отображается. Для отображения крестика нужно установить модификатор в значение <code>_true</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size: &#39;m&#39;, &#39;has-clear&#39; : true },\n    placeholder : &#39;Добавлен крестик для очистки содержимого&#39;\n}\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>Обязательный элемент.</p>\n<p>BEMHTML- или BH-шаблоном преобразуется в нативный контрол <code>&lt;input&gt;</code>.</p>\n<h3 id=\"__label\">__label</h3>\n<p>Метка над полем ввода.\nЭлемент добавляет метку с тегом <code>&lt;label&gt;</code> над полем ввода. Связь метки с тэгом <code>&lt;input&gt;</code> устанавливается с помощью идентификатора <code>id</code>, который может генерироваться автоматически.\nПри щелчке кнопкой мыши на метку в поле ввода будет установлен фокус.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;input&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, &#39;has-label&#39; : true },\n    label : &#39;Метка над полем ввода&#39;\n}\n</code></pre>\n<h2 id=\"-\">Зависимости блока</h2>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "link",
                    "data": {
                        "en": {
                            "name": "link",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/link/chWrNSQqHxfoi-xep8pjJQnF124/chWrNSQqHxfoi-xep8pjJQnF124.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/link/MlN17lxDfpZbuzsh5l2N1VNo16U/MlN17lxDfpZbuzsh5l2N1VNo16U.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/link/rVrcuNJ0PMv5S2Q4KNH4HsM6Zds/rVrcuNJ0PMv5S2Q4KNH4HsM6Zds.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/link/v4bNHfaIobOFWcneUxLQDbb4T9g/v4bNHfaIobOFWcneUxLQDbb4T9g.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/link/Y3yr9bNzwYkA9sSkV8EkqO30JYI/Y3yr9bNzwYkA9sSkV8EkqO30JYI.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "link",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/link/chWrNSQqHxfoi-xep8pjJQnF124/chWrNSQqHxfoi-xep8pjJQnF124.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/link/MlN17lxDfpZbuzsh5l2N1VNo16U/MlN17lxDfpZbuzsh5l2N1VNo16U.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/link/rVrcuNJ0PMv5S2Q4KNH4HsM6Zds/rVrcuNJ0PMv5S2Q4KNH4HsM6Zds.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/link/v4bNHfaIobOFWcneUxLQDbb4T9g/v4bNHfaIobOFWcneUxLQDbb4T9g.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/link/Y3yr9bNzwYkA9sSkV8EkqO30JYI/Y3yr9bNzwYkA9sSkV8EkqO30JYI.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"link\">link</h1>\n<p>Блок <code>link</code> используется для создания различных типов ссылок и предоставляет возможность изменять их состояние, внешний вид и поведение.</p>\n<h2 id=\"-\">Варианты использования ссылок</h2>\n<p>Блок <strong>link</strong> служит для создания следующих типов ссылок:</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Описание</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычная ссылка</td>\n        <td>Применяется для любых ссылок веб-интерфейса. Используется по умолчанию.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;link&#39;,\n    url : &#39; #&#39;,\n    content : &#39;link&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Псевдоссылка</td>\n        <td>Разновидность ссылки, при нажатии по которой в браузере не осуществляется переход. Применяется для вызова сценариев.\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;link&#39;,\n    mods : { pseudo : true, theme: &#39;normal&#39; },\n    content : &#39;pseudo&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h2 id=\"-\">Допустимые параметры блока</h2>\n<p>Допустимые параметры блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td><code>String|BEMJSON</code></td>\n        <td>Адрес ссылки. Если указан, значение <code>url</code> становится атрибутом <code>href</code>. Обязательный параметр для обычной ссылки. Если в качестве значения передан BEMJSON, он будет обработан и вернет строку.</td>\n    </tr>\n    <tr>\n        <td>title</td>\n        <td><code>String</code></td>\n        <td>Текст всплывающей подсказки</td>\n    </tr>\n    <tr>\n        <td>target</td>\n        <td><code>String</code></td>\n        <td>Целевое окно. Обычно атрибут указывается со значением <code>_blank</code>, чтобы открыть адрес ссылки в новом окне.</td>\n    </tr>\n    <tr>\n        <td>tabIndex</td>\n        <td><code>Number</code></td>\n        <td> Индекс, задающий последовательность перехода между ссылками при нажатии на клавишу <code>Tab</code>. Атрибут преобразуется в нативный атрибут <code>tabindex</code>.</td>\n    </tr>\n</table>\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Например:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;link&#39;,\n    url : &#39;#&#39;,\n    content : &#39;link&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;link&#39;,\n    mods : { theme : &#39;simple&#39; },\n    url : &#39;#&#39;,\n    content : &#39;link&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;link&#39;,\n    mods : { theme : &#39;normal&#39; },\n    url : &#39;#&#39;,\n    content : &#39;link&#39;\n}\n</code></pre>\n<h3 id=\"-_pseudo-\">Псевдоссылка <code>_pseudo</code></h3>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;link&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        pseudo : true\n    },\n    title : &#39;pseudo mod are toggled&#39;,\n    content : &#39;link&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью. Нажатие по ней можно выполнить клавишей <code>Enter</code>.</p>\n<pre><code>{\n    block : &#39;link&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        focused : true\n    },\n    url : &#39;#&#39;,\n    content : &#39;_focused&#39;\n}\n</code></pre><h4 id=\"-_disabled-\">Неактивна <code>_disabled</code></h4>\n<p>В состоянии &quot;не активна&quot; ссылка отображается, но недоступна для действий пользователя.</p>\n<p>Для такой ссылки не будет:</p>\n<ul>\n<li>устанавливаться модификатор <code>_focused</code> в момент получения фокуса;</li>\n<li>осуществляться переход, если задан атрибут <code>url</code>;</li>\n<li>генерироваться БЭМ-событие <code>click</code>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;link&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        disabled : true\n    },\n    url : &#39;#&#39;,\n    content : &#39;_disabled&#39;\n}\n</code></pre>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>link</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>base-control</code></li>\n<li><code>i-bem__dom</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "menu",
                    "data": {
                        "en": {
                            "name": "menu",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/menu/8mTA6MmyQr8VqdzJxhkrwh1ypW4/8mTA6MmyQr8VqdzJxhkrwh1ypW4.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu/j09oi8qGORMEkQNDKOmalqZBM1A/j09oi8qGORMEkQNDKOmalqZBM1A.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu/mNU2Ucfjxab1clvoW45IQTWsm30/mNU2Ucfjxab1clvoW45IQTWsm30.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu/V9ZPDhB9nl8kg2So6etTZN9GhGM/V9ZPDhB9nl8kg2So6etTZN9GhGM.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu/vOj7Zu3fBIVl7z06MI97PrXpqWI/vOj7Zu3fBIVl7z06MI97PrXpqWI.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu/wCjQ3Ywp-Sr5jbo9tVEXSlFoKxU/wCjQ3Ywp-Sr5jbo9tVEXSlFoKxU.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/00ejmLqt61w5ksAsfBl7KgE4dBE/00ejmLqt61w5ksAsfBl7KgE4dBE.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/47lHiiyDspaBs5AiC22G42Y-N_o/47lHiiyDspaBs5AiC22G42Y-N_o.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/Sgw4iIN4STar-QE05xyBmgntftw/Sgw4iIN4STar-QE05xyBmgntftw.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/sURVY49aNm3TBC1XVeOG1Q5_vi8/sURVY49aNm3TBC1XVeOG1Q5_vi8.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/T77G-B0x1-Z9ZaPqpW_TAskNFI8/T77G-B0x1-Z9ZaPqpW_TAskNFI8.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "menu",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/menu/8mTA6MmyQr8VqdzJxhkrwh1ypW4/8mTA6MmyQr8VqdzJxhkrwh1ypW4.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu/j09oi8qGORMEkQNDKOmalqZBM1A/j09oi8qGORMEkQNDKOmalqZBM1A.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu/mNU2Ucfjxab1clvoW45IQTWsm30/mNU2Ucfjxab1clvoW45IQTWsm30.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu/V9ZPDhB9nl8kg2So6etTZN9GhGM/V9ZPDhB9nl8kg2So6etTZN9GhGM.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu/vOj7Zu3fBIVl7z06MI97PrXpqWI/vOj7Zu3fBIVl7z06MI97PrXpqWI.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu/wCjQ3Ywp-Sr5jbo9tVEXSlFoKxU/wCjQ3Ywp-Sr5jbo9tVEXSlFoKxU.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/00ejmLqt61w5ksAsfBl7KgE4dBE/00ejmLqt61w5ksAsfBl7KgE4dBE.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/47lHiiyDspaBs5AiC22G42Y-N_o/47lHiiyDspaBs5AiC22G42Y-N_o.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/Sgw4iIN4STar-QE05xyBmgntftw/Sgw4iIN4STar-QE05xyBmgntftw.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/sURVY49aNm3TBC1XVeOG1Q5_vi8/sURVY49aNm3TBC1XVeOG1Q5_vi8.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/T77G-B0x1-Z9ZaPqpW_TAskNFI8/T77G-B0x1-Z9ZaPqpW_TAskNFI8.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"menu\">menu</h1>\n<p>Блок <code>menu</code> используется для создания различных типов меню и селектов.</p>\n<p>В результате BEMHTML-преобразований на странице блок становится HTML-элементом с тегом <code>&lt;div&gt;</code> и свойством <code>role=&quot;menu&quot;</code>. HTML-элементом содержит набор переключателей – пунктов меню (блок <code>menu-item</code>).</p>\n<p>Он предоставляет возможность изменять размер и внешний вид блоков меню, управлять поведением вложенных блоков – пунктов меню или селекта.</p>\n<h2 id=\"-\">Варианты использования меню</h2>\n<p>Блок <code>menu</code> служит для создания различных типов меню:</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Описание</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Меню-переключатель</td>\n        <td>Применяется для создания меню или селектов, позволяющих только одиночный выбор.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;, \n        select : &#39;radio&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Селект с множественным выбором (<code>_select_check</code>)</td>\n        <td>При щелчке мышью по пункту меню его состояние меняется на противоположное. Если пункт был активен – он деактивируется, и наоборот.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;,\n        select : &#39;check&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n<tr>\n        <td>Простой список (без модификатора <code>_select</code>)</td>\n        <td>При щелчке мышью по пункту меню его состояние не меняется. Модификатор <code>_cheked</code> не устанавливается.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;,\n        select : &#39;check&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr><br></table>\n\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { select : &#39;check&#39; },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { theme : &#39;simple&#39;, select : &#39;check&#39; },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { theme : &#39;normal&#39;, select : &#39;check&#39;, size : &#39;xl&#39; },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры меню <code>_size</code></h3>\n<p>Задает размер всем типам меню. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер/Параметры</th>\n        <th>Размер шрифта</th>\n        <th>Высота строки <code>line-heigh</code></th>\n        <th>Левый отступ <code>padding-left</code></th>\n        <th>Отступ <code>padding</code></th>\n        <th>Размер &quot;галочки&quot; для темы normal</code></th>\n    </tr>\n    <tr>\n        <td>s</td>\n        <td>13px</td>\n        <td>24px</td>\n        <td>30px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        select : &#39;check&#39;, \n        size : &#39;s&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>m</td>\n        <td>13px</td>\n        <td>24px</td>\n        <td>30px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        select : &#39;check&#39;, \n        size : &#39;m&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>l</td>\n        <td>15px</td>\n        <td>28px</td>\n        <td>34px</td>\n        <td>15px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        select : &#39;check&#39;, \n        size : &#39;l&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>xl</td>\n        <td>15px</td>\n        <td>32px</td>\n        <td>40px</td>\n        <td>15px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        select : &#39;check&#39;, \n        size : &#39;xl&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-_select-\">Способ выбора пунктов <code>_select</code></h3>\n<p>Модификатор <code>_select</code> управляет поведением пунктов меню при щелчке по ним мышью, например, возможностью множественного выбора пунктов меню.</p>\n<p>Доступны следующие значения модификатора:</p>\n<ul>\n<li><code>check</code> – селект. Пункт, по которому был произведен щелчек мышью, изменит состояние на противоположное и будет менять состояние при повторных щелчках. Доступна возможность множественного выбора пунктов;</li>\n<li><code>radio</code> – переключатель. При щелчке мышью будет производиться переключение активных пунктов меню. При повторном щелчке пункт, по которому он был произведен, останется <strong>активным</strong>. Множественный выбор недоступен;</li>\n<li><code>radio-check</code> – переключатель. При щелчке мышью будет производиться переключение активных пунктов меню. При повторном щелчке пункт, по которому он был произведен, станет <strong>неактивным</strong>. Множественный выбор недоступен.</li>\n</ul>\n<p>Реализован во всех темах блока.</p>\n<table>\n    <tr>\n        <th>Выбор пунктов</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Только один (<code>_select_radio</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        select : &#39;radio&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            mods : { checked : true },\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Множественный выбор или ни одного (<code>_select_check</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        select : &#39;check&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            mods : { checked : true },\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Один или ни одного (<code>_select_radio-check</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        select : &#39;radio-check&#39; \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            mods : { checked : true },\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        select : &#39;check&#39;, \n        size : &#39;xl&#39;,\n        focused : true \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__group\">__group</h3>\n<p>Элемент <code>__group</code> служит для группировки пунктов меню. Пункты, которые нужно сгруппировать, помещаются в поле <code>content</code> элемента. Группы визуально отделяются серой чертой.</p>\n<p>Например:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39;, select : &#39;radio&#39;, focused : true  },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;New&#39;\n        },\n        {\n            elem : &#39;group&#39;,\n            content : [\n                {\n                    block : &#39;menu-item&#39;,\n                    mods : { checked : true },\n                    val : 2,\n                    content : &#39;Open&#39;\n                },\n                {\n                    block : &#39;menu-item&#39;,\n                    val : 3,\n                    content : &#39;Open Recent&#39;\n                }\n            ]\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 4,\n            content : &#39;Open Not so Recent&#39;\n        }\n    ]\n}\n</code></pre>\n<h3 id=\"__group-title\">__group-title</h3>\n<p>Элемент позволяет задать заголовок для группы пунктов меню, создаваемой с помощью элемента <code>__group</code>.</p>\n<p>Например:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;xl&#39;, \n        select : &#39;radio&#39;, \n        focused : true  \n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;New&#39;\n        },\n        {\n            elem : &#39;group&#39;,\n            title : &#39;Cool title&#39;,\n            content : [\n                {\n                    block : &#39;menu-item&#39;,\n                    mods : { checked : true },\n                    val : 2,\n                    content : &#39;Open&#39;\n                },\n                {\n                    block : &#39;menu-item&#39;,\n                    val : 3,\n                    content : &#39;Open Recent&#39;\n                }\n            ]\n        }\n    ]\n}\n</code></pre>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>menu</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>menu-item</code></li>\n<li><code>dom</code></li>\n<li><code>keyboard</code></li>\n<li><code>base-control</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n\n<h1 id=\"menu-item\">menu-item</h1>\n<p>Блок <code>menu-item</code> служит для создания пунктов меню или селекта. Используется внутри блока <code>menu</code>. Блок <code>menu-item</code> предоставляет возможность изменять состояние, содержимое и порядок отображения пунктов меню.</p>\n<p>Блок <code>menu-item</code> в результате BEMHTML-преобразований на странице становится HTML-элементом с тегом <code>&lt;div&gt;</code> со свойством <code>role=&quot;menuitem&quot;</code>.</p>\n<h2 id=\"-\">Варианты использования пунктов меню</h2>\n<p>Блок <code>menu-item</code> служит для создания различных типов пунктов меню:</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Описание</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Переключатель</td>\n        <td>Применяется для любых выпадающих списков, табов, пунктов меню и селектов и т.п. Используется по умолчанию.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    val : 1,\n    content : &#39;Selector value&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Ссылка</td>\n        <td>Элемент меню со ссылкой. Блок <code>link</code> помещается в поле <code>content</code> BEMJSON-декларации блока. Так же требуется установить блоку модификатор <code>type</code> в значение <code>link</code>.\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    mods : { type : &#39;link&#39; },\n    val : 2,\n    content : {\n        block : &#39;link&#39;,\n        url : &#39;#&#39;,\n        content : &#39;Link 1&#39;\n    }\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td><code>String|Number</code></td>\n        <td>Значение, возвращаемое пунктом меню, если он выбран.</td>\n    </tr>\n</table>\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_type-\">Типы блока <code>_type</code></h3>\n<p>Модификатор <code>_type</code> в значении <code>_link</code> позволяет создавать пункт меню-ссылку. Блок <code>link</code> при этом помещается в поле <code>content</code> BEMJSON-декларации блока. Если модификатор <code>_type_link</code> не установлен, вложенная ссылка будет доступна для действий пользователя при установленном модификаторе <code>_disabled</code>.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        type : &#39;link&#39; \n    },\n    content : {\n        block : &#39;link&#39;,\n        url : &#39;#&#39;,\n        content : &#39;Link 1&#39;\n    }\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии &quot;неактивен&quot; пункт меню отображается, но недоступен для действий пользователя.  </p>\n<p>Такой пункт меню не изменяет состояние при щелчке мышью. Если для блока установлен модификатор <code>_type_link</code>, переход по ссылке не осуществляется. </p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        disabled : true \n    },\n    content : &#39;_disabled&#39;\n}\n</code></pre>\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие &quot;наведение курсором&quot; на пункт меню.</p>\n<p>Реализован во всех темах блока.</p>\n<p>Автоматически выставляется при наведении указателем мыши на пункт меню.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        hovered : true \n    },\n    content : &#39;_hovered&#39;\n}\n</code></pre>\n<h4 id=\"-_checked-\">Выбранный пункт меню <code>_checked</code></h4>\n<p>Модификатор задает выбранный пункт меню.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    content : &#39;_checked&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        checked : true \n    }\n}\n</code></pre>\n<p>В блоке <code>menu</code> модификатор <code>_checked</code> устанавливается для пункта при щелчке мышью:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;,\n        select : &#39;check&#39;\n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>menu-item</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n</ul>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "menu-item",
                    "jsdoc": "",
                    "data": {
                        "en": {
                            "name": "menu-item",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/menu-item/00ejmLqt61w5ksAsfBl7KgE4dBE/00ejmLqt61w5ksAsfBl7KgE4dBE.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/47lHiiyDspaBs5AiC22G42Y-N_o/47lHiiyDspaBs5AiC22G42Y-N_o.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/Sgw4iIN4STar-QE05xyBmgntftw/Sgw4iIN4STar-QE05xyBmgntftw.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/sURVY49aNm3TBC1XVeOG1Q5_vi8/sURVY49aNm3TBC1XVeOG1Q5_vi8.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/T77G-B0x1-Z9ZaPqpW_TAskNFI8/T77G-B0x1-Z9ZaPqpW_TAskNFI8.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": ""
                                }
                            ]
                        },
                        "ru": {
                            "name": "menu-item",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/menu-item/00ejmLqt61w5ksAsfBl7KgE4dBE/00ejmLqt61w5ksAsfBl7KgE4dBE.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/47lHiiyDspaBs5AiC22G42Y-N_o/47lHiiyDspaBs5AiC22G42Y-N_o.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/Sgw4iIN4STar-QE05xyBmgntftw/Sgw4iIN4STar-QE05xyBmgntftw.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/sURVY49aNm3TBC1XVeOG1Q5_vi8/sURVY49aNm3TBC1XVeOG1Q5_vi8.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/menu-item/T77G-B0x1-Z9ZaPqpW_TAskNFI8/T77G-B0x1-Z9ZaPqpW_TAskNFI8.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"menu-item\">menu-item</h1>\n<p>Блок <code>menu-item</code> служит для создания пунктов меню или селекта. Используется внутри блока <code>menu</code>. Блок <code>menu-item</code> предоставляет возможность изменять состояние, содержимое и порядок отображения пунктов меню.</p>\n<p>Блок <code>menu-item</code> в результате BEMHTML-преобразований на странице становится HTML-элементом с тегом <code>&lt;div&gt;</code> со свойством <code>role=&quot;menuitem&quot;</code>.</p>\n<h2 id=\"-\">Варианты использования пунктов меню</h2>\n<p>Блок <code>menu-item</code> служит для создания различных типов пунктов меню:</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Описание</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Переключатель</td>\n        <td>Применяется для любых выпадающих списков, табов, пунктов меню и селектов и т.п. Используется по умолчанию.</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    val : 1,\n    content : &#39;Selector value&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Ссылка</td>\n        <td>Элемент меню со ссылкой. Блок <code>link</code> помещается в поле <code>content</code> BEMJSON-декларации блока. Так же требуется установить блоку модификатор <code>type</code> в значение <code>link</code>.\n        </td>\n        <td>\n            <pre><code>\n{\n    block : &#39;menu-item&#39;,\n    mods : { type : &#39;link&#39; },\n    val : 2,\n    content : {\n        block : &#39;link&#39;,\n        url : &#39;#&#39;,\n        content : &#39;Link 1&#39;\n    }\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td><code>String|Number</code></td>\n        <td>Значение, возвращаемое пунктом меню, если он выбран.</td>\n    </tr>\n</table>\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_type-\">Типы блока <code>_type</code></h3>\n<p>Модификатор <code>_type</code> в значении <code>_link</code> позволяет создавать пункт меню-ссылку. Блок <code>link</code> при этом помещается в поле <code>content</code> BEMJSON-декларации блока. Если модификатор <code>_type_link</code> не установлен, вложенная ссылка будет доступна для действий пользователя при установленном модификаторе <code>_disabled</code>.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        type : &#39;link&#39; \n    },\n    content : {\n        block : &#39;link&#39;,\n        url : &#39;#&#39;,\n        content : &#39;Link 1&#39;\n    }\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии &quot;неактивен&quot; пункт меню отображается, но недоступен для действий пользователя.  </p>\n<p>Такой пункт меню не изменяет состояние при щелчке мышью. Если для блока установлен модификатор <code>_type_link</code>, переход по ссылке не осуществляется. </p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        disabled : true \n    },\n    content : &#39;_disabled&#39;\n}\n</code></pre>\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие &quot;наведение курсором&quot; на пункт меню.</p>\n<p>Реализован во всех темах блока.</p>\n<p>Автоматически выставляется при наведении указателем мыши на пункт меню.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        hovered : true \n    },\n    content : &#39;_hovered&#39;\n}\n</code></pre>\n<h4 id=\"-_checked-\">Выбранный пункт меню <code>_checked</code></h4>\n<p>Модификатор задает выбранный пункт меню.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu-item&#39;,\n    content : &#39;_checked&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        checked : true \n    }\n}\n</code></pre>\n<p>В блоке <code>menu</code> модификатор <code>_checked</code> устанавливается для пункта при щелчке мышью:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;menu&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;,\n        select : &#39;check&#39;\n    },\n    content : [\n        {\n            block : &#39;menu-item&#39;,\n            val : 1,\n            content : &#39;First item&#39;\n        },\n        {\n            block : &#39;menu-item&#39;,\n            val : 2,\n            content : &#39;Second item&#39;\n        }\n    ]\n}\n</code></pre>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>menu-item</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n</ul>\n"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "popup",
                    "data": {
                        "en": {
                            "name": "popup",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/popup/7PzT7oA6awlAKgFGXccAdhfz0n0/7PzT7oA6awlAKgFGXccAdhfz0n0.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/popup/L1MMDUGHLM4djlDaj5mhiKHvDH8/L1MMDUGHLM4djlDaj5mhiKHvDH8.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/popup/M1T2dIuSVeBoluZEMgCmA90Stgc/M1T2dIuSVeBoluZEMgCmA90Stgc.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/popup/m6WdfiXJP4RkxnBzEuzumr9C4w0/m6WdfiXJP4RkxnBzEuzumr9C4w0.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/popup/ROJZHxrl71CFbWiWU5Ry_Q0Jbhw/ROJZHxrl71CFbWiWU5Ry_Q0Jbhw.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/popup/Uhdsvnf2MsxKNrQy7w6uLKTxdek/Uhdsvnf2MsxKNrQy7w6uLKTxdek.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/popup/VE0JWgs-I2gVU8suKC3_eTK29EE/VE0JWgs-I2gVU8suKC3_eTK29EE.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": ""
                                }
                            ]
                        },
                        "ru": {
                            "name": "popup",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/popup/7PzT7oA6awlAKgFGXccAdhfz0n0/7PzT7oA6awlAKgFGXccAdhfz0n0.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/popup/L1MMDUGHLM4djlDaj5mhiKHvDH8/L1MMDUGHLM4djlDaj5mhiKHvDH8.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/popup/M1T2dIuSVeBoluZEMgCmA90Stgc/M1T2dIuSVeBoluZEMgCmA90Stgc.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/popup/m6WdfiXJP4RkxnBzEuzumr9C4w0/m6WdfiXJP4RkxnBzEuzumr9C4w0.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/popup/ROJZHxrl71CFbWiWU5Ry_Q0Jbhw/ROJZHxrl71CFbWiWU5Ry_Q0Jbhw.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/popup/Uhdsvnf2MsxKNrQy7w6uLKTxdek/Uhdsvnf2MsxKNrQy7w6uLKTxdek.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/popup/VE0JWgs-I2gVU8suKC3_eTK29EE/VE0JWgs-I2gVU8suKC3_eTK29EE.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"popup\">popup</h1>\n<p>Блок <code>popup</code> используется для создания выпадающих элементов и позволяет изменять их состояние, поведение и внешний вид. Блок отображается поверх остальных элементов страницы.</p>\n<p>Попап может быть вызван различными элементами страницы, например, кнопками или псевдоссылками.</p>\n<p>В момент первого показа (установка модификатора <code>_visible</code>) DOM-элемент блока создается в конце <code>&lt;body&gt;</code>.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    content : &#39;default&#39;\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;simple&#39; },\n    content : &#39;simple&#39;\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39; },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_visible-\">Видимый <code>_visible</code></h3>\n<p>Модификатор, отвечающий за видимость блока. При значении модификатора <code>false</code> блок не отображается.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39;, visible : true },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h3 id=\"-_direction-\">Расположение относительно родителя <code>_direction</code></h3>\n<p>Модификатор управляет положением попапа на странице, относительно вызвавшего его блока. Расположение блока определяется автоматически, исходя из массива допустимых расположений и положения родителя на странице.</p>\n<p>Выбранное расположение влияет на направление анимации раскрытия.</p>\n<p>По умолчанию используется следующий массив допустимых расположений:</p>\n<table>\n    <tr>\n        <th> Направление раскрытия </td>\n        <th> Индекс в массиве </td>\n    </tr>\n        <td> bottom-left </td>\n        <td> 0 </td>\n    </tr>\n    <tr>\n        <td> bottom-center </td>\n       <td> 1 </td>\n   </tr>\n    <tr>\n        <td> bottom-right</td>\n        <td> 2 </td>\n    </tr>\n    <tr>\n        <td> top-left </td>\n        <td> 3 </td>\n    </tr>\n    <tr>\n        <td> top-center </td>\n        <td> 4 </td>\n    </tr>\n    <tr>\n        <td> top-right </td>\n        <td> 5 </td>\n    </tr>\n    <tr>\n        <td> right-top </td>\n        <td> 6 </td>\n    </tr>\n    <tr>\n        <td> right-center </td>\n        <td> 7 </td>\n    </tr>\n    <tr>\n        <td> right-bottom </td>\n        <td> 8 </td>\n    </tr>\n    <tr>\n        <td> left-top </td>\n        <td> 9 </td>\n    </tr>\n    <tr>\n        <td> left-center </td>\n        <td> 10 </td>\n    </tr>\n    <tr>\n        <td> left-bottom </td>\n        <td> 11 </td>\n    </tr>\n</table>\n\n<p>Чтобы управлять расположением попапа, можно ограничить массив расположений, оставив только требуемые. Пользовательский массив нужно передать в качестве JS-параметра с ключом <code>directions</code>. При этом, из значений массива будет выбрано наиболее подходящее, исходя из положения родителя на странице.</p>\n<p>Например, если требуется, чтобы попап раскрывался над родителем:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { autoclosable : true, theme: &#39;simple&#39; },\n    js : { directions : [&#39;top-left&#39;, &#39;top-center&#39;, &#39;top-right&#39;] },\n    content : &#39;Hello, world!&#39;\n}\n</code></pre>\n<p>Или разместить попап справа по центру:</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { autoclosable : true, theme: &#39;simple&#39; },\n    js : { directions : [&#39;right-center&#39;] },\n    content : &#39;Hello, world!&#39;\n}\n</code></pre>\n<h3 id=\"-_autoclosable-\">Автоматическое скрытие <code>_autoclosable</code></h3>\n<p>Модификатор отвечает за автоматическое скрытие попапа при клике вне блока. При установке модификатора <code>_autoclosable</code> в значении <code>_true</code> блок будет скрываться при щелчке за его пределами (будет снят модификатор <code>_visible</code>).</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;popup&#39;,\n    mods : { theme : &#39;normal&#39;, autoclosable : true },\n    content : &#39;normal&#39;\n}\n</code></pre>\n<h2 id=\"-popup-\">Взаимосвязи между popup&#39;ами</h2>\n<p>Так как попап выносит себя в конец <code>&lt;body&gt;</code>, чтобы перекрывать другие элементы страницы, возникает необходимость в построении взаимосвязей. Блок умеет выстраивать связи Parent → [ Child, Child, ... ]. Для этого он выполняет проверку, вложен ли блок, вызывающий попап в другой <code>popup</code>. Потомки знают о наличии родителя.\nЕсли бы этих взаимосвязей не было, то родительский попап (при наличии модификатора <code>autoclosable</code> со значением <code>true</code>) закрылся бы при клике внутри дочернего.</p>\n<p>Другими словами, модификатор <code>autoclosable</code> со значением <code>true</code> означает, что попап закроется сам и закроет свои дочерние блоки при клике за пределами его самого и дочерних попапов.</p>\n<p>Дочерние блоки popup можно рассматривать в виде цепочки 1 → 2 → 3 → 4. При клике на 2-ом попапе – закрываются 3, 4. При клике в 1 – закрываются 2, 3, 4. При клике за пределами любого попапа из цепочки – закроются все.</p>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>popup</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>jquery</code></li>\n<li><code>dom</code></li>\n<li><code>objects</code></li>\n<li><code>functions__throttle</code></li>\n<li><code>keyboard</code></li>\n<li><code>ua</code></li>\n<li><code>jquery__event_pointer</code></li>\n</ul>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "radio",
                    "data": {
                        "en": {
                            "name": "radio",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/radio/L98T9NertqtVCJpvDLdlKg6huWI/L98T9NertqtVCJpvDLdlKg6huWI.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio/pPPjX0UcGCQBYmUNCpE27JADBCU/pPPjX0UcGCQBYmUNCpE27JADBCU.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio/RBPWsSDN_yrB6HXtmtrnXB3WSMY/RBPWsSDN_yrB6HXtmtrnXB3WSMY.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio/TLM9QTv-Pjlfq-MNpduxyTgw0cg/TLM9QTv-Pjlfq-MNpduxyTgw0cg.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio/wEYcA7ioT134yNzBSljZyhtiyg8/wEYcA7ioT134yNzBSljZyhtiyg8.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio/xr-zTTUYS3DD_e4xJV6Yn3a3BPI/xr-zTTUYS3DD_e4xJV6Yn3a3BPI.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/3eOE97EmaqvVB-6XycKG7cpGY5Y/3eOE97EmaqvVB-6XycKG7cpGY5Y.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/3iTePRGPbj1_dKvtQGd2bMai-Ac/3iTePRGPbj1_dKvtQGd2bMai-Ac.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/7DyHwAbpYHpT5TcturqqL57OMbA/7DyHwAbpYHpT5TcturqqL57OMbA.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/8YPfPGsfRbco7RPs63oF47Bj5d8/8YPfPGsfRbco7RPs63oF47Bj5d8.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/z74-X9bjA8-9fMUlFI8AH9R8Dfo/z74-X9bjA8-9fMUlFI8AH9R8Dfo.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "radio",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/radio/L98T9NertqtVCJpvDLdlKg6huWI/L98T9NertqtVCJpvDLdlKg6huWI.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio/pPPjX0UcGCQBYmUNCpE27JADBCU/pPPjX0UcGCQBYmUNCpE27JADBCU.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio/RBPWsSDN_yrB6HXtmtrnXB3WSMY/RBPWsSDN_yrB6HXtmtrnXB3WSMY.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio/TLM9QTv-Pjlfq-MNpduxyTgw0cg/TLM9QTv-Pjlfq-MNpduxyTgw0cg.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio/wEYcA7ioT134yNzBSljZyhtiyg8/wEYcA7ioT134yNzBSljZyhtiyg8.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio/xr-zTTUYS3DD_e4xJV6Yn3a3BPI/xr-zTTUYS3DD_e4xJV6Yn3a3BPI.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/3eOE97EmaqvVB-6XycKG7cpGY5Y/3eOE97EmaqvVB-6XycKG7cpGY5Y.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/3iTePRGPbj1_dKvtQGd2bMai-Ac/3iTePRGPbj1_dKvtQGd2bMai-Ac.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/7DyHwAbpYHpT5TcturqqL57OMbA/7DyHwAbpYHpT5TcturqqL57OMbA.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/8YPfPGsfRbco7RPs63oF47Bj5d8/8YPfPGsfRbco7RPs63oF47Bj5d8.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/z74-X9bjA8-9fMUlFI8AH9R8Dfo/z74-X9bjA8-9fMUlFI8AH9R8Dfo.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"radio\">radio</h1>\n<p>Блок <code>radio</code> – «радиопереключатель», «радиокнопка». Используется для создания одиночных радиобоксов.</p>\n<p>В реализации блока используется функциональность нативного контрола <code>input</code> с атрибутом <code>type=&quot;radio&quot;</code> – <code>&lt;input name=&quot;name&quot; type=&quot;radio&quot;&gt;</code>, который скрывается при использовании модификатора <code>_theme</code>.</p>\n<p>Блок <code>radio</code> в результате BEMHTML-преобразований на странице отображается как HTML-тег <code>&lt;label&gt;</code> – контейнер, содержащий:</p>\n<ul>\n<li>элемент <code>radio__box</code>, содержащий скрытый контрол <code>input</code> (элемент <code>__control</code>);</li>\n<li>подпись к радиокнопке, если задан BEMJSON-параметр <code>text</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON-блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td><code>name</code></td>\n        <td><code>String|Number</code></td>\n        <td>Имя радиокнопки. Преобразуется в HTML-атрибут <code>name</code> вложенного блока <code>input</code>.</td>\n    </tr>\n    <tr>\n        <td><code>text</code></td>\n        <td><code>String|Number</code></td>\n        <td>Подпись, отображаемая для радиокнопки.</td>\n    </tr>\n    <tr>\n        <td><code>val</code></td>\n        <td><code>String|Number</code></td>\n        <td>Значение, возвращаемое контролом радиопереключателя <code>radio__control</code>, если выбрана текущая радиокнопка. Преобразуется в HTML-атрибут <code>value</code> вложенного блока <code>input</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    name : &#39;radio-simple&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;simple&#39; },\n    name : &#39;radio-simple&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры радиопереключателя <code>_size</code></h3>\n<p>Задает размер всем типам радиопереключателей. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>В зависимости от значения модификатора <code>_type</code>, доступны следующие размеры реализации блока:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Обычный радиопереключатель</th>\n        <th>Кнопочный радиопереключатель (<code>_type_button</code>)</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>–</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>–</td>\n        <td>+</td>\n</table>\n\n\n<h3 id=\"-_type-\">Тип радиопереключателя <code>_type</code></h3>\n<p>Модификатор <code>_type</code> со значением <code>_button</code> используется для создания кнопочного радиопереключателя – кнопки (блок <code>button</code>) с установленным модификатором <code>_togglable_radio</code>.</p>\n<p>При этом к блоку <code>button</code> примешивается блок <code>radio</code>, а контентом кнопки становится <code>radio__control</code>.</p>\n<p>Кроме того, при установленном модификаторе <code>_type_button</code> для блока задается HTML-атрибут <code>role=&quot;button&quot;</code>.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Кнопочный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        type : &#39;button&#39;\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-_disabled-\">Неактивен <code>_disabled</code></h3>\n<p>В состоянии «неактивен» радиопереключатель отображается, но недоступен для действий пользователя.</p>\n<p>Такой радиопереключатель не будет получать фокус (модификатор <code>_focused</code>).</p>\n<p>При установке модификатора <code>_disabled</code> для радиопереключателя не будут:</p>\n<ul>\n<li>устанавливаться модификаторы состояния <code>_hovered</code>, <code>_pressed</code> и <code>_focused</code>;</li>\n<li>изменяться значение модификатора <code>_checked</code>.</li>\n</ul>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, disabled : true },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        focused : true\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h4 id=\"-_checked-\">Выбран <code>_checked</code></h4>\n<p>Модификатор <code>_checked</code> указывает на то, что радиопереключатель выбран (отмечен).</p>\n<p>Модификатор устанавливается по:</p>\n<ul>\n<li>щелчку мыши по блоку (при повторных щелчках модификатор сохраняется);</li>\n<li>нажатию клавиш <code>Enter</code> или <code>Space</code> (возможность использования клавиши <code>Enter</code> зависит от браузера), если радиопереключатель находится в фокусе (модификатор <code>_focused</code>);</li>\n<li>нажатию клавиш стрелок, если фокус установлен на соседний радиопереключатель в радиогруппе или в блоке, содержащем несколько блоков <code>radio</code>.</li>\n</ul>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, checked : true },\n    name : &#39;radio-norma&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h4 id=\"-_type_button-\">Состояния, доступные с модификатором <code>_type_button</code></h4>\n<p>При установленном модификаторе <code>_type_button</code> к блоку <code>button</code> примешивается блок <code>radio</code>. Как следствие, для блока с модификатором <code>_type_button</code> доступны состояния блока <code>button</code>:</p>\n<ul>\n<li><code>_hovered</code> – под курсором;</li>\n<li><code>_pressed</code> – кнопка нажата.</li>\n</ul>\n<h2 id=\"-\">Элементы</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>__box</code> используется в стандартной реализации блока как контейнер, содержащий контрол радиокнопки (элемент <code>__control</code>). В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;span&gt;</code>.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>Элемент <code>__control</code> – контрол радиокнопки. В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;input&gt;</code> с атрибутом <code>type=&quot;radio&quot;</code>. По умолчанию элемент скрыт. В блоке используется только его функциональность.</p>\n<h2 id=\"-\">Зависимости</h2>\n<p>Блок <code>radio</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>jquery__event</code></li>\n<li><code>__box</code></li>\n<li><code>__control</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "radio-group",
                    "data": {
                        "en": {
                            "name": "radio-group",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/radio-group/3eOE97EmaqvVB-6XycKG7cpGY5Y/3eOE97EmaqvVB-6XycKG7cpGY5Y.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/3iTePRGPbj1_dKvtQGd2bMai-Ac/3iTePRGPbj1_dKvtQGd2bMai-Ac.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/7DyHwAbpYHpT5TcturqqL57OMbA/7DyHwAbpYHpT5TcturqqL57OMbA.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/8YPfPGsfRbco7RPs63oF47Bj5d8/8YPfPGsfRbco7RPs63oF47Bj5d8.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/z74-X9bjA8-9fMUlFI8AH9R8Dfo/z74-X9bjA8-9fMUlFI8AH9R8Dfo.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "radio-group",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/radio-group/3eOE97EmaqvVB-6XycKG7cpGY5Y/3eOE97EmaqvVB-6XycKG7cpGY5Y.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/3iTePRGPbj1_dKvtQGd2bMai-Ac/3iTePRGPbj1_dKvtQGd2bMai-Ac.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/7DyHwAbpYHpT5TcturqqL57OMbA/7DyHwAbpYHpT5TcturqqL57OMbA.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/8YPfPGsfRbco7RPs63oF47Bj5d8/8YPfPGsfRbco7RPs63oF47Bj5d8.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/radio-group/z74-X9bjA8-9fMUlFI8AH9R8Dfo/z74-X9bjA8-9fMUlFI8AH9R8Dfo.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"radio-group\">radio-group</h1>\n<p>Блок <code>radio-group</code> – «радиогруппа», состоящая из набора зависимых переключателей «радиокнопок» (блоков <code>radio</code>). Радиогруппа используется для выбора единственного варианта из списка. </p>\n<p>Блок <code>radio-group</code> в результате BEMHTML-преобразований на странице становится HTML-элементом с тегом <code>&lt;span&gt;</code> – контейнером, содержащим группу переключателей (радиокнопок).</p>\n<h2 id=\"-\">Допустимые параметры блока</h2>\n<p>Допустимые параметры блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td><code>String</code></td>\n        <td>Имя радиогруппы. Преобразуется в HTML-атрибут <code>name</code> вложенного блока <code>input</code>.</td>\n    </tr>\n    <tr>\n        <td>options</td>\n        <td><code>Array</code></td>\n        <td>Массив хешей. Каждый хеш соответствует одному переключателю и содержит набор его параметров. </td>\n    </tr><br></table>\n\n<p>Среди параметров, передаваемых в атрибуте <code>option</code> для переключателя, обязательными являются:</p>\n<ul>\n<li><code>val</code> (<code>String</code> | <code>Number</code>) – значение, возвращаемое выбранным переключателем (элементом <code>radio__control</code>);</li>\n<li><code>text</code> (<code>String</code>) – подпись, отображаемая для текущего переключателя. </li>\n</ul>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<ul>\n<li>simple   </li>\n<li>normal  </li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером. </p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio-group&#39;,\n    name : &#39;radio-default&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio-group&#39;,\n    mods : { theme : &#39;simple&#39; },\n    name : &#39;radio-simple&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio-group&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры переключателей группы <code>_size</code></h3>\n<p>Задает размер переключателей для всех типов радиогрупп. Обязательный модификатор. </p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>В зависимости от значения модификатора <code>_type</code>, доступны следующие размеры реализации блока:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Обычная радиогруппа</th>\n        <th>Кнопочная радиогруппа (<code>_type_button</code>)</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>–</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>–</td>\n        <td>+</td>\n</table>\n\n\n<p>Размеры, на примере темы <em>normal</em> с модификатором <code>_type_button</code>:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;s&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;radio-S&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;m&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;radio-M&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;radio-L&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;xl&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;radio-XL&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Тип радиогруппы <code>_type</code></h3>\n<p>Модификатор <code>_type</code> может иметь следующие значения:</p>\n<ul>\n<li><code>button</code>. Используется для создания кнопочной радиогруппы – блока кнопок-переключателей;</li>\n<li><code>line</code>. Используется для создания радиогруппы с выравниванием в строку. После каждого переключателя группы, кроме последнего, автоматически добавляется отступ справа. Размер отступа зависит от значения модификатора <code>_size</code>. Реализован только в теме <em>normal</em>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычная радиогруппа</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Кнопочная радиогруппа</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39; \n    },\n    name : &#39;radio-button&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <td>Строчная радиогруппа (<code>_type_line</code>)</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;line&#39; \n    },\n    name : &#39;radio-line&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n            </code></pre>\n        </td>\n    </tr><br></table>\n\n\n<h3 id=\"-_disabled-\">Неактивна <code>_disabled</code></h3>\n<p>В состоянии &quot;неактивна&quot; радиогруппа отображается, но недоступна для действий пользователя.  </p>\n<p>Такая радиогруппа не будет получать фокус (модификатор <code>_focused</code>).</p>\n<p>При установке модификатора <code>_disabled</code> для радиогруппы, всем ее переключателям также устанавливается модификатор <code>_disabled</code>. Как следствие, для них не будут:</p>\n<ul>\n<li>устанавливаться модификаторы состояния <code>_hovered</code>, <code>_pressed</code> и <code>_focused</code>;</li>\n<li>изменяться значения модификатора <code>_checked</code>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39;,\n        disabled : true \n    },\n    name : &#39;radio-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда один из его элементов находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio-group&#39;,\n    mods : { \n        theme : &#39;normal&#39;, \n        size : &#39;l&#39;, \n        type : &#39;button&#39;,\n        focused : true \n    },\n    name : &#39;radio-normal&#39;,\n    options : [\n        { val : 1, text : &#39;first&#39; },\n        { val : 2, text : &#39;second&#39; }\n    ]\n}\n</code></pre>\n<h2 id=\"-\">Зависимости блока</h2>\n<p>Блок <code>radio-group</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>radio</code></li>\n<li><code>jquery</code></li>\n<li><code>_type_button</code> (у которого в зависимостях есть блок <code>button</code>)</li>\n</ul>\n\n<h1 id=\"radio\">radio</h1>\n<p>Блок <code>radio</code> – «радиопереключатель», «радиокнопка». Используется для создания одиночных радиобоксов.</p>\n<p>В реализации блока используется функциональность нативного контрола <code>input</code> с атрибутом <code>type=&quot;radio&quot;</code> – <code>&lt;input name=&quot;name&quot; type=&quot;radio&quot;&gt;</code>, который скрывается при использовании модификатора <code>_theme</code>.</p>\n<p>Блок <code>radio</code> в результате BEMHTML-преобразований на странице отображается как HTML-тег <code>&lt;label&gt;</code> – контейнер, содержащий:</p>\n<ul>\n<li>элемент <code>radio__box</code>, содержащий скрытый контрол <code>input</code> (элемент <code>__control</code>);</li>\n<li>подпись к радиокнопке, если задан BEMJSON-параметр <code>text</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON-блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td><code>name</code></td>\n        <td><code>String|Number</code></td>\n        <td>Имя радиокнопки. Преобразуется в HTML-атрибут <code>name</code> вложенного блока <code>input</code>.</td>\n    </tr>\n    <tr>\n        <td><code>text</code></td>\n        <td><code>String|Number</code></td>\n        <td>Подпись, отображаемая для радиокнопки.</td>\n    </tr>\n    <tr>\n        <td><code>val</code></td>\n        <td><code>String|Number</code></td>\n        <td>Значение, возвращаемое контролом радиопереключателя <code>radio__control</code>, если выбрана текущая радиокнопка. Преобразуется в HTML-атрибут <code>value</code> вложенного блока <code>input</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    name : &#39;radio-simple&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;simple&#39; },\n    name : &#39;radio-simple&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры радиопереключателя <code>_size</code></h3>\n<p>Задает размер всем типам радиопереключателей. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>В зависимости от значения модификатора <code>_type</code>, доступны следующие размеры реализации блока:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Обычный радиопереключатель</th>\n        <th>Кнопочный радиопереключатель (<code>_type_button</code>)</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>–</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>–</td>\n        <td>+</td>\n</table>\n\n\n<h3 id=\"-_type-\">Тип радиопереключателя <code>_type</code></h3>\n<p>Модификатор <code>_type</code> со значением <code>_button</code> используется для создания кнопочного радиопереключателя – кнопки (блок <code>button</code>) с установленным модификатором <code>_togglable_radio</code>.</p>\n<p>При этом к блоку <code>button</code> примешивается блок <code>radio</code>, а контентом кнопки становится <code>radio__control</code>.</p>\n<p>Кроме того, при установленном модификаторе <code>_type_button</code> для блока задается HTML-атрибут <code>role=&quot;button&quot;</code>.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Кнопочный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        type : &#39;button&#39;\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-_disabled-\">Неактивен <code>_disabled</code></h3>\n<p>В состоянии «неактивен» радиопереключатель отображается, но недоступен для действий пользователя.</p>\n<p>Такой радиопереключатель не будет получать фокус (модификатор <code>_focused</code>).</p>\n<p>При установке модификатора <code>_disabled</code> для радиопереключателя не будут:</p>\n<ul>\n<li>устанавливаться модификаторы состояния <code>_hovered</code>, <code>_pressed</code> и <code>_focused</code>;</li>\n<li>изменяться значение модификатора <code>_checked</code>.</li>\n</ul>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, disabled : true },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>_focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        focused : true\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h4 id=\"-_checked-\">Выбран <code>_checked</code></h4>\n<p>Модификатор <code>_checked</code> указывает на то, что радиопереключатель выбран (отмечен).</p>\n<p>Модификатор устанавливается по:</p>\n<ul>\n<li>щелчку мыши по блоку (при повторных щелчках модификатор сохраняется);</li>\n<li>нажатию клавиш <code>Enter</code> или <code>Space</code> (возможность использования клавиши <code>Enter</code> зависит от браузера), если радиопереключатель находится в фокусе (модификатор <code>_focused</code>);</li>\n<li>нажатию клавиш стрелок, если фокус установлен на соседний радиопереключатель в радиогруппе или в блоке, содержащем несколько блоков <code>radio</code>.</li>\n</ul>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, checked : true },\n    name : &#39;radio-norma&#39;,\n    text : &#39;Lonely switch&#39;\n}\n</code></pre>\n<h4 id=\"-_type_button-\">Состояния, доступные с модификатором <code>_type_button</code></h4>\n<p>При установленном модификаторе <code>_type_button</code> к блоку <code>button</code> примешивается блок <code>radio</code>. Как следствие, для блока с модификатором <code>_type_button</code> доступны состояния блока <code>button</code>:</p>\n<ul>\n<li><code>_hovered</code> – под курсором;</li>\n<li><code>_pressed</code> – кнопка нажата.</li>\n</ul>\n<h2 id=\"-\">Элементы</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>__box</code> используется в стандартной реализации блока как контейнер, содержащий контрол радиокнопки (элемент <code>__control</code>). В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;span&gt;</code>.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>Элемент <code>__control</code> – контрол радиокнопки. В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;input&gt;</code> с атрибутом <code>type=&quot;radio&quot;</code>. По умолчанию элемент скрыт. В блоке используется только его функциональность.</p>\n<h2 id=\"-\">Зависимости</h2>\n<p>Блок <code>radio</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>jquery__event</code></li>\n<li><code>__box</code></li>\n<li><code>__control</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "spin",
                    "data": {
                        "en": {
                            "name": "spin",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/spin/8nRZMnjcoWEtDxk8S584ZVjCjgM/8nRZMnjcoWEtDxk8S584ZVjCjgM.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/spin/dw4UDnC7PHm5UQ_f-yKnadONEQ4/dw4UDnC7PHm5UQ_f-yKnadONEQ4.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/spin/Hop39OtrdSzbBwyoib_9qGgQsGU/Hop39OtrdSzbBwyoib_9qGgQsGU.en"
                                        },
                                        {
                                            "url": "touch-phone.examples/spin/KkI2ijFRQcf0SzAPY0f_rby66Kw/KkI2ijFRQcf0SzAPY0f_rby66Kw.en"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"spin\">spin</h1>\n<p>This block indicates the progress of some process (e.g. site page or some media file loading).</p>\n<p>Rotation of the <strong>spin</strong> block is implemented by CSS3 animation.</p>\n<h2 id=\"block-modifiers\">Block Modifiers</h2>\n<p>The <strong>spin</strong> block requires the block modifiers listed below:</p>\n<h3 id=\"themes-of-a-block-_theme-\">Themes of a block <code>_theme</code></h3>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;s&#39;, progress : true }\n    }\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n    }\n</code></pre>\n<h3 id=\"sizes-_size-\">Sizes <code>_size</code></h3>\n<p>There are five sizes available: <strong>xs</strong>, <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n  <tr>\n    <th>Theme/Size</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <th>xs</th>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;simple&#39;, size : &#39;xs&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;xs&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th>s</th>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;simple&#39;, size : &#39;s&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th>m</th>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;simple&#39;, size : &#39;m&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th>l</th>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;simple&#39;, size : &#39;l&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n  </tr>\n  <tr>\n    <th>xl</th>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;simple&#39;, size : &#39;xl&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;spin&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;xl&#39;, progress : true }\n            }\n        </code></pre>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"spin-progress-_progress-\">Spin progress <code>_progress</code></h3>\n<p>The <code>{ progress : true }</code> modifier activates the spin. The <strong>spin</strong> block rotates in visible state.</p>\n<p>The <code>{ progress : false }</code> modifies paused rotation process. The <code>false</code> value is used when a <strong>spin</strong> block is invisible.</p>\n"
                                }
                            ]
                        },
                        "ru": {
                            "name": "spin",
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "touch-phone.examples/spin/8nRZMnjcoWEtDxk8S584ZVjCjgM/8nRZMnjcoWEtDxk8S584ZVjCjgM.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/spin/dw4UDnC7PHm5UQ_f-yKnadONEQ4/dw4UDnC7PHm5UQ_f-yKnadONEQ4.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/spin/Hop39OtrdSzbBwyoib_9qGgQsGU/Hop39OtrdSzbBwyoib_9qGgQsGU.ru"
                                        },
                                        {
                                            "url": "touch-phone.examples/spin/KkI2ijFRQcf0SzAPY0f_rby66Kw/KkI2ijFRQcf0SzAPY0f_rby66Kw.ru"
                                        }
                                    ]
                                }
                            ],
                            "description": [
                                {
                                    "content": "<h1 id=\"spin\">spin</h1>\n<p>Блок <code>spin</code> визуально иллюстрирует ход выполнения какого-либо процесса. Например, загрузки сайта или медиа-файла.</p>\n<p>Вращается прелоадер при помощи только CSS3-анимации.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы оформления <code>_theme</code></h3>\n<p>Обязательный модификатор, так как блок не имеет нативного состояния контрола.</p>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;simple&#39;, progress : true }\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n}\n</code></pre>\n<h3 id=\"-_size-\">Размеры <code>_size</code></h3>\n<p>Задает размер блоку <code>spin</code>. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно пять размеров реализации блока: <strong>xs</strong>, <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>блока</th>\n        <th>Размер, px</th>\n        <th>Реализация</th>\n    </tr>\n    <tr>\n        <th>XS</th>\n        <td>16px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xs&#39;, progress : true }\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, progress : true }\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, progress : true }\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;spin&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;xl&#39;, progress : true }\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_progress-\">Вращение прелоадера <code>_progress</code></h3>\n<p>Модификатор <code>_progress</code> в значении <code>_true</code> задает вращение прелоадера и показывает его на странице. Когда прелоадер виден, он крутится.</p>\n<p>Модификатор <code>_progress</code> в значении <code>_false</code> останавливает прелоадер и скрывает его со страницы.</p>\n"
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                }
            ]
        }
    ]
}
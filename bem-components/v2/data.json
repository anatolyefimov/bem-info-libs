{
    "repo": "bem-components",
    "ref": "v2",
    "url": "http://github.com/bem/bem-components",
    "readme": "<h1 id=\"bem-components-library--!-build-status--https:--travis-ci-org-bem-bem-components-svg-branch=v2---https:--travis-ci-org-bem-bem-components---!-coverage-status--https:--coveralls-io-repos-bem-bem-components-badge-png-branch=v2---https:--coveralls-io-r-bem-bem-components-branch=v2-\">BEM Components Library <a href=\"https://travis-ci.org/bem/bem-components\"><img src=\"https://travis-ci.org/bem/bem-components.svg?branch=v2\" alt=\"Build Status\"></a> <a href=\"https://coveralls.io/r/bem/bem-components?branch=v2\"><img src=\"https://coveralls.io/repos/bem/bem-components/badge.png?branch=v2\" alt=\"Coverage Status\"></a></h1>\n<h2 id=\"что-это-\">Что это?</h2>\n<p>Библиотека блоков для управления формами.\nСодержит абстрагированные от дизайна базовые реализации.</p>\n<h2 id=\"использование\">Использование</h2>\n<p>Подключить библиотеку в проект любым известным способом.</p>\n<h2 id=\"поддерживаемые-браузеры\">Поддерживаемые браузеры</h2>\n<ul>\n<li>Desktop:<ul>\n<li>Firefox 24+</li>\n<li>Chrome last 2 versions</li>\n<li>Safari 6.0+</li>\n<li>Opera 12.1+</li>\n<li>Internet Explorer 9+</li>\n</ul>\n</li>\n<li>Touch-pad:<ul>\n<li>Android 4+</li>\n<li>iOS 5+</li>\n</ul>\n</li>\n<li>Touch-phone:<ul>\n<li>Android 4+</li>\n<li>iOS 6+</li>\n<li>Windows Phone 8+ (Internet Explorer 10+)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"состав\">Состав</h2>\n<h3 id=\"уровни\">Уровни</h3>\n<h3 id=\"блоки\">Блоки</h3>\n<h3 id=\"технологии\">Технологии</h3>\n<h2 id=\"история-изменений\">История изменений</h2>\n<p>История изменений доступна на <a href=\"CHANGELOG.md\">отдельной странице</a>.</p>\n<h2 id=\"миграция\">Миграция</h2>\n<p>Миграция описана на <a href=\"MIGRATION.md\">отдельной странице</a>.</p>\n<h2 id=\"разработка\">Разработка</h2>\n<h3 id=\"рабочая-копия\">Рабочая копия</h3>\n<ol>\n<li><p>Получаем исходники:</p>\n<pre><code class=\"lang-bash\">$ git clone -b v2 git://github.com/bem/bem-components.git\n$ cd bem-components\n</code></pre>\n</li>\n<li><p>Устанавливаем зависимости:</p>\n<pre><code class=\"lang-bash\">$ npm install\n</code></pre>\n<p>Для последующего запуска локально установленных bem-tools нам потребуется <code>export PATH=./node_modules/.bin:$PATH</code> или любой альтернативный способ.</p>\n</li>\n<li><p>Устанавливаем зависимые библиотеки:</p>\n<pre><code class=\"lang-bash\">$ bower-npm-install\n</code></pre>\n</li>\n<li><p>Собираем примеры и тесты:</p>\n<pre><code class=\"lang-bash\">$ bem make sets\n</code></pre>\n</li>\n<li><p>Запускаем разработческий сервер:</p>\n<pre><code class=\"lang-bash\">$ bem server\n</code></pre>\n</li>\n<li><p>Проверяем code-style</p>\n<pre><code class=\"lang-bash\">$ npm run lint\n</code></pre>\n</li>\n</ol>\n<h3 id=\"внесение-изменений\">Внесение изменений</h3>\n<ol>\n<li><a href=\"https://github.com/bem/bem-components/issues/new\">Создать issue</a> с описанием сути изменений.</li>\n<li>Определить в какую версию необходимо внести изменения.</li>\n<li>Сделать feature-branch с указанием номера issue и версии (<code>issues/&lt;номер issue&gt;@v&lt;номер версии&gt;</code>) на основе ветки версии.\nНапример для issue с номером 42 и версией 1: <code>git checkout -b issues/42@v1 v1</code>. Если изменения нужно внести в несколько версий, то для каждой из версий создаётся отдельная ветка.</li>\n<li>Внести изменения (для версии v2, можно локально проверить, что ничего не сломалось, запустив <code>npm test</code>).</li>\n<li>Закоммитить и сделать <code>push</code>. Если это необходимо, то нужно сделать <code>rebase</code> от базовой ветки версии.</li>\n<li>Создать pull-request на основе созданной ветки (или несколько pull-request&#39;ов для случая изменений в нескольких версиях).</li>\n<li>Любым способом связать pull-request и issue (например, c помощью <a href=\"https://github.com/blog/1506-closing-issues-via-pull-requests\">комментария</a>).</li>\n<li>Ждать закрытия pull-request и issue ;-)</li>\n</ol>\n<h3 id=\"модульное-тестирование\">Модульное тестирование</h3>\n",
    "migration": "<h1 id=\"миграция\">Миграция</h1>\n",
    "changelog": "<h1 id=\"история-изменений\">История изменений</h1>\n<h2 id=\"2-0-0\">2.0.0</h2>\n<h3 id=\"крупные-изменения\">Крупные изменения</h3>\n<ul>\n<li>Переход на модульную систему <a href=\"https://github.com/ymaps/modules\">https://github.com/ymaps/modules</a>.</li>\n</ul>\n<h3 id=\"остальные-изменения\">Остальные изменения</h3>\n<ul>\n<li>Понятия автофокуса для блока <code>input</code> изменено.\nБольше нет js-параметра <code>autoFocus</code>, вместо него нужно использовать модификатор <code>_autofocus_focused</code>.\nМодификатор <code>_autofocus_yes</code> теперь называется <code>_autofocus_hidden</code>.</li>\n</ul>\n",
    "levels": [
        {
            "name": "desktop.sets",
            "blocks": [
                {
                    "name": "attach",
                    "jsdoc": "",
                    "data": {
                        "en": {
                            "name": "attach",
                            "description": [
                                {
                                    "content": "<h1 id=\"attach\">attach</h1>\n<p>The <strong>attach</strong> block is used to send a file to a server.</p>\n<p>The block is visually represented by:</p>\n<ul>\n<li>button (<code>__button</code> based on the <a href=\"../button/\">button</a> block) that opens a system window for a file download</li>\n<li>deletion cross element (<code>__clear</code>)</li>\n</ul>\n<p>Block functionality does not support:</p>\n<ul>\n<li>more than one file attaching</li>\n<li>drag-and-drop</li>\n</ul>\n<p>Block <strong>attach</strong> provides native control functionality. The control is hidden. In MSIE8 block <strong>attach</strong> is rendered as native control <code>&lt;input type=&quot;file&quot;&gt;</code>.</p>\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"themes-of-a-block\">Themes of a block</h3>\n<p><code>_theme</code></p>\n<p>The block supports only the <em>simple</em> theme.</p>\n<p>If theme is not specified, the block applies only default values:</p>\n<ul>\n<li>Theme of a button: native representation of a button by the browser.</li>\n<li>Localization: en</li>\n<li>Button&#39;s message text (<code>__button</code>): &quot;Choose file&quot;</li>\n<li>Text message rendered with no file selected (<code>__no-file</code>): &quot;no file selected&quot;</li>\n</ul>\n<p>Following example demonstrates this:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39; },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h3 id=\"block-state\">Block state</h3>\n<p><code>_disabled_true</code></p>\n<ul>\n<li>disabled\nIf block is disabled a file selection button becomes unavailable for user&#39;s manipulations.</li>\n</ul>\n<p>The button is active by default.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { disabled : true },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39;, disabled : true },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<p>The block is visually represented by the following elements:</p>\n<h3 id=\"__button\">__button</h3>\n<p>A mandatory element.</p>\n<p>A file selection button. It aims to open the system window for a file download. It is based on a <a href=\"../button/\">button</a> block and inherites its behavior (JS) and formatting (CSS).</p>\n<p>If a theme <em>simple</em> is not declared, the button&#39;s text &quot;Choose file&quot; is used by default.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39; },\n        button : {\n            block : &#39;button&#39;,\n            mods : { theme : &#39;simple&#39; },\n            icon : { elem : &#39;icon&#39; }\n        },\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>A native control of file attaching.</p>\n<p>It is rendered by BEMHTML and BH template engines as a native control of file attaching with attributes: <code>&lt;input class=&quot;file-name&quot; type=&quot;file&quot;&gt;</code>.</p>\n<h3 id=\"__no-file\">__no-file</h3>\n<p>Element for description rendering with no file selected.</p>\n<p>If a theme <em>simple</em> is not declared, the text message &quot;no file selected&quot; is used by default.</p>\n<h3 id=\"__file\">__file</h3>\n<p>A container for a attached file information.</p>\n<p>It consists of the following block&#39;s elements:</p>\n<ul>\n<li><code>__text</code></li>\n<li><code>__clear</code></li>\n</ul>\n<h3 id=\"__text\">__text</h3>\n<p>File name. It appears after some file is attached.</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Clear attachment button (deletion cross element). It appears after some file is attached.</p>\n<p>The element is available for a <em>simple</em> theme of <strong>attach</strong> block.</p>\n"
                                }
                            ],
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "attach.examples/simple/_simple.en"
                                        }
                                    ]
                                }
                            ]
                        },
                        "ru": {
                            "name": "attach",
                            "description": [
                                {
                                    "content": "<h1 id=\"attach\">attach</h1>\n<p>Блок <strong>attach</strong> служит для отправки файла на сервер.</p>\n<p>Визуально представлен кнопкой на основе блока <a href=\"../button/\">button</a>, открывающей системное окно загрузки файла, именем файла (<code>__text</code>) и крестиком для отмены (<code>__clear</code>).</p>\n<p>Не позволяет прикреплять несколько файлов и не поддерживает drag-and-drop.</p>\n<p>Блок использует функциональность нативного контрола, сам контрол скрыт. В MSIE8 и ниже <strong>attach</strong> деградирует до нативного контрола — прикрепить файл <code>&lt;input type=&quot;file&quot;&gt;</code>.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы оформления  <code>_theme</code></h3>\n<p>Блок представлен только в теме <em>simple</em>.</p>\n<p>Без указания темы к блоку применяются значения по умолчанию:</p>\n<ul>\n<li>Тема кнопки: нативное отображение кнопки браузером</li>\n<li>Локализация: ru</li>\n<li>Сообщение на кнопке <code>__button</code>: &quot;Выбрать файл&quot;</li>\n<li>Сообщение при невыбранном файле (<code>__no-file</code>): &quot;файл не выбран&quot;</li>\n</ul>\n<p>Наглядно видно на примерах ниже:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39; },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_disabled-\">Не активен <code>_disabled</code></h4>\n<p>В состоянии блока &quot;не активен&quot; кнопка выбора становится недоступной для действий пользователя.</p>\n<p>Если модификатор <code>disabled</code> не выбран, кнопка по умолчанию активна.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39;, disabled : true },\n        button : &#39;Файл&#39;,\n        noFileText : &#39;файл не выбран&#39;\n    }\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__button\">__button</h3>\n<p>Обязательный элемент.\nКнопка выбора файла. Открывает системное окно загрузки файла. Создается на основе блока <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a> и использует его поведение (JS) и внешний вид (CSS). По умолчанию контент кнопки содержит локализованный текст &quot;Выберите файл&quot;.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39; },\n        button : {\n            block : &#39;button&#39;,\n            mods : { theme : &#39;simple&#39; },\n            icon : { elem : &#39;icon&#39; }\n        },\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>Нативный контрол &quot;прикрепить файл&quot;.</p>\n<p>Преобразуется BEMHTML- и BH-шаблонами в нативный элемент прикрепления файла с атрибутами <code>&lt;input class=&quot;file-name&quot; type=&quot;file&quot;&gt;</code>.</p>\n<h3 id=\"__no-file\">__no-file</h3>\n<p>Элемент для отображения подписи, когда файл не выбран.</p>\n<p>Если тема <em>simple</em> не указана для блока <strong>attach</strong>, будет использоваться значение по умолчанию – &quot;файл не выбран&quot;.</p>\n<h3 id=\"__file\">__file</h3>\n<p>Контейнер с информацией о прикрепленном файле.</p>\n<p>Формируется из следующих элементов блока:</p>\n<ul>\n<li><code>__text</code></li>\n<li><code>__clear</code></li>\n</ul>\n<h3 id=\"__text\">__text</h3>\n<p>Имя файла. Появляется после прикрепления файла.</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Кнопка отмены выбранного файла (крестик). Появляется после прикрепления файла.</p>\n<p>Элемент реализован для темы <em>simple</em>.</p>\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>attach</code> зависит от блока, предоставляющего общий API для контролов <code>base-control</code>, а также от блока <code>i-bem__dom</code>.</p>\n"
                                }
                            ],
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "attach.examples/simple/_simple.ru"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "base-control",
                    "data": null,
                    "jsdoc": ""
                },
                {
                    "name": "button",
                    "data": {
                        "en": {
                            "name": "button",
                            "description": [
                                {
                                    "content": ""
                                }
                            ],
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "button.examples/simple/_simple.en"
                                        }
                                    ]
                                }
                            ]
                        },
                        "ru": {
                            "name": "button",
                            "description": [
                                {
                                    "content": "<h1 id=\"button\">button</h1>\n<p>Блок <strong>button</strong> используется для создания различных типов кнопок и предоставляет возможность изменять их размер, состояние, содержимое и внешний вид.</p>\n<p>В MSIE8 и ниже кастомные кнопки деградируют до нативных кнопок <code>&lt;button&gt;</code>, кнопка-ссылка станет нативной ссылкой <code>&lt;a&gt;</code>.</p>\n<h2 id=\"-\">Варианты использования кнопок</h2>\n<p>Блок <strong>button</strong> служит для создания различных типов кнопок:</p>\n<table>\n  <tr>\n    <th>Тип</th>\n    <th>Описание</th>\n    <th>Пример</th>\n  </tr>\n  <tr>\n    <td>Обычная кнопка</td>\n    <td>Применяется для любых кнопок веб-интерфейса; используется по умолчанию.</td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n            icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } }\n        }\n      </pre></code>\n    </td>\n   <tr>\n    <td>Кнопка-ссылка</td>\n    <td>Разновидность обычной кнопки, для которой дополнительно задан атрибут <code>url</code>.\nПрименяется для перехода по ссылке.</td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;link&#39; },\n            url : &#39;#&#39;,\n            text : &#39;link&#39;\n        }\n      </pre></code>\n    </td>\n   </tr>\n   <tr>\n    <td>Кнопка действия</td>\n    <td>Предназначена для отправки данных на сервер (submit). Всегда располагается в форме.\n    Чтобы кнопка стала кнопкой действия, во входном BEMJSON блока необходимо добавить модификатор <code>type</code> со значением <code>submit</code>.\n    </td>\n    <td>\n      <pre><code>\n        {\n            tag: &#39;form&#39;,\n            content: {\n                block : &#39;button&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;submit&#39; },\n                text : &#39;button&#39;\n            }\n        }\n      </pre></code>\n    </td>\n   </tr>\n</table>\n\n<h2 id=\"api-\">API блока</h2>\n<p>Публичные методы блока представлены в таблице:</p>\n<table>\n  <tr>\n    <th>Метод</th>\n    <th>Описание</th>\n  </tr>\n  <tr>\n    <td>getText</td>\n    <td>Возвращает текст кнопки {String}</td>\n  </tr>\n  <tr>\n    <td>setText</td>\n    <td>Задает текст кнопки</td>\n  </tr>\n</table>\n\n\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n  <tr>\n    <th>Атрибут</th>\n    <th>Тип</th>\n    <th>Описание</th>\n  </tr>\n  <tr>\n    <td>text</td>\n    <td><code>string</code></td>\n    <td>Текст кнопки</td>\n   </tr>\n   <tr>\n    <td>icon</td>\n    <td><code>bemjson</code></td>\n    <td>Блок <code>icon</code>, формирующий иконку.</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td><code>string</code></td>\n    <td>Адрес ссылки. Если указан, то кнопка становится ссылкой, а значение <code>url</code> атрибутом <code>href</code>.</td>\n  </tr>\n</table>\n\n<p>Другие допустимые атрибуты блока могут задаваться в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<ul>\n<li><a href=\"#Темы блока `_theme`\">theme</a></li>\n<li><a href=\"#Размеры кнопок `_size`\">size</a></li>\n<li><a href=\"#Типы блока `_type`\">type</a></li>\n<li><a href=\"#Не активна `_disabled_true`\">disabled</a></li>\n<li><a href=\"#В фокусе `_focused_true`\">focused</a></li>\n<li><a href=\"#Наведение курсором `_hovered_true`\">hovered</a></li>\n<li><a href=\"#Нажатие `_pressed_true`\">pressed</a></li>\n<li><a href=\"#Залипание `_togglable_true`\">togglable</a></li>\n<li><a href=\"#Выделение `_action_true`\">action</a></li>\n<li><a href=\"#Псевдокнопка `_pseudo_true`\">pseudo</a></li>\n</ul>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером.</p>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;default&#39;\n    }\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        mods : { theme : &#39;simple&#39; },\n        text : &#39;simple&#39;\n    }\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        text : &#39;normal&#39;\n    }\n</code></pre>\n<h3 id=\"-_size-\">Размеры кнопок <code>_size</code></h3>\n<p>Задает размер всем типам кнопок. Обязательный модификатор.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>Доступно четыре размера реализации блока: <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n  <tr>\n    <th>Параметры/Размер</th>\n    <th>s</th>\n    <th>m</th>\n    <th>l</th>\n    <th>xl</th>\n  </tr>\n  <tr>\n    <td>Размер шрифта</td>\n    <td>13px</td>\n    <td>13px</td>\n    <td>15px</td>\n    <td>18px</td>\n  </tr>\n  <tr>\n    <td>Высота кнопки</td>\n    <td>24px</td>\n    <td>28px</td>\n    <td>32px</td>\n    <td>38px</td>\n  </tr>\n  <tr>\n    <td>Пример</td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            mods : { theme : &#39;normal&#39;, size : &#39;s&#39; },\n            text : &#39;Small&#39;\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n            text : &#39;Medium&#39;\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n            text : &#39;Large&#39;\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            mods : { theme : &#39;normal&#39;, size : &#39;xl&#39; },\n            text : &#39;X-large&#39;\n        }\n      </pre></code>\n    </td>\n  </tr>\n</table>\n\n\n<h3 id=\"-_type-\">Типы кнопок <code>_type</code></h3>\n<p>Блок представлен следующими типами:</p>\n<ul>\n<li>кнопка-ссылка (<code>_link</code>). Обязательный атрибут <code>url</code>. Кнопка получает тег <code>&lt;a&gt;</code>, а значение <code>url</code> становится атрибутом <code>href</code>.</li>\n<li>кнопка действия (<code>_submit</code>). Обязательно располагается в форме.</li>\n</ul>\n<p>Реализован в теме <em>simple</em> и <em>normal</em>.</p>\n<table>\n  <tr>\n    <th>Тип / Реализация</th>\n    <th>default</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <td> <code>_link</code></td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            mods : { type : &#39;link&#39; },\n            url : &#39;#&#39;,\n            text : &#39;link&#39;\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            mods : { theme : &#39;simple&#39;, type : &#39;link&#39; },\n            url : &#39;#&#39;,\n            text : &#39;link&#39;\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;link&#39; },\n            url : &#39;#&#39;,\n            text : &#39;link&#39;\n        }\n      </pre></code>\n    </td>\n  </tr>\n  <tr>\n    <td><code>_submit</code></td>\n    <td>\n      <pre><code>\n        {\n            tag: &#39;form&#39;,\n            content: {\n                block : &#39;button&#39;,\n                mods : { type : &#39;submit&#39; },\n                text : &#39;default&#39;\n            }\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            tag: &#39;form&#39;,\n            content: {\n                block : &#39;button&#39;,\n                mods : { theme : &#39;simple&#39;, type : &#39;submit&#39; },\n                text : &#39;simple&#39;\n            }\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            tag: &#39;form&#39;,\n            content: {\n                block : &#39;button&#39;,\n                mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;submit&#39; },\n                text : &#39;normal&#39;\n            }\n        }\n      </pre></code>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_disabled-\">Не активна <code>_disabled</code></h4>\n<p>В состоянии &quot;не активна&quot; кнопка видна, но недоступна для действий пользователя.</p>\n<p>Такая кнопка не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<p>Реализован во всех темах блока.</p>\n<table>\n  <tr>\n    <th>default</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            text : &#39;_disabled_true&#39;,\n            mods : { disabled : true }\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            text : &#39;_disabled_true&#39;,\n            mods : { theme : &#39;simple&#39;, disabled : true }\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            text : &#39;_disabled_true&#39;,\n            mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true }\n        }\n      </pre></code>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>focused</code> со значением <code>true</code> кнопка всегда находится в фокусе. Нажатие по ней можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;_focused_true&#39;,\n        mods : {\n            theme : &#39;normal&#39;,\n            size : &#39;m&#39;,\n            focused : true\n        }\n    }\n</code></pre>\n<h4 id=\"-_hovered-\">Наведение курсором <code>_hovered</code></h4>\n<p>Определяет действие &quot;наведение курсором&quot; на кнопку.</p>\n<p>Реализован во всех темах блока.</p>\n<table>\n  <tr>\n    <th>default</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            text : &#39;_hovered_true&#39;,\n            mods : { hovered : true }\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            text : &#39;_hovered_true&#39;,\n            mods : { theme : &#39;simple&#39;, hovered : true }\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            text : &#39;_hovered_true&#39;,\n            mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, hovered : true }\n        }\n      </pre></code>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_pressed-\">Нажатие <code>_pressed</code></h4>\n<p>Определяет состояние &quot;нажатие на кнопку&quot; (действие).</p>\n<p>Реализован во всех темах блока.</p>\n<table>\n  <tr>\n    <th>default</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            text : &#39;_pressed_true&#39;,\n            mods : { pressed : true }\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            text : &#39;_pressed_true&#39;,\n            mods : { theme : &#39;simple&#39;, pressed : true }\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            text : &#39;_pressed_true&#39;,\n            mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pressed : true }\n        }\n      </pre></code>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_togglable-\">Залипание <code>_togglable</code></h4>\n<p>Определяет состояние кнопки в нажатом состоянии, когда первый клик по кнопке нажимает ее, а второй возвращает в исходное состояние.</p>\n<table>\n  <tr>\n    <th>default</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            text : &#39;_togglable_true&#39;,\n            mods : { togglable : true }\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            text : &#39;_togglable_true&#39;,\n            mods : { theme : &#39;simple&#39;, togglable : true }\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            text : &#39;_togglable_true&#39;,\n            mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, togglable : true }\n        }\n      </pre></code>\n    </td>\n  </tr>\n</table>\n\n<h4 id=\"-_action-\">Выделение <code>_action</code></h4>\n<p>Визуально выделяет кнопку на странице.</p>\n<p>Реализован во всех темах блока.</p>\n<table>\n  <tr>\n    <th>default</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            text : &#39;_action_true&#39;,\n            mods : { action : true }\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            text : &#39;_action_true&#39;,\n            mods : { theme : &#39;simple&#39;, action : true }\n        }\n      </pre></code>\n    </td>\n    <td>\n      <pre><code>\n        {\n            block : &#39;button&#39;,\n            text : &#39;_action_true&#39;,\n            mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, action : true }\n        }\n      </pre></code>\n  </td>\n  </tr>\n</table>\n\n<h4 id=\"-_pseudo-\">Псевдокнопка <code>_pseudo</code></h4>\n<p>При выборе модификатора <code>_pseudo</code> со значением <code>true</code>, кнопка получает прозрачный фон. В неактивном состоянии границы псевдокнопки исчезают и она сливается со страницей.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true },\n        text : &#39;pseudo&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, pseudo : true, disabled : true },\n        text : &#39;pseudo&#39;\n    }\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__text\">__text</h3>\n<p>Технический элемент. Обрамляет текст кнопки.\nНужен для позиционирования текста внутри кнопки, в том числе для случаев использования вместе с иконкой.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } },\n        text : &#39;with icon&#39;\n    }\n</code></pre>\n<h2 id=\"-\">Зависимости</h2>\n<p>Блок <code>button</code> зависит от блока <code>base-control</code>, предоставляющего общий API для контролов, а также от блока <code>i-bem__dom</code>.</p>\n"
                                }
                            ],
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "button.examples/simple/_simple.ru"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "checkbox",
                    "data": null,
                    "jsdoc": ""
                },
                {
                    "name": "dropdown",
                    "data": null,
                    "jsdoc": ""
                },
                {
                    "name": "icon",
                    "jsdoc": null,
                    "data": {
                        "en": {
                            "name": "icon",
                            "description": [
                                {
                                    "content": "<h1 id=\"icon\">icon</h1>\n<p><code>&lt;i&gt;</code>-based block for using as an element in other blocks, not for independent using. Picture is set as <code>background</code> property.</p>\n<p>In BEMJSON you can use both the modifier and the <code>url</code> field for a picture representation:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n     block : &#39;icon&#39;,\n     url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, mods : { social : &#39;twitter&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;checkbox&#39;,\n        mods : { theme : &#39;simple&#39;, type : &#39;button&#39; },\n        text : &#39;icon&#39;,\n        icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, url : &#39;../../../test.blocks/icon/_action/download.svg&#39; }\n    }\n</code></pre>\n"
                                }
                            ],
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "icon.examples/simple/_simple.en"
                                        }
                                    ]
                                }
                            ]
                        },
                        "ru": {
                            "name": "icon",
                            "description": [
                                {
                                    "content": "<h1 id=\"icon\">icon</h1>\n<p>Блок <strong>icon</strong> используется в качестве графического элемента в других блоках. В HTML представлен тегом <i>. Иконка задается через свойство <code>background</code> и, соответственно, не имеет возможности фоллбека.</p>\n<p>Картинку можно передать как через модификатор, так и через поле <code>url</code>:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;icon&#39;,\n        mods : { social : &#39;twitter&#39; }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n     block : &#39;icon&#39;,\n     url : &#39;../../../test.blocks/icon/_action/download.svg&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, mods : { social : &#39;twitter&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;checkbox&#39;,\n        mods : { theme : &#39;simple&#39;, type : &#39;button&#39; },\n        text : &#39;icon&#39;,\n        icon : { block : &#39;icon&#39;, mods : { action : &#39;download&#39; } }\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;button&#39;,\n        text : &#39;with icon&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        icon : { block : &#39;icon&#39;, url : &#39;../../../test.blocks/icon/_action/download.svg&#39; }\n    }\n</code></pre>\n"
                                }
                            ],
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "icon.examples/simple/_simple.ru"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "image",
                    "jsdoc": null,
                    "data": {
                        "en": {
                            "name": "image",
                            "description": [
                                {
                                    "content": "<h1 id=\"image\">image</h1>\n<p><code>&lt;img&gt;</code>-based block for images, using as a content (logo, for example).</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;image&#39;,\n        url : &#39;http://bem.info/m/_/20zuV2gLiyoaqrHv9LoBRTmB0Ow.svg&#39;,\n        width : 16,\n        height : 16,\n        alt : &#39;BEM&#39;,\n        title : &#39;Find us on bem.info&#39;\n    }\n</code></pre>\n"
                                }
                            ],
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "image.examples/simple/_simple.en"
                                        }
                                    ]
                                }
                            ]
                        },
                        "ru": {
                            "name": "image",
                            "description": [
                                {
                                    "content": "<h1 id=\"image\">image</h1>\n<p>Блок <strong>image</strong> используется для вставки картинок.</p>\n<p>В HTML представлен тегом <code>&lt;img&gt;</code>.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;image&#39;,\n        url : &#39;http://bem.info/m/_/20zuV2gLiyoaqrHv9LoBRTmB0Ow.svg&#39;,\n        width : 16,\n        height : 16,\n        alt : &#39;BEM&#39;,\n        title : &#39;Find us on bem.info&#39;\n    }\n</code></pre>\n"
                                }
                            ],
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "image.examples/simple/_simple.ru"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "input",
                    "jsdoc": "",
                    "data": {
                        "en": {
                            "name": "input",
                            "description": [
                                {
                                    "content": ""
                                }
                            ],
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "input.examples/simple/_simple.en"
                                        }
                                    ]
                                }
                            ]
                        },
                        "ru": {
                            "name": "input",
                            "description": [
                                {
                                    "content": "<h1 id=\"input\">input</h1>\n<p>Блок <strong>input</strong> служит для создания различных типов текстовых полей:</p>\n<ul>\n<li>текстовая область;</li>\n<li>поле с паролем;</li>\n<li>поисковая форма.</li>\n</ul>\n<p>В MSIE8 и ниже поле ввода деградирует до нативного контрола <code>&lt;input атрибуты&gt;</code>, поле ввода с текстовой областью станет нативной текстовой областью <code>&lt;textarea атрибуты&gt;</code>.</p>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n  <tr>\n    <th>Атрибут</th>\n    <th>Тип</th>\n    <th>Описание</th>\n  </tr>\n  <tr>\n    <td>val</td>\n    <td><code>string</code></td>\n    <td>Значение, отправляемое на сервер. По умолчанию содержит пустое значение.</td>\n  </tr>\n  <tr>\n    <td>placeholder</td>\n    <td><code>string</code></td>\n    <td>Замещающийся текст. По умолчанию содержит пустое значение.\n  </tr>\n  <tr>\n    <td>id</td>\n    <td><code>string</code></td>\n    <td>Уникальный идентификатор блока. По умолчанию генерируется случайным образом, если явно не задан в BEMJSON.\n  </tr>\n  <tr>\n    <td>label</td>\n    <td><code>string</code></td>\n    <td>Метка над полем ввода.\n  </tr>\n</table>\n\n\n<p>Допустимые атрибуты блока, которые задаются в зарезервированном поле <code>attrs</code> в BEMJSON:</p>\n<ul>\n<li><a href=\"http://htmlbook.ru/html/a/name\">name</a> (<em>common</em>)</li>\n<li><a href=\"http://htmlbook.ru/html/a/tabindex\">tabindex</a> (<em>common</em>)</li>\n<li><a href=\"http://htmlbook.ru/html/attr/spellcheck\">spellcheck</a> (<em>common</em>)</li>\n<li><a href=\"http://htmlbook.ru/html/a/accesskey\">accesskey</a> (<em>common</em>)</li>\n<li><a href=\"http://htmlbook.ru/html/frameset/rows\">rows</a> (<code>_textarea</code>)</li>\n<li><a href=\"http://htmlbook.ru/html/textarea/cols\">cols</a> (<code>_textarea</code>)</li>\n<li><a href=\"http://htmlbook.ru/html/textarea/readonly\">readonly</a> (<code>_textarea</code>)</li>\n<li><a href=\"http://htmlbook.ru/html/textarea/wrap\">wrap</a> (<code>_textarea</code>)</li>\n<li><a href=\"http://htmlbook.ru/html/input/maxlength\">maxlength</a> (<code>_textarea</code>)</li>\n</ul>\n<p><em>В скобках указано соответствие атрибута типу инпута.</em></p>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>):</p>\n<ul>\n<li>Тип поля ввода: простое текстовое</li>\n<li>Ширина: 100%</li>\n<li>Тема оформления: нативное отображение поля ввода браузером.</li>\n<li>Размеры текстовой области: <code>cols:10</code>, <code>rows:10</code>.</li>\n</ul>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;input&#39;,\n        placeholder : &#39;default&#39;\n    }\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;simple&#39; },\n        placeholder : &#39;simple&#39;\n    }\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;normal&#39; },\n        placeholder : &#39;normal&#39;\n    }\n</code></pre>\n<h3 id=\"-_type-\">Типы <code>_type</code></h3>\n<p>Блок представлен следующими типами:</p>\n<ul>\n<li>текстовая область (<code>_textarea</code>)</li>\n<li>поле с паролем (<code>_password</code>)</li>\n<li>поисковая форма (<code>_search</code>)</li>\n</ul>\n<p>Реализован в темах <code>simple</code> и <code>normal</code>.</p>\n<table>\n  <tr>\n    <th>Тип / Реализация</th>\n    <th>default</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <td> <code>_textarea</code></td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;input&#39;,\n                mods : { type : &#39;textarea&#39; },\n                placeholder : &#39;default&#39;\n            }\n        </pre></code>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;input&#39;,\n                mods : { theme : &#39;simple&#39;, type : &#39;textarea&#39; },\n                placeholder : &#39;simple&#39;\n            }\n        </pre></code>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;input&#39;,\n                mods : { theme : &#39;normal&#39;, type : &#39;textarea&#39; },\n                placeholder : &#39;normal&#39;\n            }\n        </pre></code>\n    </td>\n  </tr>\n  <tr>\n    <td> <code>_password</code></td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;input&#39;,\n                placeholder : &#39;default&#39;,\n                mods : { type : &#39;password&#39; }\n            }\n        </pre></code>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;input&#39;,\n                mods : { theme : &#39;simple&#39;, type : &#39;password&#39; },\n                placeholder : &#39;simple&#39;\n            }\n        </pre></code>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;input&#39;,\n                mods : { theme : &#39;normal&#39;, type : &#39;password&#39; },\n                placeholder : &#39;normal&#39;\n            }\n        </pre></code>\n    </td>\n  </tr>\n  <tr>\n    <td> <code>_search</code></td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;input&#39;,\n                mods : { type : &#39;search&#39; },\n                placeholder : &#39;default&#39;\n            }\n        </pre></code>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;input&#39;,\n                mods : { theme : &#39;simple&#39;, type : &#39;search&#39; },\n                placeholder : &#39;simple&#39;\n            }\n        </pre></code>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;input&#39;,\n                mods : { theme : &#39;normal&#39;, type : &#39;search&#39; },\n                placeholder : &#39;normal&#39;\n            }\n        </pre></code>\n    </td>\n  </tr>\n</table>\n\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_disabled-\">Не активен <code>_disabled</code></h4>\n<p>В состоянии блока &quot;не активен&quot; поле ввода и все его элементы становятся недоступными для действий пользователя.</p>\n<p>Если модификатор <code>disabled</code> не выбран, инпут по умолчанию активен.</p>\n<p>Реализован в темах <code>simple</code> и <code>normal</code>.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;normal&#39;, disabled : true },\n        val : &#39;disabled&#39;\n    }\n</code></pre>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>_focused</code> со значением <code>true</code> поле ввода находится в фокусе.</p>\n<p>Реализован в темах <code>simple</code> и <code>normal</code>.</p>\n<pre><code>    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;normal&#39;, focused : true },\n        val : &#39;focused&#39;\n    }\n</code></pre><h3 id=\"-_has-clear-\">Очистка содержимого <code>_has-clear</code></h3>\n<p>Модификатор <code>_has-clear</code> в значении <code>true</code> отображает в инпуте крестик для очистки содержимого (элемент <code>__clear</code>).</p>\n<p>Реализован в темах <code>simple</code> и <code>normal</code>.</p>\n<table>\n  <tr>\n    <th>default</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <td>\n        <pre><code>\n            {\n                block : &#39;input&#39;,\n                mods : { &#39;has-clear&#39; : true },\n                placeholder : &#39;default&#39;\n            }\n        </pre></code>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;input&#39;,\n                mods : { theme : &#39;simple&#39;, &#39;has-clear&#39; : true },\n                placeholder : &#39;simple&#39;\n            }\n        </pre></code>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;input&#39;,\n                mods : { theme : &#39;normal&#39;, &#39;has-clear&#39; : true },\n                placeholder : &#39;normal&#39;\n            }\n        </pre></code>\n    </td>\n  </tr>\n</table>\n\n<hr>\n<p><strong>NB</strong> Модификатор <code>has-clear</code> не используется для типа инпута – поисковое поле (<code>_search</code>) в теме <em>simple</em>.</p>\n<hr>\n<h3 id=\"-_has-label-\">Метка над полем ввода <code>_has-label</code></h3>\n<p>Модификатор <code>_has-label</code> в значении <code>true</code> отображает в метку над полем ввода (элемент <code>__label</code>).</p>\n<p>Реализован в темах <code>simple</code> и <code>normal</code>.</p>\n<table>\n  <tr>\n    <th>default</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <td>\n        <pre><code>\n            {\n                block : &#39;input&#39;,\n                mods : { &#39;has-clear&#39; : true },\n                label : &#39;Label&#39;,\n                placeholder : &#39;default&#39;\n            }\n        </pre></code>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;input&#39;,\n                mods : { theme : &#39;simple&#39;, &#39;has-label&#39; : true },\n                label : &#39;Label&#39;,\n                placeholder : &#39;simple&#39;\n            }\n        </pre></code>\n    </td>\n    <td>\n        <pre><code>\n            {\n                block : &#39;input&#39;,\n                mods : { theme : &#39;normal&#39;, &#39;has-label&#39; : true },\n                label : &#39;Label&#39;,\n                placeholder : &#39;normal&#39;\n            }\n        </pre></code>\n    </td>\n  </tr>\n</table>\n\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__box\">__box</h3>\n<p>Обязательный элемент.</p>\n<p>Элемент, рисующий поля ввода (поля нативного инпута скрыты).</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Кнопка очистки содержимого инпута (&quot;крестик&quot;).</p>\n<p>Если применить модификатор блока <code>has-clear</code> со значением <code>false</code>, то &quot;крестик&quot; при вводе текста отображаться не будет.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;normal&#39;, &#39;has-clear&#39; : true },\n        label : &#39;label&#39;\n    }\n</code></pre>\n<h3 id=\"__control\">__control</h3>\n<p>Обязательный элемент.</p>\n<p>BEMHTML- или BH-шаблоном преобразуется в нативный контрол <code>&lt;input атрибуты&gt;</code>.</p>\n<h3 id=\"__label\">__label</h3>\n<p>Метка над полем ввода.</p>\n<p>Элемент добавляет метку полю ввода (преобразуется в HTML-тэг <code>&lt;label&gt;</code>). Связь метки с тэгом <code>&lt;input&gt;</code> устанавливается с помощью идентификатора <code>id</code>, который может генерироваться по умолчанию случайным образом. При щелчке кнопкой мыши на метку в поле ввода будет установлен фокус.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;normal&#39;, &#39;has-label&#39; : true },\n        label : &#39;label&#39;\n    }\n</code></pre>\n<h2 id=\"-\">Зависимости блока</h2>\n<p>Блок <code>input</code> зависит от блока <code>base-control</code>, предоставляющего общий API для контролов, а также от блока <code>i-bem__dom</code>.</p>\n"
                                }
                            ],
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "input.examples/simple/_simple.ru"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "link",
                    "data": {
                        "en": {
                            "name": "link",
                            "description": [
                                {
                                    "content": ""
                                }
                            ],
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "link.examples/simple/_simple.en"
                                        }
                                    ]
                                }
                            ]
                        },
                        "ru": {
                            "name": "link",
                            "description": [
                                {
                                    "content": "<h1 id=\"link\">link</h1>\n<p>Блок <strong>link</strong> используется для создания различных типов ссылок и предоставляет возможность изменять их состояние, внешний вид и поведение.  </p>\n<p>В MSIE8 и ниже кастомные ссылки деградируют до нативных. Псевдо-ссылка станет нативной ссылкой <code>&lt;a&gt;</code>.</p>\n<h2 id=\"-\">Варианты использования ссылок</h2>\n<p>Блок <strong>link</strong> служит для создания следующих типов ссылок:</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Описание</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычная ссылка</td>\n        <td>Применяется для любых ссылок веб-интерфейса; используется по умолчанию.</td>\n        <td><pre><code>\n        {\n            block : &#39;link&#39;,\n            url : &#39;<a href=\"http://yandex.ru\">http://yandex.ru</a>&#39;,\n            title : &#39;link&#39;,\n            content : &#39;link&#39;\n        }\n        </td></code></pre>\n    <tr>\n        <td>Псевдо-ссылка</td>\n        <td>Разновидность ссылки, при нажатии по которой в браузере не осуществляется переход. Применяется для вызова сценариев.</td>\n        <td><pre><code>\n        {\n            block : &#39;link&#39;,\n            mods : { pseudo : true },\n            content : &#39;pseudo&#39;\n        }\n        </td></code></pre>\n    </tr>\n</table>\n\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>title</td>\n        <td><code>string</code></td>\n        <td>Текст всплывающей подсказки</td>\n    </tr>\n    <tr>\n        <td>target</td>\n        <td><code>string</code></td>\n        <td>Целевое окно. Обычно атрибут указывается со значением &#39;_blank&#39;, чтобы открыть адрес ссылки в новом окне.</td>\n    </tr>\n    <tr>\n        <td>url</td>\n        <td><code>string</code></td>\n        <td>Адрес ссылки. Если указан, значение <code>url</code> становится атрибутом <code>href</code>.</td>\n    </tr>\n    <tr>\n        <td>tabIndex</td>\n        <td><code>number</code></td>\n        <td> Индекс, задающий последовательность перехода между ссылками при нажатии на клавишу <code>Tab</code>. Атрибут преобразуется в нативный атрибут <code>tabindex</code>.</td>\n    </tr>\n</table>\n\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы блока <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple   </li>\n<li>normal  </li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>), установленные браузером. </p>\n<p>Например:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;link&#39;, \n        url : &#39;#&#39;,\n        content : &#39;link&#39;\n    }\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;link&#39;,\n        mods : { theme : &#39;simple&#39; },\n        url : &#39;#&#39;,\n        content : &#39;link&#39;\n    }\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;link&#39;,\n        mods : { theme : &#39;normal&#39; },\n        url : &#39;#&#39;,\n        content : &#39;link&#39;\n    }\n</code></pre>\n<h3 id=\"-_pseudo-\">Псевдо-ссылка <code>_pseudo</code></h3>\n<p>Реализован во всех темах блока:</p>\n<table>\n    <tr>\n        <th>default</th>\n        <th>simple</th>\n        <th>normal</th>\n    </tr>\n    <tr>\n        <td><pre><code>\n        {\n            block : &#39;link&#39;,\n            mods : { pseudo : true },\n            url : &#39;#&#39;,\n            title : &#39;pseudo mod are toggled&#39;,\n            content : &#39;link&#39;\n        }\n        </td></code></pre>\n        <td><pre><code>\n        {\n            block : &#39;link&#39;,\n            mods : { theme : &#39;simple&#39;, pseudo : true },\n            url : &#39;#&#39;,\n            title : &#39;pseudo mod are toggled&#39;,\n            content : &#39;link&#39;\n        }\n        </td></code></pre>\n        <td><br>        {\n            block : &#39;link&#39;,\n            mods : { theme : &#39;normal&#39;, pseudo : true },\n            url : &#39;#&#39;,\n            title : &#39;pseudo mod are toggled&#39;,\n            content : &#39;link&#39;\n        }\n        </td></code></pre>\n  </tr>\n</table>\n\n\n<h3 id=\"-\">Состояния блока</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью. Нажатие по ней можно выполнить клавишей <code>Enter</code>.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code>    {\n        block : &#39;link&#39;,\n        mods : { \n            theme : &#39;normal&#39;,\n            focused : true \n        },\n        content : &#39;_focused_true&#39;\n    }\n</code></pre><h4 id=\"-_disabled-\">Не активна <code>_disabled</code></h4>\n<p>В состоянии &quot;не активна&quot; ссылка отображается, но недоступна для действий пользователя.  </p>\n<p>Для такой ссылки не будет: </p>\n<ul>\n<li>устанавливаться модификатор <code>_focused_true</code> в момент получения фокуса;</li>\n<li>осуществляться переход, если задан атрибут <code>url</code>;</li>\n<li>генерироваться БЭМ-событие <code>click</code>.</li>\n</ul>\n<p>Модификатор реализован во всех темах блока.</p>\n<table>\n    <tr>\n        <th>default</th>\n        <th>simple</th>\n        <th>normal</th>\n    </tr>\n    <tr>\n        <td><pre><code>\n        {\n            block : &#39;link&#39;,\n            mods : { disabled : true },\n            content : &#39;_disabled_true&#39;\n        }\n        </td></code></pre>\n        <td>\n        {\n            block : &#39;link&#39;,\n            mods : { theme : &#39;simple&#39;, disabled : true },\n            content : &#39;_disabled_true&#39;\n        }\n        </td></code></pre>\n        <td><pre><code><br>        {\n            block : &#39;link&#39;,\n            mods : { theme : &#39;normal&#39;, disabled : true }б\n            content : &#39;_disabled_true&#39;\n        }\n        </td></code></pre>\n    </tr>\n</table>\n\n\n<h3 id=\"-\">Зависимости блока</h3>\n<p>Блок <code>link</code> зависит от следующего набора блоков:</p>\n<ul>\n<li>base-control</li>\n<li>i-bem__dom</li>\n</ul>\n"
                                }
                            ],
                            "examples": [
                                {
                                    "content": [
                                        {
                                            "url": "link.examples/simple/_simple.ru"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "jsdoc": ""
                },
                {
                    "name": "menu",
                    "data": null,
                    "jsdoc": ""
                },
                {
                    "name": "menu-item",
                    "data": null,
                    "jsdoc": ""
                },
                {
                    "name": "popup",
                    "data": null,
                    "jsdoc": ""
                },
                {
                    "name": "radio",
                    "data": null,
                    "jsdoc": ""
                },
                {
                    "name": "radio-group",
                    "data": null,
                    "jsdoc": ""
                },
                {
                    "name": "spin",
                    "data": null,
                    "jsdoc": null
                }
            ]
        }
    ]
}
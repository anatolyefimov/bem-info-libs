{"ru":{"name":"z-index-group","examples":[],"description":"<h1 id=\"z-index-group\">z-index-group</h1>\n<p>Блок <code>z-index-group</code> используется для формирования нескольких слоев отображения блоков на странице. Применяется только к тем блокам, которым может быть установлено значение <code>position</code>. Каждый слой может находиться как выше, так и ниже других объектов веб-страницы. Их размещением по <code>z</code>-оси управляет модификатор <code>level</code>.</p>\n<p>В качестве значения модификатора <code>level</code> используются целые числа  от 0 до 9 включительно. Чем больше значение, тем выше находится слой по сравнению с теми слоями, у которых оно меньше. При равном значении <code>level</code> на переднем плане находится тот элемент, который в BEMJSON задекларирован ниже.</p>\n<p>Блок <code>z-index-group</code> с указанным значением модификатора <code>level</code> примешивается к позиционированному элементу веб-страницы и позволяет открывать новые элементы относительно уровня слоя, указанного в значении <code>level</code>. Например, если родителю, вызывающему <a href=\"../popup/popup.ru.md\">popup</a>, примешан <code>{ block : &#39;z-index-group&#39;, mods : { level : 2 } }</code>, то попап вызывается уже от второго уровня (<code>2 * 1000</code>).</p>\n<p>На примере ниже показана ситуация, когда открывающийся попап не перекрывает другой блок (например, шапку), находящийся на странице:</p>\n<pre><code class=\"lang-js\">{\n    block : &#39;popup&#39;,\n    mix : { block : &#39;z-index-group&#39;, mods : { level : 1 } },\n    mods : { autoclosable : true, theme : &#39;normal&#39; },\n    content : &#39;I am under the block with { level : 2 } value!&#39;\n}\n</code></pre>\n"},"en":{"name":"z-index-group","examples":[],"description":"<h1 id=\"z-index-group\">z-index-group</h1>\n<p><code>z-index-group</code> block is used to create several layers on a page for blocks representation.\nThis block can be mixed only with blocks that have a modifier <code>position</code>.</p>\n<p><code>level</code> modifier controls the layer position on the <code>z</code>-axis. Integer number from 0 to 9 can be used as a value for &#39;level&#39; mode. When blocks overlap, z-order determines which one covers the other. A block with a larger <code>level</code> value covers a block with a lower one. If two blocks have the same <code>level</code> value, a block that is declared in BEMJSON declaration lower will cover the other one.</p>\n<p><code>z-index-group</code> block allows a user to open new elements on a layer that is specified in <code>level</code> modifier value. For example, if parent block that initiates <a href=\"../popup/popup.ru.md\">popup</a> is mixed with <code>{ block : &#39;z-index-group&#39;, mods : { level : 2 } }</code>, <code>popup</code> block will be shown at the second level (<code>2 * 1000</code>).</p>\n<p>The example below shows popup block that does not cover another block (e.g., block <code>header</code>):</p>\n<pre><code class=\"lang-js\">{\n    block : &#39;popup&#39;,\n    mix : { block : &#39;z-index-group&#39;, mods : { level : 1 } },\n    mods : { autoclosable : true, theme : &#39;normal&#39; },\n    content : &#39;I am under the block with { level : 2 } value!&#39;\n}\n</code></pre>\n"}}
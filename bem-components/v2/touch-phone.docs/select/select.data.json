{"ru":{"name":"select","examples":[],"description":"<h1 id=\"select\">select</h1>\n<p>Блок <code>select</code> («селект») позволяет создать элемент интерфейса в виде раскрывающегося списка, а также список с одним или множественным выбором. Реализация блока основана на блоках <a href=\"../button/button.ru.md\">button</a>, <a href=\"../popup/popup.ru.md\">popup</a>, <a href=\"../menu/menu.ru.md\">menu</a> и <a href=\"../menu-item/menu-itemru.md\">menu-item</a>. Визуально представлен кнопкой и выпадающим списком с элементами меню. Щелчок по кнопке раскрывает выпадающий список под или над кнопкой в зависимости от ее положения на странице (<code>{ directions : [&#39;bottom-left&#39;, &#39;bottom-right&#39;, &#39;top-left&#39;, &#39;top-right&#39;] }</code>). Щелчок вне зоны попапа автоматически скрывает его (<code>{ autoclosable : true }</code>).</p>\n<p>Раскрывающийся список имеет всего один уровень вложенности и позволяет выбрать:</p>\n<ul>\n<li>только один элемент из списка (<a href=\"#radio-select\"><code>select_mode_radio</code></a>);</li>\n<li>один, несколько или ни одного элемента из списка (<a href=\"#multiple-choice\"><code>select_mode_check</code></a>);</li>\n<li>один или ни одного элемента из списка (<a href=\"#single-choice\"><code>select_mode_radio-check</code></a>).</li>\n</ul>\n<h2 id=\"Специализированные-поля-блока\">Специализированные поля блока</h2>\n<p>Список зарезервированных полей входного BEMJSON:</p>\n<div class=\"table-container\"><table>\n    <tr>\n        <th>Поле</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает имя выпадающего списка.</td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает уникальный идентификатор селекта.</td>\n    </tr>\n    <tr>\n        <td>options</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Задает массив пунктов списка. Каждый пункт имеет обязательный атрибут <code>val</code>, реализованный скрытым элементом <code>control</code>.</td>\n    </tr>\n    <tr>\n        <td>textMaxWidth</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Устанавливает максимальную ширину кнопки селекта. Ширина раскрывающегося списка при этом определяется самым широким текстом пункта или корректируется с помощью стилей.</td>\n    </tr>\n    <tr>\n        <td>optionsMaxHeight</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Устанавливает максимальную высоту выпадающего списка.<br>Если все пункты списка не вмещаются, появляется скролл.<br> Если значение не указано, высота выпадающего списка по умолчанию будет вычисляться в зависимости от количества пунктов.</td>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение раскрывающегося списка выбора в случае, если ни один из пунктов не отмечен.\n            <br> Применяется только для селектов с установленным модификатором <code>mode</code> в значении <code>check</code> или <code>radio-check</code>.</td>\n    </tr>\n</table></div>\n\n<p>При необходимости дополнительные HTML-атрибуты блока могут быть заданы в зарезервированном поле <code>attrs</code> в BEMJSON.</p>\n<h2 id=\"Модификаторы-блока\">Модификаторы блока</h2>\n<h3 id=\"Темы-`_theme`\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal (<strong>Важно:</strong> При выборе темы <code>normal</code> необходимо указывать обязательный модификатор <a href=\"#size\">size</a>.)</li>\n</ul>\n<p>Если модификатор <code>theme</code> не указан, отображается <a href=\"#custom\">кастомная</a> реализация контрола без применения стилей.</p>\n<p>Наглядно показано на примерах ниже:</p>\n<p><a name=\"custom\"></a>\n<strong>custom</strong></p>\n<p><strong>simple</strong></p>\n<p><strong>normal</strong></p>\n<h3 id=\"Типы-`_mode`\">Типы <code>_mode</code></h3>\n<p>Обязательный модификатор.</p>\n<p>Блок представлен следующими типами:</p>\n<p><a name=\"multiple-choice\"></a></p>\n<ul>\n<li>селект с множественным выбором, который позволяет оставить список без выбранных элементов (<code>select_mode_check</code>). При щелчке мышью по пункту списка его состояние меняется на противоположное.</li>\n</ul>\n<p><a name=\"radio-select\"></a></p>\n<ul>\n<li>меню-переключатель (<code>select_mode_radio</code>). Применяется для создания селектов, которые позволяют выбрать только один пункт из списка.\nДля этого типа селекта текст в кнопке устанавливается в зависимости от выбранного элемента. Если элемент не выбран, то по умолчанию выбирается первый пункт из списка.</li>\n</ul>\n<p><a name=\"single-choice\"></a></p>\n<ul>\n<li>селект с одиночным выбором, который позволяет оставить список без выбранных элементов (<code>select_mode_radio-check</code>). При щелчке мышью по пункту списка, его состояние меняется на противоположное.</li>\n</ul>\n<h3 id=\"Состояния-блока\">Состояния блока</h3>\n<h4 id=\"Ширина-кнопки-селекта-`_width`\">Ширина кнопки селекта <code>_width</code></h4>\n<p>Модификатор <code>width</code> в значении <code>available</code> растягивает кнопку селекта по ширине в зависимости от длины выбранного пункта.</p>\n<h4 id=\"В-фокусе-`_focused`\">В фокусе <code>_focused</code></h4>\n<p>Модификатор <code>focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<h2 id=\"Элементы-блока\">Элементы блока</h2>\n<h3 id=\"Кнопка-`__button`\">Кнопка <code>__button</code></h3>\n<p>Селект визуально представлен кнопкой (блок <a href=\"../button/button.ru.md\">button</a>), которая содержит иконку <code>&lt;i&gt;</code>, реализованную блоком <a href=\"../icon/icon.ru.md\">icon</a> с примиксованным элементом <code>tick</code>. Так как иконка является частью кнопки селекта, ее размер устанавливается размером кнопки. Щелчок по кнопке раскрывает список выбора.</p>\n<p>Селект реализован с помощью блока <a href=\"../button/button.ru.md\">button</a>, поэтому ему можно задавать следующие модификаторы:</p>\n<ul>\n<li><code>theme</code></li>\n<li><code>size</code></li>\n<li><code>focused</code></li>\n<li><code>checked</code></li>\n<li><code>disabled</code></li>\n</ul>\n<h2 id=\"Меню-`__menu`\">Меню <code>__menu</code></h2>\n<p>Элемент <code>menu</code> позволяет управлять пунктами списка выбора:</p>\n<ul>\n<li><code>val</code> – значение, возвращаемое пунктом из списка, если он выбран. Обязательный атрибут. Может содержать уникальный идентификатор <code>{ val : { id : 1 } }</code>.</li>\n<li><code>text</code> – название пункта в списке.</li>\n<li><code>checked</code> – присваивается пункту из списка, если он выбран. <code>{ checked : true }</code> – пункт выбран.</li>\n<li><code>checkedText</code> – текст, отображаемый вместо названия пункта в кнопке селекта. Задается только для блока <code>select</code> с возможностью <a href=\"#multiple-choice\">множественного выбора</a>.</li>\n<li><code>icon</code> – графический элемент (иконка).</li>\n</ul>\n<p>Элементы списка могут быть объединены в группы. Для группировки пунктов выбора служит элемент <code>group</code>, в который вкладываются необходимые элементы списка. Название группы задается через атрибут <code>title</code>.</p>\n<h2 id=\"Контрол-`__control`\">Контрол <code>__control</code></h2>\n<p>Вспомогательный скрытый элемент, который отвечает за формирование элементов списка выбора. Добавляется блоку на уровне шаблонизатора.</p>\n"},"en":{"name":"select","examples":[],"description":"<h1 id=\"select\">select</h1>\n<p><code>select</code> block is used to create a drop-down list. It allows a user to set up different types of popups with menu-items list for selection. <code>select</code> is based on the following blocks:</p>\n<ul>\n<li><a href=\"../button/button.en.md\">button</a></li>\n<li><a href=\"../popup/popup.en.md\">popup</a></li>\n<li><a href=\"../menu/menu.en/md\">menu</a></li>\n<li><a href=\"../menu-item/menu-item.en.md\">menu-item</a></li>\n</ul>\n<p><code>select</code> is visually represented by a button and popup list of menu items. Mouse click opens popup above or below a button depending on its position on a page (<code>{ directions : [&#39;bottom-left&#39;, &#39;bottom-right&#39;, &#39;top-left&#39;, &#39;top-right&#39;] }</code>). Clicking outside the popup area hides it automatically (<code>{ autoclosable : true }</code>).</p>\n<p>Dropdown list allows user to choose:</p>\n<ul>\n<li>a single value from the list (<a href=\"#radio-select\"><code>select_mode_radio</code></a>);</li>\n<li>a single, multiple or none values from the list (<a href=\"#multiple-choice\"><code>select_mode_check</code></a>);</li>\n<li>a single or none values from the list (<a href=\"#single-choice\"><code>select_mode_radio-check</code></a>).</li>\n</ul>\n<h2 id=\"Custom-fields-of-a-block\">Custom fields of a block</h2>\n<p>The following custom fields could be specified in BEMJSON declaration of the block:</p>\n<div class=\"table-container\"><table>\n    <tr>\n        <th>Custom field name</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Name of <code>select</code>.</td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Unique identifier of <code>select</code> block.</td>\n    </tr>\n    <tr>\n        <td>options</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Defines a list of <code>menu-items</code>. Each item has mandatory attribute <code>val</code> implemented by a hidden element <code>control</code>.</td>\n    </tr>\n    <tr>\n        <td>textMaxWidth</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Defines maximum width of <code>button</code> from <code>select</code> block. <code>popup</code> width depends on width of <code>menu-item</code> text. It could be defined also using CSS styles.</td>\n    </tr>\n    <tr>\n        <td>optionsMaxHeight</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Defines maximum height of <code>popup</code>.\n            <br> If all <code>menu-items</code> cannot be fit within <code>popup</code>, scroll element appears.\n            <br> If value of <code>optionsMaxHeight</code> attribute is not specified, height of <code>popup</code> depends on total height of all <code>menu-items</code>&#39;.</td>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Default text for a button when any <code>menu-item</code> is not specified.\n            <br> This attribute is used for <code>select</code> with the following specified modifiers: <code>select_mode_check</code> and <code>select_mode_radio-check</code>.</td>\n    </tr>\n</table></div>\n\n<p>Additional required HTML attributes could be specified in <code>attrs</code> field of BEMJSON.</p>\n<h2 id=\"Modifiers-of-a-block\">Modifiers of a block</h2>\n<h3 id=\"_theme\">_theme</h3>\n<p>Block supports the following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal (<strong>NB!</strong> Choosing a theme <code>normal</code> requires additional modifier <a href=\"#size\"><code>size</code></a>.)</li>\n</ul>\n<p>If <code>theme</code> modifier is not specified, <a href=\"#custom\">custom</a> representation of a control is applied (without CSS styles).</p>\n<p>See following examples:</p>\n<p><a name=\"custom\"></a>\n<strong>custom</strong></p>\n<p><strong>simple</strong></p>\n<p><strong>normal</strong></p>\n<h3 id=\"_mode\">_mode</h3>\n<p>Use <code>mode</code> modifier to define a type of <code>select</code>:</p>\n<p><a name=\"multiple-choice\"></a></p>\n<ul>\n<li>Multiple-choice select (<code>select_mode_check</code>) allows a user to check more than one menu item from the list or leave all items unchecked. Clicking on menu item changes its value to the opposite.</li>\n</ul>\n<p><a name=\"radio-select\"></a></p>\n<ul>\n<li>Radio-select (<code>select_mode_radio</code>) is used to allow user a single choice.\nText in the button of <code>select</code> block depends on a chosen menu item. The first item is represented by a button text by default.</li>\n</ul>\n<p><a name=\"single-choice\"></a></p>\n<ul>\n<li>Single-choice select (<code>select_mode_radio-check</code>) allows a user to check only one menu item from the list or leave all items unchecked. Click on menu item changes its value to the opposite.</li>\n</ul>\n<h3 id=\"States-of-a-block\">States of a block</h3>\n<h4 id=\"_width\">_width</h4>\n<p>To set the ability of select button&#39;s width to fit the width of the chosen item, use <code>width</code> modifier with <code>available</code> value.</p>\n<h4 id=\"_focused\">_focused</h4>\n<p>When a block is focused, a modifier ‘focused’ with ‘true’ value is set automatically, e.g. by pressing ‘Tab’ or clicking a mouse.</p>\n<h4 id=\"_disabled\">_disabled</h4>\n<p><code>disabled</code> modifier is used to make block visible but not available for user action. It cannot be focused by pressing ‘Tab’, clicking a mouse, etc. In most cases to mark out the disabled block on a page, additional styles are applied.</p>\n<h2 id=\"Elements-of-a-block\">Elements of a block</h2>\n<h3 id=\"__button\">__button</h3>\n<p><code>select</code> block is visually represented by a button (block <a href=\"../button/button.en.md\">button</a>) that contains an icon <code>&lt;i&gt;</code> (block <a href=\"../icon/icon.en.md\">icon</a>) with mixed element <code>tick</code>. Size of the icon is specified by <code>button</code> block size. Clicking the button opens popup with options.</p>\n<p>The following modifiers of a button could be propagated to <code>select</code> block:</p>\n<ul>\n<li><code>theme</code></li>\n<li><code>size</code></li>\n<li><code>focused</code></li>\n<li><code>checked</code></li>\n<li><code>disabled</code></li>\n</ul>\n<h2 id=\"__menu\">__menu</h2>\n<p><code>menu</code> element allows user to manage <code>menu-items</code> within selection list:</p>\n<ul>\n<li><code>val</code> – value to be sent to a server when menu item is chosen. This attribute could contain unique identifier <code>{ val : { id : 1 } }</code>.</li>\n<li><code>text</code> – name of menu item.</li>\n<li><code>checked</code> – state that is set to <code>menu-item</code>, e.g. on mouse click.</li>\n<li><code>checkedText</code> – text represented within select&#39;s button instead of chosen menu item name. This attribute is used for <a href=\"#multiple-choice\">multiple-choice</a> select.</li>\n<li><code>icon</code> – graphical element (icon).</li>\n</ul>\n<p><code>menu-items</code> could be grouped by <code>group</code> element. Group name is specified by <code>title</code> attribute.</p>\n<h2 id=\"__control\">__control</h2>\n<p><code>control</code> element is added to the block on template engine level and used to draw <code>menu-item</code>s in <code>popup</code>.</p>\n"}}
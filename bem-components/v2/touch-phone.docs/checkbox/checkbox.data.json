{"ru":{"name":"checkbox","examples":[{"url":"touch-phone.tests/checkbox/gemini"},{"url":"touch-phone.tests/checkbox/simple"},{"url":"touch-phone.tests/checkbox-group/gemini"},{"url":"touch-phone.tests/checkbox-group/simple"}],"description":"<h1 id=\"checkbox\">checkbox</h1>\n<p>Блок <code>checkbox</code> («чекбокс») позволяет управлять параметром выбора с двумя состояниями – включено и выключено. Используется, когда необходимо выбрать более одного варианта из предложенных.</p>\n<p>Блок создает контейнер, содержащий нативный контрол чекбокс (элемент <code>control</code>) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot;&gt;</code>, который скрывается при использовании модификатора <code>theme</code>.</p>\n<p>Атрибут <code>autocomplete</code> принудительно переведен в состояние <code>off</code> для обеспечения корректной работы блока.</p>\n<!-- bem-example: touch-phone.examples/checkbox/XI4uPzI90-UiMiWRig9noeu3mrg -->\n\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение текстовой строке чекбокса.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает имя чекбокса. Обязательный атрибут. Является частью пары имя / значение (name / value), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение чекбокса. Является частью пары имя / значение (name / value), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Иконка, которая отображается с помощью блока <code>icon</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно показано на примерах ниже:</p>\n<p><strong>default</strong></p>\n<!-- bem-example: touch-phone.examples/checkbox/sae-WwdkdYcrwwgUC5hw2NDih4 -->\n\n<p><strong>simple</strong></p>\n<!-- bem-example: touch-phone.examples/checkbox/SojNrUmXHg8qOEVNxLMELyPxf1I -->\n\n<p><strong>normal</strong></p>\n<!-- bem-example: touch-phone.examples/checkbox/Sgn48vD0-J9Y9jIc1geFcHu6qVA -->\n\n<h3 id=\"-_size-\">Размер <code>_size</code></h3>\n<p>Задает размер шрифта.</p>\n<p>Обязательный модификатор. Реализован только в теме <em>normal</em>.</p>\n<p>Доступно два размера реализации блока: <strong>M</strong>, <strong>L</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>блока</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота строки<br>элемента <code>__box</code></th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Размер M&#39;,\n    name: &#39;name2&#39;,\n    val: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>17px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Размер L&#39;,\n    name: &#39;name3&#39;,\n    val: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Тип <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки (модификатор <code>type</code> в значении <code>button</code>). В таком случае выбор элемента происходит нажатием на кнопку.</p>\n<!-- bem-example: touch-phone.examples/checkbox/GSqTjc8TX7KG5JpqDbcpS1N0CZM -->\n\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>focused</code> со значением <code>true</code> чекбокс всегда находится в фокусе. Если блок представлен в виде кнопки, она приобретает желтую тень. Нажатие по чекбоксу можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<!-- bem-example: touch-phone.examples/checkbox/79qZiqVxBY5r5ZaX_gUFH7MMT5Y -->\n\n<!-- bem-example: touch-phone.examples/checkbox/tU4ymq_plszDwGgrM91feVLkv6s -->\n\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии «неактивен» чекбокс виден, но недоступен для действий пользователя.</p>\n<p>Такой чекбос не может получить фокус путем нажатия на клавишу <code>Tab</code> мышью или другими способами.</p>\n<!-- bem-example: touch-phone.examples/checkbox/GiSyOjElYwkWa_mbNQ4LvfexC8o -->\n\n<!-- bem-example: touch-phone.examples/checkbox/MiwyveGqb-Q3hDh6b5dvanmXUc0 -->\n\n<h4 id=\"-_checked-\">Отмечен <code>_checked</code></h4>\n<p>Модификатор <code>checked</code> в значении <code>true</code> определяет, что чекбокс отмечен (выбран).</p>\n<p>Модификатор <code>checked</code> может быть применен ко всем чекбоксам в группе.</p>\n<!-- bem-example: touch-phone.examples/checkbox/IMYtMHFDZhN_agFpLXmNIDTAK4Q -->\n\n<!-- bem-example: touch-phone.examples/checkbox/ZWO500NSNVuNcdNcItDCWIHDH3o -->\n\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>box</code> служит для отрисовки чекбокса, нативный чекбокс скрыт.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n<h3 id=\"-__control-\">Контрол <code>__control</code></h3>\n<p>Элемент <code>control</code> служит для использования функциональности нативного контрола чекбокса.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n\n<h1 id=\"control\">control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"../attach/attach.ru.md\">attach</a></li>\n<li><a href=\"../button/button.ru.md\">button</a></li>\n<li><a href=\"../checkbox/checkbox.ru.md\">checkbox</a></li>\n<li><a href=\"../input/input.ru.md\">input</a></li>\n<li><a href=\"../link/link.ru.md\">link</a></li>\n<li><a href=\"../menu/menu.ru.md\">menu</a></li>\n<li><a href=\"../radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"},"en":{"name":"checkbox","examples":[{"url":"touch-phone.tests/checkbox/gemini"},{"url":"touch-phone.tests/checkbox/simple"},{"url":"touch-phone.tests/checkbox-group/gemini"},{"url":"touch-phone.tests/checkbox-group/simple"}],"description":"<h1 id=\"checkbox\">checkbox</h1>\n<p>Block <code>checkbox</code> is a graphical user interface element that allows user to make a binary choice. The block is used when more then one case should be selected.</p>\n<p>Block creates a container that includes a native checkbox control (<code>control</code> element) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot; attributes&gt;</code> that is hidden if a <code>theme</code> modifier is specified.</p>\n<p><code>autocomplete</code> attribute is forced to <code>off</code> state to provide correct behavior of the block.</p>\n<!-- bem-example: touch-phone.examples/checkbox/XI4uPzI90-UiMiWRig9noeu3mrg -->\n\n<h2 id=\"valid-block-s-attributes\">Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified within the corresponding fields of the block BEMJSON file:</p>\n<table>\n    <tr>\n        <th>Attribute</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies text string value of a checkbox.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies a checkbox name. A mandatory attribute. The name part of the name/val pair associated with this element for form&#39;s submission purposes.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies a checkbox value. Value part of the name/val pair associated with this element for the form&#39;s submission purposes.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>An icon that is rendered using an <code>icon</code> block.</td>\n    </tr>\n</table>\n\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"_theme\">_theme</h3>\n<p>Block supports following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>If a <code>theme</code> modifier is not specified, the native representation (<em>default</em>) of a control is available.</p>\n<p>See the following examples for demonstration:</p>\n<p><strong>default</strong></p>\n<!-- bem-example: touch-phone.examples/checkbox/sae-WwdkdYcrwwgUC5hw2NDih4 -->\n\n<p><strong>simple</strong></p>\n<!-- bem-example: touch-phone.examples/checkbox/SojNrUmXHg8qOEVNxLMELyPxf1I -->\n\n<p><strong>normal</strong></p>\n<!-- bem-example: touch-phone.examples/checkbox/Sgn48vD0-J9Y9jIc1geFcHu6qVA -->\n\n<h3 id=\"_size\">_size</h3>\n<p>Mandatory modifier for <em>normal</em> theme only.\nProvides checkbox text elements with font size value.</p>\n<p>There are two sizes available: <strong>M</strong>, <strong>L</strong>.</p>\n<p>See the following examples for demonstration:</p>\n<table>\n    <tr>\n        <th>Block size</th>\n        <th>Font size</th>\n        <th>String height<br>of <code>__box</code></th>\n        <th>Example</th>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Size M&#39;,\n    name: &#39;name2&#39;,\n    val: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>17px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Size L&#39;,\n    name: &#39;name3&#39;,\n    val: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"_type\">_type</h3>\n<p>The <code>checkbox</code> block can be rendered as a button. If needed, use <code>type</code> modifier with <code>button</code> value. In this case <code>checked</code> state of a checkbox is defined by clicking the button.</p>\n<!-- bem-example: touch-phone.examples/checkbox/jnUIxNLmi2Ktczi3mi_QWJt7-cc -->\n\n<h3 id=\"states-of-a-checkbox\">States of a checkbox</h3>\n<h4 id=\"_focused\">_focused</h4>\n<p>Checkbox is focused if block has <code>focused</code> modifier with <code>true</code> value. If block is designed as a button, in <code>focused</code> state it has a yellow shadow.</p>\n<p>You can tick off the focused checkbox using <code>Space</code> or <code>Enter</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<!-- bem-example: touch-phone.examples/checkbox/dOZ5XkX9ojCi2r9kiY4DJa4YWvA -->\n\n<!-- bem-example: touch-phone.examples/checkbox/v-9BRGnxLdDNcDKCfuStYG9PRYU -->\n\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If <code>disabled</code> modifier has <code>true</code> value, the checkbox is visible but not available for user&#39;s action.</p>\n<p>Disabled checkbox cannot be focused by pressing <code>Tab</code> or on mouse click.</p>\n<!-- bem-example: touch-phone.examples/checkbox/Dz3sVcJ6LQvatoLktNJM35QPIso -->\n\n<!-- bem-example: touch-phone.examples/checkbox/Lc_qQBikKsf-9GuBeR0FLc4-3k0 -->\n#### <code>_checked</code>\n\n<code>checked</code> modifier with <code>true</code> value defines checkbox as checked.\n\n<code>checked</code> modifier can be used for all checkboxes within the group.\n\n<!-- bem-example: touch-phone.examples/checkbox/QcTYyDncRH6DrvinlVti5iujuxU -->\n\n<!-- bem-example: touch-phone.examples/checkbox/9OMss9AsUlfFVAPsG8SlTTcVlLI -->\n\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p><code>box</code> element is used to draw the checkbox. Native checkbox is hidden.</p>\n<p><code>box</code> element is added to the block on template engine level.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p><code>control</code> element is used to provide native control checkbox functionality.</p>\n<p><code>control</code> element is added to the block on template engine level.</p>\n\n<h1 id=\"control\">control</h1>\n<p>Auxiliary block designed for common functionality implementation to provide the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library with <code>focused</code> and <code>disabled</code> states:</p>\n<ul>\n<li><a href=\"../attach/attach.en.md\">attach</a></li>\n<li><a href=\"../button/button.en.md\">button</a></li>\n<li><a href=\"../checkbox/checkbox.en.md\">checkbox</a></li>\n<li><a href=\"../input/input.en.md\">input</a></li>\n<li><a href=\"../link/link.en.md\">link</a></li>\n<li><a href=\"../menu/menu.en.md\">menu</a></li>\n<li><a href=\"../radio/radio.en.md\">radio</a></li>\n</ul>\n<p>The <code>control</code> block provides valid <code>tabIndex</code> attribute value depending on the current state of a block.</p>\n<p>The block uses following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns a control&#39;s value.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If control name is not available, returns an empty string.</td>\n    </tr>\n</table>\n"}}
{"en":{"name":"checkbox","examples":[{"content":[{"url":"touch-phone.examples/checkbox/79qZiqVxBY5r5ZaX_gUFH7MMT5Y/79qZiqVxBY5r5ZaX_gUFH7MMT5Y.en"},{"url":"touch-phone.examples/checkbox/9OMss9AsUlfFVAPsG8SlTTcVlLI/9OMss9AsUlfFVAPsG8SlTTcVlLI.en"},{"url":"touch-phone.examples/checkbox/C7ZkQCq0ZPpMgf1piyMISEARwPc/C7ZkQCq0ZPpMgf1piyMISEARwPc.en"},{"url":"touch-phone.examples/checkbox/dOZ5XkX9ojCi2r9kiY4DJa4YWvA/dOZ5XkX9ojCi2r9kiY4DJa4YWvA.en"},{"url":"touch-phone.examples/checkbox/Dz3sVcJ6LQvatoLktNJM35QPIso/Dz3sVcJ6LQvatoLktNJM35QPIso.en"},{"url":"touch-phone.examples/checkbox/FSuk4Im9Ao4_75PdjgBzm3U8Zww/FSuk4Im9Ao4_75PdjgBzm3U8Zww.en"},{"url":"touch-phone.examples/checkbox/GSqTjc8TX7KG5JpqDbcpS1N0CZM/GSqTjc8TX7KG5JpqDbcpS1N0CZM.en"},{"url":"touch-phone.examples/checkbox/IMYtMHFDZhN_agFpLXmNIDTAK4Q/IMYtMHFDZhN_agFpLXmNIDTAK4Q.en"},{"url":"touch-phone.examples/checkbox/Lc_qQBikKsf-9GuBeR0FLc4-3k0/Lc_qQBikKsf-9GuBeR0FLc4-3k0.en"},{"url":"touch-phone.examples/checkbox/MiwyveGqb-Q3hDh6b5dvanmXUc0/MiwyveGqb-Q3hDh6b5dvanmXUc0.en"},{"url":"touch-phone.examples/checkbox/QcTYyDncRH6DrvinlVti5iujuxU/QcTYyDncRH6DrvinlVti5iujuxU.en"},{"url":"touch-phone.examples/checkbox/sae-WwdkdYcrwwgUC5hw2NDih4/sae-WwdkdYcrwwgUC5hw2NDih4.en"},{"url":"touch-phone.examples/checkbox/Sgn48vD0-J9Y9jIc1geFcHu6qVA/Sgn48vD0-J9Y9jIc1geFcHu6qVA.en"},{"url":"touch-phone.examples/checkbox/SojNrUmXHg8qOEVNxLMELyPxf1I/SojNrUmXHg8qOEVNxLMELyPxf1I.en"},{"url":"touch-phone.examples/checkbox/tU4ymq_plszDwGgrM91feVLkv6s/tU4ymq_plszDwGgrM91feVLkv6s.en"},{"url":"touch-phone.examples/checkbox/v-9BRGnxLdDNcDKCfuStYG9PRYU/v-9BRGnxLdDNcDKCfuStYG9PRYU.en"},{"url":"touch-phone.examples/checkbox/XI4uPzI90-UiMiWRig9noeu3mrg/XI4uPzI90-UiMiWRig9noeu3mrg.en"},{"url":"touch-phone.examples/checkbox/ZQpxZtXWq6x9EgytPp4qnULF16g/ZQpxZtXWq6x9EgytPp4qnULF16g.en"},{"url":"touch-phone.examples/checkbox/ZWO500NSNVuNcdNcItDCWIHDH3o/ZWO500NSNVuNcdNcItDCWIHDH3o.en"},{"url":"touch-phone.examples/checkbox-group/E4bazg4TDlm1W1tmOFMVgeAT1k0/E4bazg4TDlm1W1tmOFMVgeAT1k0.en"},{"url":"touch-phone.examples/checkbox-group/tnfPsUBEHfiKv4Ay-bSkmy06NTs/tnfPsUBEHfiKv4Ay-bSkmy06NTs.en"},{"url":"touch-phone.examples/checkbox-group/uf6KFu6RRJ3CJRzlZj5THp-53ss/uf6KFu6RRJ3CJRzlZj5THp-53ss.en"},{"url":"touch-phone.examples/checkbox-group/Yy5DRxHNPA5fsD-l76T556p1aMY/Yy5DRxHNPA5fsD-l76T556p1aMY.en"}]}],"description":[{"content":"<h1 id=\"checkbox\">checkbox</h1>\n<p>Block <code>checkbox</code> is a graphical user interface element that permits the user to make a binary choice.</p>\n<p>The block creates a container that includes a native checkbox control (<code>control</code> element) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot; attributes&gt;</code> and uses its functionality. A native control is hidden. An <code>autocomplete</code> attribute is <code>off</code> by default.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;Label 1&#39;,\n    name: &#39;name1&#39;,\n    value: &#39;1&#39;\n}\n</code></pre>\n<h2 id=\"-valid-block-s-attributes\">## Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes could be specified in the corresponding fields of the block BEMJSON file:</p>\n<table>\n    <tr>\n        <th>Attribute</th>\n        <th>Type</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies text string value of a checkbox.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Specifies a checkbox name. A mandatory attribute. The name part of the name/value pair associated with this element for the purposes of form submission.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n            <code>String</code>\n        <td>Specifies a checkbox value. The value part of the name/value pair associated with this element for the purposes of form submission.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>An icon that is rendered using an <code>icon</code> block.</td>\n    </tr>\n</table>\n\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"themes-_theme-\">Themes <code>_theme</code></h3>\n<p>The block supports the following themes:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>It a <code>_theme</code> modifier is not specified the native representation (<em>default</em>) of a control is available.</p>\n<p>Following example demonstrates this:</p>\n<ul>\n<li><p>default</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      text : &#39;default&#39;,\n      name: &#39;default&#39;,\n      value: &#39;1&#39;\n  }\n</code></pre>\n</li>\n<li><p>simple</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      mods : { theme : &#39;simple&#39; },\n      text : &#39;Theme Simple&#39;,\n      name: &#39;simple&#39;,\n      value: &#39;2&#39;\n  }\n</code></pre>\n</li>\n<li><p>normal</p>\n<pre><code class=\"lang-bemjson\">  {\n      block : &#39;checkbox&#39;,\n      mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n      text : &#39;Theme Normal&#39;,\n      name: &#39;normal&#39;,\n      value: &#39;3&#39;\n  }\n</code></pre>\n</li>\n</ul>\n<h3 id=\"font-size-_size-\">Font size <code>_size</code></h3>\n<p>Mandatory modifier for <em>normal</em> theme only.\nProvides the font size value to the checkbox text elements.</p>\n<p>There are four sizes available: <strong>S</strong>, <strong>M</strong>, <strong>L</strong>, <strong>XL</strong>.</p>\n<p>Following example demonstrates this:</p>\n<table>\n    <tr>\n        <th>Size/Parameters</th>\n        <th>Font size</th>\n        <th>String height</th>\n        <th>Example</th>\n    </tr>\n    <tr>\n        <th>S</th>\n        <td>13px</td>\n        <td>24px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;s&#39;\n    },\n    text : &#39;Size S&#39;,\n    name: &#39;name1&#39;,\n    value: &#39;1&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>28px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Size M&#39;,\n    name: &#39;name2&#39;,\n    value: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>32px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Size L&#39;,\n    name: &#39;name3&#39;,\n    value: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>XL</th>\n        <td>18px</td>\n        <td>38px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;xl&#39;\n    },\n    text : &#39;Size XL&#39;,\n    name: &#39;name4&#39;,\n    value: &#39;4&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"types-_type-\">Types <code>_type</code></h3>\n<p>The <code>checkbox</code> block can be rendered as a buttons. For this use a <code>type</code> modifier with a <code>button</code> value. In this case a <code>checked</code> state of a checkbox is defined by clicking the button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;,\n        type : &#39;button&#39;\n    },\n    text : &#39;Label&#39;,\n    name: &#39;button&#39;,\n    value: &#39;1&#39;\n}\n</code></pre>\n<h3 id=\"states-of-a-checkbox\">States of a checkbox</h3>\n<h4 id=\"-_focused-\"><code>_focused</code></h4>\n<p>Checkbox is focused if a block has a <code>focused</code> modifier with a <code>true</code> value.</p>\n<p>You can tick off the focused checkbox using <code>Space</code> button on your keyboard. To switch between controls use a <code>Tab</code> button.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    text : &#39;Focused&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, focused : true },\n    text : &#39;Focused&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_disabled-\"><code>_disabled</code></h4>\n<p>If a <code>disabled</code> modifier has <code>true</code> value the checkbox is visible, but is not available for the user action.</p>\n<p>Disabled checkbox cannot be focused by <code>Tab</code> pressing or mouse click.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    text : &#39;Disabled&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, disabled : true },\n    text : &#39;Disabled&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_checked-\"><code>_checked</code></h4>\n<p>A <code>checked</code> modifier with <code>true</code> value ticks off the checkbox, or clicks a button if a checkbox has <code>{ type : &#39;button&#39; }</code> modifier.</p>\n<p>A <code>checked</code> modifier can be used for all checkboxes in the group.ппе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, checked : true },\n    text : &#39;Checked&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, checked : true },\n    text : &#39;Checked&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>The <code>box</code> element is used to draw the checkbox. A native checkbox is hidden.</p>\n<p>The <code>box</code> element is added to the block on a template engine level.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>The <code>control</code> element is used to provide native control checkbox functionality.</p>\n<p>The <code>control</code> element is added to the block on a template engine level.</p>\n<h2 id=\"block-s-dependencies\">Block&#39;s dependencies</h2>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Auxiliary block designed to implement the common functionality of the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library to provide them <code>focused</code> and <code>disabled</code> states: <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.en.md\">attach</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.en.md\">button</a>, <a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.en.title.txt\">checkbox</a>, [input], [link], [menu], [radio].</p>\n<p>The block uses the following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>beforesetMod</code></td>\n        <td>Provides the block behavior before the modifier is set. Checks the block active state. If block is <code>disabled</code> it cannot be <code>focused</code>.</td>\n    </tr>\n    <tr>\n        <td><code>setMod</code></td>\n        <td>Provides <code>focused</code> or <code>disabled</code> modifier to the block.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If a control name is not available, returns an empty string.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns control value.</td>\n    </tr>\n</table>\n"}]},"ru":{"name":"checkbox","examples":[{"content":[{"url":"touch-phone.examples/checkbox/79qZiqVxBY5r5ZaX_gUFH7MMT5Y/79qZiqVxBY5r5ZaX_gUFH7MMT5Y.ru"},{"url":"touch-phone.examples/checkbox/9OMss9AsUlfFVAPsG8SlTTcVlLI/9OMss9AsUlfFVAPsG8SlTTcVlLI.ru"},{"url":"touch-phone.examples/checkbox/C7ZkQCq0ZPpMgf1piyMISEARwPc/C7ZkQCq0ZPpMgf1piyMISEARwPc.ru"},{"url":"touch-phone.examples/checkbox/dOZ5XkX9ojCi2r9kiY4DJa4YWvA/dOZ5XkX9ojCi2r9kiY4DJa4YWvA.ru"},{"url":"touch-phone.examples/checkbox/Dz3sVcJ6LQvatoLktNJM35QPIso/Dz3sVcJ6LQvatoLktNJM35QPIso.ru"},{"url":"touch-phone.examples/checkbox/FSuk4Im9Ao4_75PdjgBzm3U8Zww/FSuk4Im9Ao4_75PdjgBzm3U8Zww.ru"},{"url":"touch-phone.examples/checkbox/GSqTjc8TX7KG5JpqDbcpS1N0CZM/GSqTjc8TX7KG5JpqDbcpS1N0CZM.ru"},{"url":"touch-phone.examples/checkbox/IMYtMHFDZhN_agFpLXmNIDTAK4Q/IMYtMHFDZhN_agFpLXmNIDTAK4Q.ru"},{"url":"touch-phone.examples/checkbox/Lc_qQBikKsf-9GuBeR0FLc4-3k0/Lc_qQBikKsf-9GuBeR0FLc4-3k0.ru"},{"url":"touch-phone.examples/checkbox/MiwyveGqb-Q3hDh6b5dvanmXUc0/MiwyveGqb-Q3hDh6b5dvanmXUc0.ru"},{"url":"touch-phone.examples/checkbox/QcTYyDncRH6DrvinlVti5iujuxU/QcTYyDncRH6DrvinlVti5iujuxU.ru"},{"url":"touch-phone.examples/checkbox/sae-WwdkdYcrwwgUC5hw2NDih4/sae-WwdkdYcrwwgUC5hw2NDih4.ru"},{"url":"touch-phone.examples/checkbox/Sgn48vD0-J9Y9jIc1geFcHu6qVA/Sgn48vD0-J9Y9jIc1geFcHu6qVA.ru"},{"url":"touch-phone.examples/checkbox/SojNrUmXHg8qOEVNxLMELyPxf1I/SojNrUmXHg8qOEVNxLMELyPxf1I.ru"},{"url":"touch-phone.examples/checkbox/tU4ymq_plszDwGgrM91feVLkv6s/tU4ymq_plszDwGgrM91feVLkv6s.ru"},{"url":"touch-phone.examples/checkbox/v-9BRGnxLdDNcDKCfuStYG9PRYU/v-9BRGnxLdDNcDKCfuStYG9PRYU.ru"},{"url":"touch-phone.examples/checkbox/XI4uPzI90-UiMiWRig9noeu3mrg/XI4uPzI90-UiMiWRig9noeu3mrg.ru"},{"url":"touch-phone.examples/checkbox/ZQpxZtXWq6x9EgytPp4qnULF16g/ZQpxZtXWq6x9EgytPp4qnULF16g.ru"},{"url":"touch-phone.examples/checkbox/ZWO500NSNVuNcdNcItDCWIHDH3o/ZWO500NSNVuNcdNcItDCWIHDH3o.ru"},{"url":"touch-phone.examples/checkbox-group/E4bazg4TDlm1W1tmOFMVgeAT1k0/E4bazg4TDlm1W1tmOFMVgeAT1k0.ru"},{"url":"touch-phone.examples/checkbox-group/tnfPsUBEHfiKv4Ay-bSkmy06NTs/tnfPsUBEHfiKv4Ay-bSkmy06NTs.ru"},{"url":"touch-phone.examples/checkbox-group/uf6KFu6RRJ3CJRzlZj5THp-53ss/uf6KFu6RRJ3CJRzlZj5THp-53ss.ru"},{"url":"touch-phone.examples/checkbox-group/Yy5DRxHNPA5fsD-l76T556p1aMY/Yy5DRxHNPA5fsD-l76T556p1aMY.ru"}]}],"description":[{"content":"<h1 id=\"checkbox\">checkbox</h1>\n<p>Блок <code>checkbox</code> («чекбокс») позволяет управлять параметром выбора с двумя состояниями – включено и выключено. Используется, когда необходимо выбрать более одного варианта из предложенных.</p>\n<p>Блок создает контейнер, содержащий нативный контрол чекбокс (элемент <code>__control</code>) <code>&lt;input class=&quot;checkbox__control&quot; type=&quot;checkbox&quot;&gt;</code>, который скрывается при использовании модификатора <code>_theme</code>.</p>\n<p>Атрибут <code>autocomplete</code> принудительно переведен в состояние <code>off</code> для обеспечения корректной работы блока.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;Вариант 1&#39;,\n    name: &#39;name1&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td>text</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение текстовой строке чекбокса.</td>\n    </tr>\n    <tr>\n        <td>name</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает имя чекбокса. Обязательный атрибут. Является частью пары имя / значение (name / val), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>val</td>\n        <td>\n            <code>String</code>\n        </td>\n        <td>Задает значение чекбокса. Является частью пары имя / значение (name / val), используемой с целью отправки формы.</td>\n    </tr>\n    <tr>\n        <td>icon</td>\n        <td>\n            <code>BEMJSON</code>\n        </td>\n        <td>Иконка, которая отображается с помощью блока <code>icon</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-_theme-\">Темы <code>_theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания модификатора темы отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    text : &#39;default&#39;,\n    name: &#39;default&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<p><strong>simple</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;simple&#39; },\n    text : &#39;Тема Simple&#39;,\n    name: &#39;simple&#39;,\n    val: &#39;2&#39;\n}\n</code></pre>\n<p><strong>normal</strong></p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n    text : &#39;Тема Normal&#39;,\n    name: &#39;normal&#39;,\n    val: &#39;3&#39;\n}\n</code></pre>\n<h3 id=\"-_size-\">Размер <code>_size</code></h3>\n<p>Задает размер шрифта.</p>\n<p>Обязательный модификатор. Реализован только в теме <em>normal</em>.</p>\n<p>Доступно два размера реализации блока: <strong>M</strong>, <strong>L</strong>.</p>\n<table>\n    <tr>\n        <th>Размер<br>блока</th>\n        <th>Размер<br>шрифта</th>\n        <th>Высота строки<br>элемента <code>__box</code></th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <th>M</th>\n        <td>13px</td>\n        <td>14px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;m&#39;\n    },\n    text : &#39;Размер M&#39;,\n    name: &#39;name2&#39;,\n    val: &#39;2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n    <tr>\n        <th>L</th>\n        <td>15px</td>\n        <td>17px</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;checkbox&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;\n    },\n    text : &#39;Размер L&#39;,\n    name: &#39;name3&#39;,\n    val: &#39;3&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n<h3 id=\"-_type-\">Тип <code>_type</code></h3>\n<p>Блок может быть представлен в виде кнопки (модификатор <code>_type</code> в значении <code>_button</code>). В таком случае выбор элемента происходит нажатием на кнопку.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39; },\n    text : &#39;Кнопка Normal&#39;,\n    name: &#39;button&#39;,\n    val: &#39;1&#39;\n}\n</code></pre>\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-_focused-\">В фокусе <code>_focused</code></h4>\n<p>В состоянии блока <code>_focused</code> со значением <code>_true</code> чекбокс всегда находится в фокусе. Если блок представлен в виде кнопки, она приобретает желтую тень. Нажатие по чекбоксу можно выполнить клавишей <code>Space</code> или <code>Enter</code>. Переход по контролам формы осуществляется клавишей <code>Tab</code>.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, focused : true },\n    text : &#39;В фокусе&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, focused : true },\n    text : &#39;В фокусе&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_disabled-\">Неактивен <code>_disabled</code></h4>\n<p>В состоянии «неактивен» чекбокс виден, но недоступен для действий пользователя.</p>\n<p>Такой чекбос не может получить фокус путем нажатия на клавишу <code>Tab</code>, мышью или другими способами.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n    text : &#39;Неактивна&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, disabled : true },\n    text : &#39;Неактивна&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h4 id=\"-_checked-\">Отмечен <code>_checked</code></h4>\n<p>Модификатор <code>_checked</code> в значении <code>true</code> определяет, что чекбокс отмечен (выбран).</p>\n<p>Модификатор <code>_checked</code> может быть применен ко всем чекбоксам в группе.</p>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, checked : true },\n    text : &#39;Отмечен&#39;,\n    name: &#39;name1&#39;,\n    val : 1\n}\n</code></pre>\n<pre><code class=\"lang-bemjson\">{\n    block : &#39;checkbox&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, checked : true },\n    text : &#39;Отмечен&#39;,\n    name: &#39;name2&#39;,\n    val : 2\n}\n</code></pre>\n<h2 id=\"-\">Элементы блока</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>__box</code> служит для отрисовки чекбокса, нативный чекбокс скрыт.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n<h3 id=\"-__control-\">Контрол <code>__control</code></h3>\n<p>Элемент <code>__control</code> служит для использования функциональности нативного контрола чекбокса.</p>\n<p>Добавляется блоку на уровне шаблонизатора.</p>\n<h2 id=\"-\">Зависимости блока</h2>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>base-control</code></li>\n<li><code>button</code></li>\n</ul>\n\n<h1 id=\"base-control\">base-control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/checkbox/checkbox.ru.title.txt\">checkbox</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"https://github.com/bem/bem-components/blob/v2/common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"https://github.com/bem/bem-components/tree/v2/common.blocks/radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"}]}}
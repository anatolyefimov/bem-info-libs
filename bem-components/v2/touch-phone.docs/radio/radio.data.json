{"ru":{"name":"radio","examples":[{"url":"touch-phone.tests/radio-group/gemini"},{"url":"touch-phone.tests/radio-group/simple"}],"description":"<h1 id=\"radio\">radio</h1>\n<p>Блок <code>radio</code> – «радиопереключатель», «радиокнопка». Используется для создания одиночных радиобоксов.</p>\n<p>В реализации блока используется функциональность нативного контрола <code>input</code> с атрибутом <code>type=&quot;radio&quot;</code> – <code>&lt;input name=&quot;name&quot; type=&quot;radio&quot;&gt;</code>, который скрывается при использовании модификатора <code>theme</code>.</p>\n<p>В результате применения шаблонов блок <code>radio</code> отображается на странице как HTML-тег <code>&lt;label&gt;</code> – контейнер, содержащий:</p>\n<ul>\n<li>элемент <code>radio__box</code>, содержащий скрытый контрол <code>input</code> (элемент <code>__control</code>);</li>\n<li>подпись к радиокнопке, если задан BEMJSON-параметр <code>text</code>.</li>\n</ul>\n<h2 id=\"-\">Допустимые атрибуты</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON-блока:</p>\n<table>\n    <tr>\n        <th>Атрибут</th>\n        <th>Тип</th>\n        <th>Описание</th>\n    </tr>\n    <tr>\n        <td><code>name</code></td>\n        <td><code>String|Number</code></td>\n        <td>Имя радиокнопки. Преобразуется в HTML-атрибут <code>name</code> вложенного блока <code>input</code>.</td>\n    </tr>\n    <tr>\n        <td><code>text</code></td>\n        <td><code>String|Number</code></td>\n        <td>Подпись, отображаемая для радиокнопки.</td>\n    </tr>\n    <tr>\n        <td><code>val</code></td>\n        <td><code>String|Number</code></td>\n        <td>Значение, возвращаемое контролом радиопереключателя <code>radio__control</code>, если выбрана текущая радиокнопка. Преобразуется в HTML-атрибут <code>value</code> вложенного блока <code>input</code>.</td>\n    </tr>\n</table>\n\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-theme-\">Темы <code>theme</code></h3>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>Без указания темы к блоку отображается нативный вид контрола (<em>default</em>).</p>\n<p>Наглядно видно на примерах ниже:</p>\n<p><strong>default</strong></p>\n<!-- bem-example: touch-phone.examples/radio/xr-zTTUYS3DD_e4xJV6Yn3a3BPI -->\n\n<p><strong>simple</strong></p>\n<!-- bem-example: touch-phone.examples/radio/pPPjX0UcGCQBYmUNCpE27JADBCU -->\n\n<p><strong>normal</strong></p>\n<!-- bem-example: touch-phone.examples/radio/L98T9NertqtVCJpvDLdlKg6huWI -->\n\n<h3 id=\"-size-\">Размеры радиопереключателя <code>size</code></h3>\n<p>Обязательный модификатор. Задает размер всем типам радиопереключателей.</p>\n<p>Реализован только в теме <em>normal</em>.</p>\n<p>В зависимости от значения модификатора <code>type</code> доступны следующие размеры реализации блока:</p>\n<table>\n    <tr>\n        <th>Размер</th>\n        <th>Обычный радиопереключатель</th>\n        <th>Кнопочный радиопереключатель (<code>radio_type_button</code>)</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>–</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>–</td>\n        <td>+</td>\n</table>\n\n\n<h3 id=\"-type-\">Тип радиопереключателя <code>type</code></h3>\n<p>Модификатор <code>type</code> со значением <code>button</code> используется для создания кнопочного радиопереключателя – кнопки (блок <code>button</code>) с установленным модификатором <code>button_togglable_radio</code>.</p>\n<p>При этом к блоку <code>button</code> примешивается блок <code>radio</code>, а контентом кнопки становится <code>radio__control</code>.</p>\n<p>Кроме того, при установленном модификаторе <code>radio_type_button</code> для блока задается HTML-атрибут <code>role=&quot;button&quot;</code>.</p>\n<table>\n    <tr>\n        <th>Тип</th>\n        <th>Пример</th>\n    </tr>\n    <tr>\n        <td>Обычный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Кнопочный радиопереключатель</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        type : &#39;button&#39;\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"-disabled-\">Неактивен <code>disabled</code></h3>\n<p>В состоянии «неактивен» радиопереключатель отображается, но недоступен для действий пользователя.</p>\n<p>Такой радиопереключатель не будет получать фокус (модификатор <code>focused</code>).</p>\n<p>При установке модификатора <code>disabled</code> для радиопереключателя не будут:</p>\n<ul>\n<li>устанавливаться модификаторы состояния <code>hovered</code>, <code>pressed</code> и <code>focused</code>;</li>\n<li>изменяться значение модификатора <code>checked</code>.</li>\n</ul>\n<!-- bem-example: touch-phone.examples/radio/RBPWsSDN_yrB6HXtmtrnXB3WSMY -->\n\n<h3 id=\"-\">Состояния</h3>\n<h4 id=\"-focused-\">В фокусе <code>focused</code></h4>\n<p>Модификатор <code>focused</code> в значении <code>true</code> автоматически выставляется блоку в момент, когда он находится в фокусе. Например, по нажатию клавиши <code>Tab</code> или при щелчке мышью.</p>\n<!-- bem-example: touch-phone.examples/radio/wEYcA7ioT134yNzBSljZyhtiyg8 -->\n\n<h4 id=\"-checked-\">Выбран <code>checked</code></h4>\n<p>Модификатор <code>checked</code> указывает на то, что радиопереключатель выбран (отмечен).</p>\n<p>Модификатор устанавливается по:</p>\n<ul>\n<li>щелчку мыши по блоку (при повторных щелчках модификатор сохраняется);</li>\n<li>нажатию клавиш <code>Enter</code> или <code>Space</code> (возможность использования клавиши <code>Enter</code> зависит от браузера), если радиопереключатель находится в фокусе (модификатор <code>focused</code>);</li>\n<li>нажатию клавиш стрелок, если фокус установлен на соседний радиопереключатель в радиогруппе или в блоке, содержащем несколько блоков <code>radio</code>.</li>\n</ul>\n<!-- bem-example: touch-phone.examples/radio/TLM9QTv-Pjlfq-MNpduxyTgw0cg -->\n\n<h4 id=\"-radio_type_button-\">Состояния, доступные с модификатором <code>radio_type_button</code></h4>\n<p>При установленном модификаторе <code>radio_type_button</code> к блоку <code>button</code> примешивается блок <code>radio</code>. Как следствие, для блока с модификатором <code>radio_type_button</code> доступны состояния блока <code>button</code>:</p>\n<ul>\n<li><code>hovered</code> – под курсором;</li>\n<li><code>pressed</code> – кнопка нажата.</li>\n</ul>\n<h2 id=\"-\">Элементы</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>Элемент <code>__box</code> используется в стандартной реализации блока как контейнер, содержащий контрол радиокнопки (элемент <code>__control</code>). В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;span&gt;</code>.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>Элемент <code>__control</code> – контрол радиокнопки. В результате BEMHTML-преобразований становится HTML-элементом <code>&lt;input&gt;</code> с атрибутом <code>type=&quot;radio&quot;</code>. По умолчанию элемент скрыт. В блоке используется только его функциональность.</p>\n<h2 id=\"-\">Зависимости</h2>\n<p>Блок <code>radio</code> зависит от следующего набора блоков и элементов:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>control</code></li>\n<li><code>jquery__event</code></li>\n<li><code>__box</code></li>\n<li><code>__control</code></li>\n</ul>\n\n<h1 id=\"control\">control</h1>\n<p>Вспомогательный блок. Используется для работы большинства блоков библиотеки <a href=\"https://github.com/bem/bem-components\">bem-components</a>:</p>\n<ul>\n<li><a href=\"../attach/attach.ru.md\">attach</a></li>\n<li><a href=\"../button/button.ru.md\">button</a></li>\n<li><a href=\"../checkbox/checkbox.ru.md\">checkbox</a></li>\n<li><a href=\"../input/input.ru.md\">input</a></li>\n<li><a href=\"../link/link.ru.md\">link</a></li>\n<li><a href=\"../menu/menu.ru.md\">menu</a></li>\n<li><a href=\"../radio/radio.ru.md\">radio</a></li>\n</ul>\n<p>Предназначен для реализации общей функциональности данных блоков, предоставляющей состояния <code>focused</code> и <code>disabled</code>.\nСледит за значением атрибута <code>tabIndex</code> в зависимости от текущего состояния блока.</p>\n<p>Блок использует следующие методы:</p>\n<table>\n    <tr>\n        <th>Метод</td>\n        <th>Описание</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Возвращает имя контрола при его наличии. В обратном случае должен вернуть пустую строку.</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Возвращает значение контрола.</td>\n    </tr>\n</table>\n"},"en":{"name":"radio","examples":[{"url":"touch-phone.tests/radio-group/gemini"},{"url":"touch-phone.tests/radio-group/simple"}],"description":"<h1 id=\"radio\">radio</h1>\n<p>A <code>radio</code> block is used for creating of a single radio switch. A switch can be represented by the radio switch or by the button. The <code>radio</code> block allows to manage state, content and type of a radio switches.</p>\n<p>The <code>radio</code> blocks are used inside a <code>radio-group</code> block as a group elements.</p>\n<p>As a result of block&#39;s template application, it will be rendered to a <code>&lt;label&gt;</code> HTML element, with following set of nested items:</p>\n<ul>\n<li>a <code>radio__box</code> element with hidden nested <code>input</code> HTML element (a <code>__control</code> element);</li>\n<li>a radio switch label, if the <code>text</code> BEMJSON attribute is passed.</li>\n</ul>\n<p>Block&#39;s implementation use the logic of a native <code>input</code> HTML element with set <code>radio</code> control type: <code>&lt;input name=&quot;name&quot; type=&quot;radio&quot;&gt;</code>. If a <code>theme</code> modifier is set, the <code>input</code> element is hidden by default.</p>\n<h2 id=\"valid-block-s-attributes\">Valid block&#39;s attributes</h2>\n<p>Valid block&#39;s attributes can be specified in the corresponding fields of block&#39;s BEMJSON declaration:</p>\n<table>\n    <tr>\n        <th align=\"center\">Attributes</th>\n        <th align=\"center\">Type</th>\n        <th align=\"center\">Description</th>\n    </tr>\n    <tr>\n        <td><code>name</code></td>\n        <td><code>String|Number</code></td>\n        <td>Radio switch name. Renders to a nested <code>input</code> block&#39;s <code>name</code> HTML attribute.</td>\n    </tr>\n    <tr>\n        <td><code>text</code></td>\n        <td><code>String|Number</code></td>\n        <td>A label for the radio switch.</td>\n    </tr>\n    <tr>\n        <td><code>val</code></td>\n        <td><code>String|Number</code></td>\n        <td>A value which the selected radio switch will return. Renders to a nested <code>input</code> block&#39;s <code>value</code> HTML attribute.</td>\n    </tr>\n</table>\n\n<h2 id=\"block-s-modifiers\">Block&#39;s modifiers</h2>\n<h3 id=\"the-themes-theme-\">The themes <code>theme</code></h3>\n<ul>\n<li>simple</li>\n<li>normal</li>\n</ul>\n<p>If a <code>theme</code> modifier is not set, the browser defaults (<code>default</code>) will be applied to the block.</p>\n<p>For example:</p>\n<p><strong>default</strong></p>\n<!-- bem-example: touch-phone.examples/radio/xr-zTTUYS3DD_e4xJV6Yn3a3BPI -->\n\n<p><strong>simple</strong></p>\n<!-- bem-example: touch-phone.examples/radio/pPPjX0UcGCQBYmUNCpE27JADBCU -->\n\n<p><strong>normal</strong></p>\n<!-- bem-example: touch-phone.examples/radio/L98T9NertqtVCJpvDLdlKg6huWI -->\n\n<h3 id=\"the-sizes-size-\">The sizes <code>size</code></h3>\n<p>Mandatory modifier. Available for <em>normal</em> theme only.\nProvides all types of radio switches with the size value.</p>\n<p>The set of available sizes depends on a <code>type</code> modifier&#39;s value. Following sizes are available:</p>\n<table>\n    <tr>\n        <th>Size</th>\n        <th>Default radio switch</th>\n        <th>Button radio switch (<code>_type_button</code>)</th>\n    </tr>\n    <tr>\n        <th>s</th>\n        <td>–</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>m</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>l</th>\n        <td>+</td>\n        <td>+</td>\n    </tr>\n    <tr>\n        <th>xl</th>\n        <td>–</td>\n        <td>+</td>\n</table>\n\n<h3 id=\"radio-switch-type-type-\">Radio switch type <code>type</code></h3>\n<p>A <code>type</code> modifier can be set to a <code>button</code> state for creating a button radio switch – the <code>button</code> block with a <code>button_togglable_radio</code> modifier set.</p>\n<p>The <code>radio</code> block is mixed up to the <code>button</code> block with nested <code>radio__control</code> element.</p>\n<p>In addition a <code>role=&quot;button&quot;</code> HTML attribute is set for the block.</p>\n<table>\n    <tr>\n        <th>Type</th>\n        <th>Example</th>\n    </tr>\n    <tr>\n        <td>Default radio switch</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch&#39;\n}\n            </code></pre>\n        </td>\n    <tr>\n        <td>Button radio switch</td>\n        <td>\n            <pre><code>\n{\n    block : &#39;radio&#39;,\n    mods : {\n        theme : &#39;normal&#39;,\n        size : &#39;l&#39;,\n        type : &#39;button&#39;\n    },\n    name : &#39;radio-normal&#39;,\n    text : &#39;Lonely switch2&#39;\n}\n            </code></pre>\n        </td>\n    </tr>\n</table>\n\n\n<h3 id=\"block-s-states\">Block&#39;s states</h3>\n<h4 id=\"inactive-disabled-\">Inactive <code>disabled</code></h4>\n<p>A <code>disabled</code> modifier is used for an inactive radio switch creation. An inactive radio switch is displayed but not available for user actions.  </p>\n<p>Inactive radio switch will not obtain focus (a <code>focused</code> modifier toggle) on mouse click or by <code>Tab</code> key press.</p>\n<p>For such a inactive block will not be performed:</p>\n<ul>\n<li><code>hovered</code>, <code>pressed</code> and <code>focused</code> state modifier toggling;</li>\n<li><code>checked</code> modifier value changing.</li>\n</ul>\n<!-- bem-example: touch-phone.examples/radio/RBPWsSDN_yrB6HXtmtrnXB3WSMY -->\n\n\n<h4 id=\"in-focus-focused-\">In focus <code>focused</code></h4>\n<p>A <code>focused</code> modifier is automatically toggled to the block when it is in focus. For example, on mouse click or by <code>Tab</code> key press.</p>\n<p>Available for all block themes.</p>\n<!-- bem-example: touch-phone.examples/radio/wEYcA7ioT134yNzBSljZyhtiyg8 -->\n\n\n<h4 id=\"selected-radio-switch-checked-\">Selected radio switch <code>checked</code></h4>\n<p>Modifier defines the selected radio switch.</p>\n<p>The modifier is toggling on:</p>\n<ul>\n<li>mouse click (on re-clicking modifier state remains);</li>\n<li><code>Enter</code> and <code>Space</code> key press (an option of <code>Enter</code> usage depends on a browser), if radio switch is in focus (a <code>focused</code> modifier is toggled);</li>\n<li>arrow key press, if one of the neighbour <code>radio</code> switches is in focus. Neighbour switch can be either a part of the same radio group or independent switch nested in the same block.</li>\n</ul>\n<!-- bem-example: touch-phone.examples/radio/yLi2X_E9s0cnYS8x7h0IvQ3Jmhw -->\n\n\n<h4 id=\"states-available-with-a-radio_type_button-modifier\">States available with a <code>radio_type_button</code> modifier</h4>\n<p>If a <code>radio_type_button</code> modifier is set, a <code>radio</code> block is mixed up to a <code>button</code> block. As a result, for the <code>radio</code> block with the <code>radio_type_button</code> modifier are available following <code>button</code> block&#39;s states:</p>\n<ul>\n<li><code>hovered</code> – mouse pointer over the block;</li>\n<li><code>pressed</code> – button is pressed.</li>\n</ul>\n<h2 id=\"block-s-elements\">Block&#39;s elements</h2>\n<h3 id=\"-__box-\"><code>__box</code></h3>\n<p>A <code>__box</code> element is used in basic block&#39;s implementation as a container with nested control element (a <code>__control</code> element). It renders to a <code>&lt;span&gt;</code> HTML element.</p>\n<h3 id=\"-__control-\"><code>__control</code></h3>\n<p>A <code>__control</code> element is a radio switch controller. It renders to an <code>&lt;input&gt;</code> HTML element with the <code>type=&quot;radio&quot;</code> attribute is set. In all block themes it is hidden by default. Block uses only the control&#39;s logic.</p>\n<h2 id=\"dependencies\">Dependencies</h2>\n<p>The block depends on:</p>\n<ul>\n<li><code>i-bem__dom</code></li>\n<li><code>control</code></li>\n<li><code>jquery__event</code></li>\n<li><code>__box</code></li>\n<li><code>__control</code></li>\n</ul>\n\n<h1 id=\"control\">control</h1>\n<p>Auxiliary block designed for common functionality implementation to provide the most blocks of <a href=\"https://github.com/bem/bem-components\">bem-components</a> library with <code>focused</code> and <code>disabled</code> states:</p>\n<ul>\n<li><a href=\"../attach/attach.en.md\">attach</a></li>\n<li><a href=\"../button/button.en.md\">button</a></li>\n<li><a href=\"../checkbox/checkbox.en.md\">checkbox</a></li>\n<li><a href=\"../input/input.en.md\">input</a></li>\n<li><a href=\"../link/link.en.md\">link</a></li>\n<li><a href=\"../menu/menu.en.md\">menu</a></li>\n<li><a href=\"../radio/radio.en.md\">radio</a></li>\n</ul>\n<p>The <code>control</code> block provides valid <code>tabIndex</code> attribute value depending on the current state of a block.</p>\n<p>The block uses following methods:</p>\n<table>\n    <tr>\n        <th>Method</td>\n        <th>Description</td>\n    </tr>\n    <tr>\n        <td><code>getVal</code></td>\n        <td>Returns a control&#39;s value.</td>\n    </tr>\n    <tr>\n        <td><code>getName</code></td>\n        <td>Returns the name of the control (if available). If control name is not available, returns an empty string.</td>\n    </tr>\n</table>\n"}}
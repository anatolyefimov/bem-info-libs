{
    "repo": "bem-components",
    "ref": "dev-docs",
    "url": "http://github.yandex-team.ru/bem/bem-components",
    "readme": "<h1 id=\"bem-components-library--!-build-status--https:--travis-ci-org-bem-bem-components-svg-branch=v2---https:--travis-ci-org-bem-bem-components---!-coverage-status--https:--coveralls-io-repos-bem-bem-components-badge-png-branch=v2---https:--coveralls-io-r-bem-bem-components-branch=v2-\">BEM Components Library <a href=\"https://travis-ci.org/bem/bem-components\"><img src=\"https://travis-ci.org/bem/bem-components.svg?branch=v2\" alt=\"Build Status\"></a> <a href=\"https://coveralls.io/r/bem/bem-components?branch=v2\"><img src=\"https://coveralls.io/repos/bem/bem-components/badge.png?branch=v2\" alt=\"Coverage Status\"></a></h1>\n<h2 id=\"что-это-\">Что это?</h2>\n<p>Библиотека блоков для управления формами.\nСодержит абстрагированные от дизайна базовые реализации.</p>\n<h2 id=\"использование\">Использование</h2>\n<p>Подключить библиотеку в проект любым известным способом.</p>\n<h2 id=\"поддерживаемые-браузеры\">Поддерживаемые браузеры</h2>\n<ul>\n<li>Desktop:<ul>\n<li>Firefox 24+</li>\n<li>Chrome last 2 versions</li>\n<li>Safari 6.0+</li>\n<li>Opera 12.1+</li>\n<li>Internet Explorer 9+</li>\n</ul>\n</li>\n<li>Touch-pad:<ul>\n<li>Android 4+</li>\n<li>iOS 5+</li>\n</ul>\n</li>\n<li>Touch-phone:<ul>\n<li>Android 4+</li>\n<li>iOS 6+</li>\n<li>Windows Phone 8+ (Internet Explorer 10+)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"состав\">Состав</h2>\n<h3 id=\"уровни\">Уровни</h3>\n<h3 id=\"блоки\">Блоки</h3>\n<h3 id=\"технологии\">Технологии</h3>\n<h2 id=\"история-изменений\">История изменений</h2>\n<p>История изменений доступна на <a href=\"CHANGELOG.md\">отдельной странице</a>.</p>\n<h2 id=\"миграция\">Миграция</h2>\n<p>Миграция описана на <a href=\"MIGRATION.md\">отдельной странице</a>.</p>\n<h2 id=\"разработка\">Разработка</h2>\n<h3 id=\"рабочая-копия\">Рабочая копия</h3>\n<ol>\n<li><p>Получаем исходники:</p>\n<pre><code class=\"lang-bash\">$ git clone -b v2 git://github.com/bem/bem-components.git\n$ cd bem-components\n</code></pre>\n</li>\n<li><p>Устанавливаем зависимости:</p>\n<pre><code class=\"lang-bash\">$ npm install\n</code></pre>\n<p>Для последующего запуска локально установленных bem-tools нам потребуется <code>export PATH=./node_modules/.bin:$PATH</code> или любой альтернативный способ.</p>\n</li>\n<li><p>Устанавливаем зависимые библиотеки:</p>\n<pre><code class=\"lang-bash\">$ bower-npm-install\n</code></pre>\n</li>\n<li><p>Собираем примеры и тесты:</p>\n<pre><code class=\"lang-bash\">$ bem make sets\n</code></pre>\n</li>\n<li><p>Запускаем разработческий сервер:</p>\n<pre><code class=\"lang-bash\">$ bem server\n</code></pre>\n</li>\n<li><p>Проверяем code-style</p>\n<pre><code class=\"lang-bash\">$ npm run lint\n</code></pre>\n</li>\n</ol>\n<h3 id=\"внесение-изменений\">Внесение изменений</h3>\n<ol>\n<li><a href=\"https://github.com/bem/bem-components/issues/new\">Создать issue</a> с описанием сути изменений.</li>\n<li>Определить в какую версию необходимо внести изменения.</li>\n<li>Сделать feature-branch с указанием номера issue и версии (<code>issues/&lt;номер issue&gt;@v&lt;номер версии&gt;</code>) на основе ветки версии.\nНапример для issue с номером 42 и версией 1: <code>git checkout -b issues/42@v1 v1</code>. Если изменения нужно внести в несколько версий, то для каждой из версий создаётся отдельная ветка.</li>\n<li>Внести изменения (для версии v2, можно локально проверить, что ничего не сломалось, запустив <code>npm test</code>).</li>\n<li>Закоммитить и сделать <code>push</code>. Если это необходимо, то нужно сделать <code>rebase</code> от базовой ветки версии.</li>\n<li>Создать pull-request на основе созданной ветки (или несколько pull-request&#39;ов для случая изменений в нескольких версиях).</li>\n<li>Любым способом связать pull-request и issue (например, c помощью <a href=\"https://github.com/blog/1506-closing-issues-via-pull-requests\">комментария</a>).</li>\n<li>Ждать закрытия pull-request и issue ;-)</li>\n</ol>\n<h3 id=\"модульное-тестирование\">Модульное тестирование</h3>\n",
    "migration": "<h1 id=\"миграция\">Миграция</h1>\n",
    "changelog": "<h1 id=\"история-изменений\">История изменений</h1>\n<h2 id=\"2-0-0\">2.0.0</h2>\n<h3 id=\"крупные-изменения\">Крупные изменения</h3>\n<ul>\n<li>Переход на модульную систему <a href=\"https://github.com/ymaps/modules\">https://github.com/ymaps/modules</a>.</li>\n</ul>\n<h3 id=\"остальные-изменения\">Остальные изменения</h3>\n<ul>\n<li>Понятия автофокуса для блока <code>input</code> изменено.\nБольше нет js-параметра <code>autoFocus</code>, вместо него нужно использовать модификатор <code>_autofocus_focused</code>.\nМодификатор <code>_autofocus_yes</code> теперь называется <code>_autofocus_hidden</code>.</li>\n</ul>\n",
    "levels": [
        {
            "name": "desktop.sets",
            "blocks": [
                {
                    "name": "attach",
                    "data": {
                        "name": "attach",
                        "description": [
                            {
                                "content": "<h1 id=\"attach\">attach</h1>\n<p>Блок <strong>attach</strong> служит для отправки файла на сервер. </p>\n<p>Визуально представлен кнопкой на основе блока <a href=\"bem-components/common.blocks/button/\">button</a>, открывающей системное окно загрузки файла, именем файла (<code>__text</code>) с иконкой (<code>__icon</code>) и крестиком для отмены (<code>__clear</code>).</p>\n<p>Не позволяет прикреплять несколько файлов и не поддерживает drag-and-drop. </p>\n<p>Блок использует функциональность нативного контрола, сам контрол скрыт. В MSIE8 и ниже attach деградирует до нативного контрола — прикрепить файл <code>&lt;input type=&quot;file&quot;&gt;</code>.</p>\n<h1 id=\"-\">Модификаторы блока</h1>\n<h2 id=\"-\">Темы оформления</h2>\n<p><code>_theme</code></p>\n<p>Блок представлен только в теме <em>simple</em>.  </p>\n<p>Без указания темы к блоку применяются значения по умолчанию:  </p>\n<ul>\n<li>Темя кнопки: нативное отображение кнопки браузером</li>\n<li>Локализация: ru  </li>\n<li>Сообщение на кнопке <code>__button</code>: &quot;Выбрать файл&quot;  </li>\n<li>Сообщение при невыбранном файле (<code>__no-file</code>): &quot;файл не выбран&quot;</li>\n</ul>\n<p>Наглядно видно на примерах ниже:</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39; },\n        button : &#39;file&#39;,\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h2 id=\"-\">Состония блока</h2>\n<p><code>_disabled_true</code></p>\n<ul>\n<li>Не активен<br>В состоянии блока &quot;не активен&quot; кнопка выбора становится недоступной для действий пользователя. </li>\n</ul>\n<p>Если модификатор <code>disabled</code> не выбран, кнопка по умолчанию активна.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { disabled : true },\n        button : &#39;Файл&#39;,\n        noFileText : &#39;файл не выбран&#39;\n    }\n</code></pre>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39;, disabled : true },\n        button : &#39;Файл&#39;,\n        noFileText : &#39;файл не выбран&#39;\n    }\n</code></pre>\n<h1 id=\"-\">Элементы блока</h1>\n<p>Визуально представлен следующими элементами:</p>\n<h2 id=\"__button\">__button</h2>\n<p>Обязательный элемент.<br>Кнопка выбора файла. Открывает системное окно загрузки файла. Создается на основе блока <a href=\"bem-components/common.blocks/button/\">button</a> и использует его поведение (JS) и внешний вид (CSS). По умолчанию контент кнопки содержит локализованный текст «Выберите файл».</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;attach&#39;,\n        mods : { theme : &#39;simple&#39; },\n        button : {\n            block : &#39;button&#39;,\n            mods : { theme : &#39;simple&#39; },\n            icon : { elem : &#39;icon&#39; }\n        },\n        noFileText : &#39;no file selected&#39;\n    }\n</code></pre>\n<h2 id=\"__control\">__control</h2>\n<p>Нативный контрол &quot;прикрепить файл&quot;.</p>\n<p>Преобразуется BEMHTML- и bh-шаблонами в нативный элемент прикрепления файла с атрибутами <code>&lt;input class=&quot;file-name&quot; type=&quot;file&quot;&gt;</code>.</p>\n<h2 id=\"__no-file\">__no-file</h2>\n<p>Элемент для отображения подписи, когда файл не выбран. </p>\n<p>Если тема Simple не указана для блока attach, будет использоваться значение по умолчанию – &quot;файл не выбран&quot;.</p>\n<h2 id=\"__file\">__file</h2>\n<p>Контейнер с информацией о прикрепленном файле. </p>\n<p>Формируется из следующих элементов блока:  </p>\n<ul>\n<li><code>__icon</code>    </li>\n<li><code>__text</code>  </li>\n<li><code>__clear</code>  </li>\n</ul>\n<h2 id=\"__icon\">__icon</h2>\n<p>Иконку, соответствующая типу прикрепленного файла (определяется по расширению файла).</p>\n<p>Реализован для темы Simple.</p>\n<h2 id=\"__text\">__text</h2>\n<p>Имя файла. Появляется после прикрепления файла.</p>\n<h2 id=\"__clear\">__clear</h2>\n<p>Кнопка отмены выбранного файла (крестик). Появляется после прикрепления файла.</p>\n<p>Элемент реализован для темы Simple.</p>\n<p>Прикрепить файл</p>\n<p>Неактивное состояние</p>\n<p>Кнопка как элемент блока\nКнопка выбора файла</p>\n<p>Отмена выбранного файла</p>\n<p>Нативный контрол «прикрепить файл»</p>\n<p>Элемент для отображения имени файла</p>\n<p>Иконки файлов</p>\n<p>Элемент для отображения подписи, когда файл не выбран</p>\n<p>Текст в случае выбранного файла</p>\n"
                            }
                        ],
                        "examples": [
                            {
                                "url": "attach.examples/simple/_simple"
                            }
                        ]
                    },
                    "jsdoc": "<h1 id=\"attach-module\">attach Module</h1>\n<h2 id=\"attach-class\">attach Class</h2>\n<h3 id=\"instance-methods\">Instance methods</h3>\n<h4 id=\"getval-string-\">getVal () → {String}</h4>\n<p>Returns control value</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{String}</p>\n<h4 id=\"getname-string-\">getName () → {String}</h4>\n<p>Returns control name</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{String}</p>\n<h4 id=\"clear-data-this-\">clear ( [data] ) → {this}</h4>\n<p>Clear control value</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>[data] {Object}<br/>\nadditional data</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n"
                },
                {
                    "name": "button",
                    "data": {
                        "name": "button",
                        "description": [
                            {
                                "content": "<h1 id=\"button\">button</h1>\n<p>Кнопка</p>\n<p>Неактивное состояние\nВ фокусе\nНаведенное состояние\nНажатое состояние\nРазмер\nРазмер шрифта в кнопке 15px\nРазмер шрифта в кнопке 13px\nТемы\nРежим нажатия\nИспользуется для отображения иконки в кнопке, рядом с текстом или самостоятельно (требует указания модификатора _only-icon)\nОбрамляет текст кнопки, используется в нажатом состоянии для сдвига текста без смещения рядом стоящего текста</p>\n"
                            }
                        ],
                        "examples": [
                            {
                                "url": "button.examples/simple/_simple"
                            }
                        ]
                    },
                    "jsdoc": "<h1 id=\"button-module\">button Module</h1>\n<h2 id=\"button-class\">button Class</h2>\n"
                },
                {
                    "name": "checkbox",
                    "data": {
                        "name": "checkbox",
                        "description": [
                            {
                                "content": "<p>Чекбокс\nСостояние чекбокса — активное (галочка нажата)\nНеактивное состояние. Нажать на чекбокс нельзя.\nСостояние фокуса\nРазмер\nРазмер шрифта 15px\nРазмер шрифта 13px\nТемы\nЭлемент рисующий чекбокс (нативный чекбокс скрыт)\nНативный чекбокс\nГалочка</p>\n"
                            }
                        ],
                        "examples": [
                            {
                                "url": "checkbox.examples/simple/_simple"
                            }
                        ]
                    },
                    "jsdoc": "<h1 id=\"checkbox-module\">checkbox Module</h1>\n<h2 id=\"checkbox-class\">checkbox Class</h2>\n"
                },
                {
                    "name": "dropdown",
                    "data": null,
                    "jsdoc": "<h1 id=\"dropdown-module\">dropdown Module</h1>\n<h2 id=\"dropdown-class\">dropdown Class</h2>\n<h3 id=\"instance-methods\">Instance methods</h3>\n<h4 id=\"getpopup-popup-\">getPopup () → {popup}</h4>\n<p>Returns popup</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{popup}</p>\n<h4 id=\"getswitcher-i-bem__dom-\">getSwitcher () → {i-bem__dom}</h4>\n<p>Returns switcher</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{i-bem__dom}</p>\n<h3 id=\"static-methods\">Static methods</h3>\n<h4 id=\"onswitcherclick-e-protected\">onSwitcherClick ( e )  protected</h4>\n<p>On BEM click event handler</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>e {events:Event}</li>\n</ul>\n<h1 id=\"dropdown-module\">dropdown Module</h1>\n<h2 id=\"dropdown-class\">dropdown Class</h2>\n<h3 id=\"instance-methods\">Instance methods</h3>\n<h4 id=\"getpopup-popup-\">getPopup () → {popup}</h4>\n<p>Returns popup</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{popup}</p>\n<h4 id=\"getswitcher-i-bem__dom-\">getSwitcher () → {i-bem__dom}</h4>\n<p>Returns switcher</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{i-bem__dom}</p>\n<h3 id=\"static-methods\">Static methods</h3>\n<h4 id=\"onswitcherclick-e-protected\">onSwitcherClick ( e )  protected</h4>\n<p>On BEM click event handler</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>e {events:Event}</li>\n</ul>\n<h1 id=\"dropdown-module\">dropdown Module</h1>\n<h2 id=\"dropdown-class\">dropdown Class</h2>\n<h3 id=\"instance-methods\">Instance methods</h3>\n<h4 id=\"getpopup-popup-\">getPopup () → {popup}</h4>\n<p>Returns popup</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{popup}</p>\n<h4 id=\"getswitcher-i-bem__dom-\">getSwitcher () → {i-bem__dom}</h4>\n<p>Returns switcher</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{i-bem__dom}</p>\n<h3 id=\"static-methods\">Static methods</h3>\n<h4 id=\"onswitcherclick-e-protected\">onSwitcherClick ( e )  protected</h4>\n<p>On BEM click event handler</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>e {events:Event}</li>\n</ul>\n"
                },
                {
                    "name": "input",
                    "jsdoc": "<h1 id=\"input-module\">input Module</h1>\n<h2 id=\"input-class\">input Class</h2>\n<h3 id=\"instance-methods\">Instance methods</h3>\n<h4 id=\"getval-string-\">getVal () → {String}</h4>\n<p>Returns control value</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{String}</p>\n<h4 id=\"setval-val-data-this-\">setVal ( val, [data] ) → {this}</h4>\n<p>Sets control value</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>val {String}<br/>\nvalue</li>\n<li>[data] {Object}<br/>\nadditional data</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"getname-string-\">getName () → {String}</h4>\n<p>Returns name of control</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{String}</p>\n",
                    "data": {
                        "name": "input",
                        "description": [
                            {
                                "content": "<h1 id=\"input\">input</h1>\n<p>Блок <strong>input</strong> служит для создания различных типов текстовых полей:</p>\n<ul>\n<li>текстовая область;</li>\n<li>поле с паролем;</li>\n<li>поисковая форма. </li>\n</ul>\n<p>В MSIE8 и ниже поле ввода деградирует до нативного контрола <code>&lt;input атрибуты&gt;</code>, поле ввода с текстовой областью станет нативной текстовой областью <code>&lt;textarea атрибуты&gt;</code>.</p>\n<h2 id=\"-\">Допустимые атрибуты блока</h2>\n<p>Допустимые атрибуты блока задаются в одноименных полях входного BEMJSON блока:</p>\n<ul>\n<li>name — имя для идентификации контрола обработчиком формы. Если name явно не задан, HTML-атрибут name автоматически сформируется с пустым значением.</li>\n<li>value — значение, отправляемое на сервер. По умолчанию содержит пустое значение.</li>\n<li>placeholder – замещающийся текст. По умолчанию содержит пустое значение.</li>\n<li>id — уникальный идентификатор блока. По умолчанию генерируется случайным образом, если явно не задан в BEMJSON.</li>\n</ul>\n<h2 id=\"-\">Модификаторы блока</h2>\n<h3 id=\"-\">Темы блока</h3>\n<p><code>_theme</code></p>\n<p>Блок представлен в следующих темах:</p>\n<ul>\n<li>simple   </li>\n<li>normal  </li>\n</ul>\n<p>Без указания темы к блоку применяются значения по умолчанию (<em>default</em>): </p>\n<ul>\n<li>Тип поля ввода: простое текстовое  </li>\n<li>Ширина: 100%  </li>\n<li>Тема оформления: нативное отображение поля ввода браузером.    </li>\n<li>Размеры текстовой области: <code>cols:10</code>, <code>rows:10</code>.</li>\n</ul>\n<p>Наглядно видно на примерах ниже:</p>\n<h4 id=\"default\">default</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;input&#39;,\n        val : &#39;value&#39;,\n        placeholder : &#39;default&#39;\n    }\n</code></pre>\n<h4 id=\"simple\">simple</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;simple&#39; },\n        val : &#39;value&#39;,\n        placeholder : &#39;simple&#39;\n    }\n</code></pre>\n<h4 id=\"normal\">normal</h4>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;normal&#39; },\n        val : &#39;value&#39;,\n        placeholder : &#39;normal&#39;\n    }\n</code></pre>\n<h3 id=\"-\">Типы блока</h3>\n<p><code>_type</code></p>\n<p>Блок представлен следующими типами: </p>\n<ul>\n<li>текстовая область (<code>_textarea</code>)   </li>\n<li>поле с паролем (<code>_password</code>)</li>\n<li>поисковая форма (<code>_search</code>) </li>\n</ul>\n<p>Реализован во всех темах блока:</p>\n<table>\n  <tr>\n    <th>Тип / Тема</th>\n    <th>default</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <td> <code>_textarea</code></td>\n    <td>\n    {\n        block : &#39;input&#39;,\n        mods : { type : &#39;textarea&#39; },\n        placeholder : &#39;default&#39;\n    }\n    </td>\n    <td>\n    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;simple&#39;, type : &#39;textarea&#39; },\n        placeholder : &#39;simple&#39;\n    }\n    </td>\n    <td><br>    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;normal&#39;, type : &#39;textarea&#39; },\n        placeholder : &#39;normal&#39;\n    }\n  </td>\n  </tr>\n  <tr>\n    <td> <code>_password</code></td>\n    <td>\n    {\n        block : &#39;input&#39;,\n        placeholder : &#39;default&#39;,\n        mods : { type : &#39;password&#39; }\n    }\n    </td>\n    <td>\n    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;simple&#39;, type : &#39;password&#39; },\n        placeholder : &#39;simple&#39;\n    }\n    </td>\n    <td><br>    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;normal&#39;, type : &#39;password&#39; },\n        placeholder : &#39;normal&#39;\n    }\n  </td>\n  </tr>\n  <tr>\n    <td> <code>_search</code></td>\n    <td>\n    {\n        block : &#39;input&#39;,\n        mods : { type : &#39;search&#39; },\n        placeholder : &#39;default&#39;\n    }\n    </td>\n    <td>\n    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;simple&#39;, type : &#39;search&#39; },\n        placeholder : &#39;simple&#39;\n    }\n    </td>\n    <td><br>    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;normal&#39;, type : &#39;search&#39; },\n        placeholder : &#39;normal&#39;\n    }\n  </td>\n  </tr>\n</table>\n\n<h3 id=\"-\">Состония блока</h3>\n<h4 id=\"-_disabled_true-\">Не активен <code>_disabled_true</code></h4>\n<p>В состоянии блока &quot;не активен&quot; поле ввода и все его элементы становятся недоступными для действий пользователя. </p>\n<p>Если модификатор <code>disabled</code> не выбран, инпут по умолчанию активен.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;normal&#39;, disabled : true },\n        val : &#39;disabled&#39;,\n        placeholder : &#39;normal&#39;\n    }\n</code></pre>\n<h4 id=\"-_focused_true-\">В фокусе <code>_focused_true</code></h4>\n<p>В состоянии блока <code>focused</code> со значением <code>true</code> поле ввода всегда находится в фокусе.</p>\n<p>Реализован во всех темах блока.</p>\n<pre><code>    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;normal&#39;, focused : true },\n        val : &#39;value&#39;,\n        placeholder : &#39;normal&#39;\n    }\n</code></pre><h3 id=\"-\">Очистка содержимого</h3>\n<p><code>_has-clear</code></p>\n<p>Модификатор <code>_has-clear</code> в значении <code>true</code> отображает в инпуте крестик очистки содержимого (элемент <code>__clear</code>).</p>\n<p>Реализован во всех темах блока:</p>\n<table>\n  <tr>\n    <th>default</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <td>\n    {\n        block : &#39;input&#39;,\n        mods : { &#39;has-claer&#39; : true },\n        placeholder : &#39;default&#39;\n    } \n    </td>\n    <td>\n    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;simple&#39;, &#39;has-claer&#39; : true },\n        placeholder : &#39;simple&#39;\n    }\n    </td>\n    <td><br>    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;normal&#39;, &#39;has-claer&#39; : true },\n        placeholder : &#39;normal&#39;\n    }\n  </td>\n  </tr>\n</table>\n\n<hr>\n<p><strong>NB</strong> Модификатор <code>has-clear</code> не используется для типа инпута – поисковое поле (<code>_search</code>) в теме <code>simple</code>. </p>\n<hr>\n<h3 id=\"-\">Метка над полем ввода</h3>\n<p><code>_has-lable</code></p>\n<p>Модификатор <code>_has-lable</code> в значении <code>true</code> отображает в метку над полем ввода (элемент <code>__lable</code>).</p>\n<p>Реализован во всех темах блока:</p>\n<table>\n  <tr>\n    <th>default</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <td>\n    {\n        block : &#39;input&#39;,\n        mods : { &#39;has-claer&#39; : true },\n        placeholder : &#39;default&#39;\n    } \n    </td>\n    <td>\n    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;simple&#39;, &#39;has-lable&#39; : true },\n        placeholder : &#39;simple&#39;\n    }\n    </td>\n    <td><br>    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;normal&#39;, &#39;has-lable&#39; true },\n        placeholder : &#39;normal&#39;\n    }\n  </td>\n  </tr>\n</table>\n\n\n<h2 id=\"-\">Элементы блока</h2>\n<p>Визуально представлен следующими элементами:</p>\n<h3 id=\"__box\">__box</h3>\n<p>Обязательный элемент.  </p>\n<p>Элемент, рисующий поля ввода (нативный инпут скрыт)</p>\n<h3 id=\"__clear\">__clear</h3>\n<p>Кнопка очистки содержимого инпута (&quot;крестик&quot;).</p>\n<p>Если применить модификатор блока <code>has-clear</code> со значением <code>fals</code>, то &quot;крестик&quot; при вводе текста отображаться не будет.</p>\n<h3 id=\"__control\">__control</h3>\n<p>Обязательный элемент.</p>\n<p>Добавляется в <code>content</code> блока во входных данных. BEMHTML-шаблоном преобразуется в нативный контрол <code>&lt;input атрибуты&gt;</code>. По умолчанию подключает элемент блока clear – кнопку очистки поля ввода (крестик).</p>\n<h3 id=\"__label\">__label</h3>\n<p>Метка над полем ввода.</p>\n<p>Элемент добавляет метку полю ввода (преобразуется в HTML-тэг <code>&lt;label&gt;</code>). Связь метки с тэгом <code>&lt;input&gt;</code> устанавливается с помощью идентификатора <code>id</code>, который может генерироваться по умолчанию случайным образом. При щелчке кнопкой мыши на метку в поле ввода будет установлен фокус.</p>\n<p>````bemjson\n    {\n        block : &#39;input&#39;,\n        mods : { theme : &#39;normal&#39;, &#39;has-clear&#39; : true, &#39;has-label&#39; : true },\n        label : &#39;label&#39;\n    } </p>\n<p>Поле ввода с шириной 100%\nОтключен</p>\n<p>В фокусе</p>\n<p>Инпут c крестиком очистки содержимого</p>\n<p>Тип</p>\n<p>Пароль</p>\n<p>Текстовая область</p>\n<p>Элемент, рисующий поля ввода (нативный инпут скрыт)</p>\n<p>Кнопка «очистить»</p>\n<p>Виден\nНативный инпут</p>\n<p>Метка над полем ввода</p>\n<p>Получение фокуса при вводе текста на странице</p>\n"
                            }
                        ],
                        "examples": [
                            {
                                "url": "input.examples/simple/_simple"
                            }
                        ]
                    }
                },
                {
                    "name": "link",
                    "jsdoc": "",
                    "data": {
                        "name": "link",
                        "description": [
                            {
                                "content": "<p>Ссылка</p>\n"
                            }
                        ],
                        "examples": [
                            {
                                "url": "link.examples/simple/_simple"
                            }
                        ]
                    }
                },
                {
                    "name": "menu",
                    "data": null,
                    "jsdoc": "<h1 id=\"menu-module\">menu Module</h1>\n<h2 id=\"menu-class\">menu Class</h2>\n<h3 id=\"instance-methods\">Instance methods</h3>\n<h4 id=\"setcontent-content-this-\">setContent ( content ) → {this}</h4>\n<p>Sets content</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>content {String | jQuery}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"getval-\">getVal () → {*}</h4>\n<p>Returns menu value</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{*}</p>\n<h4 id=\"_getval-protected\">_getVal () → {*}  protected</h4>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{*}</p>\n<h4 id=\"setval-val-this-\">setVal ( val ) → {this}</h4>\n<p>Sets menu value</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>val {*}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"_setval-val-boolean-protected\">_setVal ( val ) → {Boolean}  protected</h4>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>val {*}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{Boolean}</p>\n<p>returns true if value was changed</p>\n<h4 id=\"setcontent-\">setContent ()</h4>\n<p>Sets content</p>\n<h4 id=\"_getval-\">_getVal ()</h4>\n<h4 id=\"_setval-vals-\">_setVal ( vals )</h4>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>vals {Array}</li>\n</ul>\n<h4 id=\"_onitemclick-\">_onItemClick ()</h4>\n<h4 id=\"_getval-\">_getVal ()</h4>\n<h4 id=\"_setval-\">_setVal ()</h4>\n<h4 id=\"_onitemclick-\">_onItemClick ()</h4>\n<h4 id=\"_getval-\">_getVal ()</h4>\n<h4 id=\"_setval-\">_setVal ()</h4>\n<h4 id=\"_onitemclick-\">_onItemClick ()</h4>\n<h1 id=\"menu-module\">menu Module</h1>\n<h2 id=\"menu-class\">menu Class</h2>\n<h3 id=\"instance-methods\">Instance methods</h3>\n<h4 id=\"setcontent-content-this-\">setContent ( content ) → {this}</h4>\n<p>Sets content</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>content {String | jQuery}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"getval-\">getVal () → {*}</h4>\n<p>Returns menu value</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{*}</p>\n<h4 id=\"_getval-protected\">_getVal () → {*}  protected</h4>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{*}</p>\n<h4 id=\"setval-val-this-\">setVal ( val ) → {this}</h4>\n<p>Sets menu value</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>val {*}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"_setval-val-boolean-protected\">_setVal ( val ) → {Boolean}  protected</h4>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>val {*}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{Boolean}</p>\n<p>returns true if value was changed</p>\n<h4 id=\"setcontent-\">setContent ()</h4>\n<p>Sets content</p>\n<h4 id=\"_getval-\">_getVal ()</h4>\n<h4 id=\"_setval-vals-\">_setVal ( vals )</h4>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>vals {Array}</li>\n</ul>\n<h4 id=\"_onitemclick-\">_onItemClick ()</h4>\n<h4 id=\"_getval-\">_getVal ()</h4>\n<h4 id=\"_setval-\">_setVal ()</h4>\n<h4 id=\"_onitemclick-\">_onItemClick ()</h4>\n<h4 id=\"_getval-\">_getVal ()</h4>\n<h4 id=\"_setval-\">_setVal ()</h4>\n<h4 id=\"_onitemclick-\">_onItemClick ()</h4>\n<h1 id=\"menu-module\">menu Module</h1>\n<h2 id=\"menu-class\">menu Class</h2>\n<h3 id=\"instance-methods\">Instance methods</h3>\n<h4 id=\"setcontent-content-this-\">setContent ( content ) → {this}</h4>\n<p>Sets content</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>content {String | jQuery}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"getval-\">getVal () → {*}</h4>\n<p>Returns menu value</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{*}</p>\n<h4 id=\"_getval-protected\">_getVal () → {*}  protected</h4>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{*}</p>\n<h4 id=\"setval-val-this-\">setVal ( val ) → {this}</h4>\n<p>Sets menu value</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>val {*}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"_setval-val-boolean-protected\">_setVal ( val ) → {Boolean}  protected</h4>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>val {*}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{Boolean}</p>\n<p>returns true if value was changed</p>\n<h4 id=\"setcontent-\">setContent ()</h4>\n<p>Sets content</p>\n<h4 id=\"_getval-\">_getVal ()</h4>\n<h4 id=\"_setval-vals-\">_setVal ( vals )</h4>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>vals {Array}</li>\n</ul>\n<h4 id=\"_onitemclick-\">_onItemClick ()</h4>\n<h4 id=\"_getval-\">_getVal ()</h4>\n<h4 id=\"_setval-\">_setVal ()</h4>\n<h4 id=\"_onitemclick-\">_onItemClick ()</h4>\n<h4 id=\"_getval-\">_getVal ()</h4>\n<h4 id=\"_setval-\">_setVal ()</h4>\n<h4 id=\"_onitemclick-\">_onItemClick ()</h4>\n<h1 id=\"menu-module\">menu Module</h1>\n<h2 id=\"menu-class\">menu Class</h2>\n<h3 id=\"instance-methods\">Instance methods</h3>\n<h4 id=\"setcontent-content-this-\">setContent ( content ) → {this}</h4>\n<p>Sets content</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>content {String | jQuery}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"getval-\">getVal () → {*}</h4>\n<p>Returns menu value</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{*}</p>\n<h4 id=\"_getval-protected\">_getVal () → {*}  protected</h4>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{*}</p>\n<h4 id=\"setval-val-this-\">setVal ( val ) → {this}</h4>\n<p>Sets menu value</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>val {*}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"_setval-val-boolean-protected\">_setVal ( val ) → {Boolean}  protected</h4>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>val {*}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{Boolean}</p>\n<p>returns true if value was changed</p>\n<h4 id=\"setcontent-\">setContent ()</h4>\n<p>Sets content</p>\n<h4 id=\"_getval-\">_getVal ()</h4>\n<h4 id=\"_setval-vals-\">_setVal ( vals )</h4>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>vals {Array}</li>\n</ul>\n<h4 id=\"_onitemclick-\">_onItemClick ()</h4>\n<h4 id=\"_getval-\">_getVal ()</h4>\n<h4 id=\"_setval-\">_setVal ()</h4>\n<h4 id=\"_onitemclick-\">_onItemClick ()</h4>\n<h4 id=\"_getval-\">_getVal ()</h4>\n<h4 id=\"_setval-\">_setVal ()</h4>\n<h4 id=\"_onitemclick-\">_onItemClick ()</h4>\n<h1 id=\"menu-module\">menu Module</h1>\n<h2 id=\"menu-class\">menu Class</h2>\n<h3 id=\"instance-methods\">Instance methods</h3>\n<h4 id=\"setcontent-content-this-\">setContent ( content ) → {this}</h4>\n<p>Sets content</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>content {String | jQuery}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"getval-\">getVal () → {*}</h4>\n<p>Returns menu value</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{*}</p>\n<h4 id=\"_getval-protected\">_getVal () → {*}  protected</h4>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{*}</p>\n<h4 id=\"setval-val-this-\">setVal ( val ) → {this}</h4>\n<p>Sets menu value</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>val {*}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"_setval-val-boolean-protected\">_setVal ( val ) → {Boolean}  protected</h4>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>val {*}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{Boolean}</p>\n<p>returns true if value was changed</p>\n<h4 id=\"setcontent-\">setContent ()</h4>\n<p>Sets content</p>\n<h4 id=\"_getval-\">_getVal ()</h4>\n<h4 id=\"_setval-vals-\">_setVal ( vals )</h4>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>vals {Array}</li>\n</ul>\n<h4 id=\"_onitemclick-\">_onItemClick ()</h4>\n<h4 id=\"_getval-\">_getVal ()</h4>\n<h4 id=\"_setval-\">_setVal ()</h4>\n<h4 id=\"_onitemclick-\">_onItemClick ()</h4>\n<h4 id=\"_getval-\">_getVal ()</h4>\n<h4 id=\"_setval-\">_setVal ()</h4>\n<h4 id=\"_onitemclick-\">_onItemClick ()</h4>\n"
                },
                {
                    "name": "menu-item",
                    "data": null,
                    "jsdoc": "<h1 id=\"menu-item-module\">menu-item Module</h1>\n<h2 id=\"menu-item-class\">menu-item Class</h2>\n<h3 id=\"instance-methods\">Instance methods</h3>\n<h4 id=\"isvaleq-val-boolean-\">isValEq ( val ) → {Boolean}</h4>\n<p>Checks whether given value is equal to current value</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>val {*}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{Boolean}</p>\n<h4 id=\"getval-val-\">getVal ( val ) → {*}</h4>\n<p>Returns item value</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>val {*}<br/>\nValue of item</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{*}</p>\n"
                },
                {
                    "name": "popup",
                    "data": null,
                    "jsdoc": "<h1 id=\"popup-module\">popup Module</h1>\n<h2 id=\"popup-class\">popup Class</h2>\n<h3 id=\"instance-methods\">Instance methods</h3>\n<h4 id=\"settarget-left-top-this-\">setTarget ( left, [top] ) → {this}</h4>\n<p>Sets target</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>left {Number | jQuery | BEMDOM}<br/>\nx-coordinate or owner DOM elem or owner BEMDOM block</li>\n<li>[top] {Number}<br/>\ny-coordinate</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"setcontent-content-this-\">setContent ( content ) → {this}</h4>\n<p>Sets content</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>content {String | jQuery}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"redraw-offsets-directions-this-\">redraw ( [offsets], [directions] ) → {this}</h4>\n<p>Redraws popup</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>[offsets] {[object Object]}<br/>\ntwo-elements array with main and secondary offsets</li>\n<li>[directions] {[object Object]}<br/>\nallowed directions</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h1 id=\"popup-module\">popup Module</h1>\n<h2 id=\"popup-class\">popup Class</h2>\n<h3 id=\"instance-methods\">Instance methods</h3>\n<h4 id=\"settarget-left-top-this-\">setTarget ( left, [top] ) → {this}</h4>\n<p>Sets target</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>left {Number | jQuery | BEMDOM}<br/>\nx-coordinate or owner DOM elem or owner BEMDOM block</li>\n<li>[top] {Number}<br/>\ny-coordinate</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"setcontent-content-this-\">setContent ( content ) → {this}</h4>\n<p>Sets content</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>content {String | jQuery}</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"redraw-offsets-directions-this-\">redraw ( [offsets], [directions] ) → {this}</h4>\n<p>Redraws popup</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>[offsets] {[object Object]}<br/>\ntwo-elements array with main and secondary offsets</li>\n<li>[directions] {[object Object]}<br/>\nallowed directions</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n"
                },
                {
                    "name": "radio",
                    "data": {
                        "name": "radio",
                        "description": [
                            {
                                "content": "<h1 id=\"radio\">radio</h1>\n<p>Блок <strong>radio</strong> – «радио-группа», состоящая из набора зависимых переключателей «радио-кнопок». Служит для выбора единственного варианта из списка. В реализации блока используется функциональность нативного контрола радиобокс, сам контрол скрыт.</p>\n<h1 id=\"-\">Модификаторы блока</h1>\n<h2 id=\"_theme\">_theme</h2>\n<p>Может использоваться без модификатора <code>_theme</code>. </p>\n<pre><code>    {\n        block : &#39;radio&#39;,\n        name : &#39;default1&#39;,\n        options : [\n            { val : 1, text : &#39;first&#39; },\n            { val : 2, text : &#39;second&#39; },\n            { val : 3, text : &#39;third&#39;, disabled : true }\n        ],\n        val : 2\n    }\n</code></pre><pre><code>    {\n        block : &#39;radio&#39;,\n        name : &#39;default2&#39;,\n        mods : { disabled : true },\n        options : [\n            { val : 1, text : &#39;first&#39; },\n            { val : 2, text : &#39;second&#39; }\n        ],\n        val : 2\n    }\n</code></pre><h3 id=\"simple\">simple</h3>\n<pre><code>    {\n        block : &#39;radio&#39;,\n        name : &#39;simple1&#39;,\n        mods : { theme : &#39;simple&#39; },\n        options : [\n            { val : 1, text : &#39;first&#39; },\n            { val : 2, text : &#39;second&#39; },\n            { val : 3, text : &#39;third&#39;, disabled : true }\n        ],\n        val : 2\n    }\n</code></pre><pre><code>    {\n        block : &#39;radio&#39;,\n        name : &#39;simple2&#39;,\n        mods : { theme : &#39;simple&#39;, disabled : true },\n        options : [\n            { val : 1, text : &#39;first&#39; },\n            { val : 2, text : &#39;second&#39; }\n        ],\n        val : 2\n    }\n</code></pre><h3 id=\"normal\">normal</h3>\n<pre><code>    {\n        block : &#39;radio&#39;,\n        name : &#39;normal1&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        options : [\n            { val : 1, text : &#39;first&#39; },\n            { val : 2, text : &#39;second&#39; },\n            { val : 3, text : &#39;third&#39;, disabled : true }\n        ],\n        val : 2\n    }\n</code></pre><pre><code>    { tag : &#39;h3&#39;, content : &#39;button&#39; },\n    { tag : &#39;p&#39;, content : {\n        block : &#39;radio&#39;,\n        name : &#39;simple-button1&#39;,\n        mods : { theme : &#39;simple&#39;, type : &#39;button&#39; },\n        options : [\n            { val : 1, text : &#39;first&#39; },\n            { val : 2, text : &#39;second&#39; },\n            { val : 3, text : &#39;third&#39;, disabled : true }\n        ],\n        val : 2\n    } },\n    { tag : &#39;p&#39;, content : {\n        block : &#39;radio&#39;,\n        name : &#39;simple-button2&#39;,\n        mods : { theme : &#39;simple&#39;, type : &#39;button&#39;, disabled : true },\n        options : [\n            { val : 1, text : &#39;first&#39; },\n            { val : 2, text : &#39;second&#39; }\n        ],\n        val : 2\n    } },\n\n    { tag : &#39;hr&#39; },\n\n    { tag : &#39;h2&#39;, content : &#39;normal&#39; },\n    { tag : &#39;p&#39;, content : {\n\n\n\n    { tag : &#39;p&#39;, content : {\n        block : &#39;radio&#39;,\n        name : &#39;normal2&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, disabled : true },\n        options : [\n            { val : 1, text : &#39;first&#39; },\n            { val : 2, text : &#39;second&#39; }\n        ],\n        val : 2\n    } },\n\n    { tag : &#39;h3&#39;, content : &#39;size&#39; },\n    { tag : &#39;p&#39;, content : {\n        block : &#39;radio&#39;,\n        name : &#39;normal-size1&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39; },\n        options : [\n            { val : 1, text : &#39;first&#39; },\n            { val : 2, text : &#39;second&#39; }\n        ],\n        val : 2\n    } },\n    { tag : &#39;p&#39;, content : {\n        block : &#39;radio&#39;,\n        name : &#39;normal-size2&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;l&#39; },\n        options : [\n            { val : 1, text : &#39;first&#39; },\n            { val : 2, text : &#39;second&#39; }\n        ],\n        val : 2\n    } },\n\n    { tag : &#39;h3&#39;, content : &#39;button&#39; },\n    { tag : &#39;p&#39;, content : {\n        block : &#39;radio&#39;,\n        name : &#39;normal-button1&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39; },\n        options : [\n            { val : 1, text : &#39;first&#39; },\n            { val : 2, text : &#39;second&#39; },\n            { val : 3, text : &#39;third&#39;, disabled : true }\n        ],\n        val : 2\n    } },\n    { tag : &#39;p&#39;, content : {\n        block : &#39;radio&#39;,\n        name : &#39;normal-button2&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, type : &#39;button&#39;, disabled : true },\n        options : [\n            { val : 1, text : &#39;first&#39; },\n            { val : 2, text : &#39;second&#39; }\n        ],\n        val : 2\n    } }\n]\n</code></pre><p>});</p>\n<h2 id=\"block-modifiers\">Block Modifiers</h2>\n<h2 id=\"__theme\">__theme</h2>\n<h3 id=\"simple\">simple</h3>\n<pre><code>    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;s&#39;, progress : true }\n    }\n</code></pre><h3 id=\"nornal\">nornal</h3>\n<pre><code>    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n    }\n</code></pre><h2 id=\"__size\">__size</h2>\n<p><code>{ size : &#39;s&#39; }</code></p>\n<p>There are five sizes available: <strong>xs</strong>, <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n  <tr>\n    <th>Theme/Size</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <td>xs</td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;xs&#39;, progress : true }\n    }\n</td>\n    <td><br>    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;xs&#39;, progress : true }\n    }\n</td>\n  </tr>\n  <tr>\n    <td>s</td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;s&#39;, progress : true }\n    }\n    </td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n    }\n    </td>\n  </tr>\n  <tr>\n    <td>m</td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;m&#39;, progress : true }\n    }\n    </td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, progress : true }\n    }\n    </td>\n  </tr>\n  <tr>\n    <td>l</td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;l&#39;, progress : true }\n    }\n    </td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, progress : true }\n    }\n    </td>\n  </tr>\n  <tr>\n    <td>xl</td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;xl&#39;, progress : true }\n    }\n    </td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;xl&#39;, progress : true }\n    }\n    </td>\n  </tr>\n\n</table>\n\n<h2 id=\"__progress\">__progress</h2>\n<p>The <code>{ progress : true }</code> modifier activates the spin. The <strong>spin</strong> block rotates in visible state.</p>\n<p>The <code>{ progress : false }</code> modifies paused rotation process. The <code>false</code> value is used when a <strong>spin</strong> block is invisible.</p>\n"
                            }
                        ],
                        "examples": [
                            {
                                "url": "radio.examples/simple/_simple"
                            }
                        ]
                    },
                    "jsdoc": "<h1 id=\"radio-module\">radio Module</h1>\n<h2 id=\"radio-class\">radio Class</h2>\n<h3 id=\"instance-methods\">Instance methods</h3>\n<h4 id=\"getval-string-\">getVal () → {String}</h4>\n<p>Returns control value</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{String}</p>\n<h4 id=\"setval-val-data-this-\">setVal ( val, [data] ) → {this}</h4>\n<p>Sets control value</p>\n<h5 id=\"parameters-\">Parameters:</h5>\n<ul>\n<li>val {String}<br/>\nvalue</li>\n<li>[data] {Object}<br/>\nadditional data</li>\n</ul>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{this}</p>\n<h4 id=\"getname-string-\">getName () → {String}</h4>\n<p>Returns name of control</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{String}</p>\n<h4 id=\"getoptions-radio-option-\">getOptions () → {radio-option}</h4>\n<p>Returns options</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{radio-option}</p>\n<h4 id=\"getcheckedoption-radio-option-undefined-\">getCheckedOption () → {radio-option | undefined}</h4>\n<p>Returns checked option</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{radio-option | undefined}</p>\n"
                },
                {
                    "name": "radio-option",
                    "data": {
                        "name": "radio-option",
                        "description": [
                            {
                                "content": "<h1 id=\"radio-option\">radio-option</h1>\n<p>набора зависимых переключателей «радио-кнопок» (элементы блока radio).</p>\n<h2 id=\"block-modifiers\">Block Modifiers</h2>\n<p>The <strong>spin</strong> block requieres the block modifiers listed below:</p>\n<h2 id=\"__theme\">__theme</h2>\n<h3 id=\"simple\">simple</h3>\n<pre><code>    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;s&#39;, progress : true }\n    }\n</code></pre><h3 id=\"nornal\">nornal</h3>\n<p>The theme <strong>normal</strong> is developed for Yandex.</p>\n<pre><code>    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n    }\n</code></pre><h2 id=\"__size\">__size</h2>\n<p><code>{ size : &#39;s&#39; }</code></p>\n<p>There are five sizes available: <strong>xs</strong>, <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n  <tr>\n    <th>Theme/Size</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <td>xs</td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;xs&#39;, progress : true }\n    }\n</td>\n    <td><br>    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;xs&#39;, progress : true }\n    }\n</td>\n  </tr>\n  <tr>\n    <td>s</td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;s&#39;, progress : true }\n    }\n    </td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n    }\n    </td>\n  </tr>\n  <tr>\n    <td>m</td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;m&#39;, progress : true }\n    }\n    </td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, progress : true }\n    }\n    </td>\n  </tr>\n  <tr>\n    <td>l</td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;l&#39;, progress : true }\n    }\n    </td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, progress : true }\n    }\n    </td>\n  </tr>\n  <tr>\n    <td>xl</td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;xl&#39;, progress : true }\n    }\n    </td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;xl&#39;, progress : true }\n    }\n    </td>\n  </tr>\n\n</table>\n\n<h2 id=\"__progress\">__progress</h2>\n<p>The <code>{ progress : true }</code> modifier activates the spin. The <strong>spin</strong> block rotates in visible state.</p>\n<p>The <code>{ progress : false }</code> modifies paused rotation process. The <code>false</code> value is used when a <strong>spin</strong> block is invisible.\nПрелоадер (индикатор загрузки)</p>\n"
                            }
                        ],
                        "examples": []
                    },
                    "jsdoc": "<h1 id=\"radio-option-module\">radio-option Module</h1>\n<h2 id=\"radio-option-class\">radio-option Class</h2>\n<h3 id=\"instance-methods\">Instance methods</h3>\n<h4 id=\"getval-string-\">getVal () → {String}</h4>\n<p>Returns control value</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{String}</p>\n<h4 id=\"getname-string-\">getName () → {String}</h4>\n<p>Returns name of control</p>\n<h5 id=\"returns-\">Returns:</h5>\n<p>{String}</p>\n"
                },
                {
                    "name": "spin",
                    "jsdoc": null,
                    "data": {
                        "name": "spin",
                        "description": [
                            {
                                "content": "<h1 id=\"spin\">spin</h1>\n<p>Блок <strong>spin</strong> визуально иллюстрирует ход выполнения какого-либо процесса. Например, загрузки сайта или медиа-файла.</p>\n<p>Вращается прелоадер при помощи только CSS3-анимации.</p>\n<h1 id=\"-\">Модификаторы блока</h1>\n<p>Блок spin не может использоваться без следующих модификаторов:</p>\n<h2 id=\"-\">Темы оформления</h2>\n<p><code>_theme</code></p>\n<p>Блок представлен в темах <em>simple</em> и <em>normal</em>.</p>\n<h3 id=\"simple\">simple</h3>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;s&#39;, progress : true }\n    }\n</code></pre>\n<h3 id=\"nornal\">nornal</h3>\n<p>Разработана для Яндекса</p>\n<pre><code class=\"lang-bemjson\">    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n    }\n</code></pre>\n<h2 id=\"-\">Размеры</h2>\n<p><code>_size</code></p>\n<p>Для каждой темы доступно пять размеров реализации блока: <strong>xs</strong>, <strong>s</strong>, <strong>m</strong>, <strong>l</strong>, <strong>xl</strong>.</p>\n<table>\n  <tr>\n    <th>Тема/Размер</th>\n    <th>simple</th>\n    <th>normal</th>\n  </tr>\n  <tr>\n    <td>xs</td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;xs&#39;, progress : true }\n    }\n</td>\n    <td><br>    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;xs&#39;, progress : true }\n    }\n</td>\n  </tr>\n  <tr>\n    <td>s</td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;s&#39;, progress : true }\n    }\n    </td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;s&#39;, progress : true }\n    }\n    </td>\n  </tr>\n  <tr>\n    <td>m</td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;m&#39;, progress : true }\n    }\n    </td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;m&#39;, progress : true }\n    }\n    </td>\n  </tr>\n  <tr>\n    <td>l</td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;l&#39;, progress : true }\n    }\n    </td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;l&#39;, progress : true }\n    }\n    </td>\n  </tr>\n  <tr>\n    <td>xl</td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;simple&#39;, size : &#39;xl&#39;, progress : true }\n    }\n    </td>\n    <td>\n    {\n        block : &#39;spin&#39;,\n        mods : { theme : &#39;normal&#39;, size : &#39;xl&#39;, progress : true }\n    }\n    </td>\n  </tr>\n\n</table>\n\n<h2 id=\"-\">Вращение прелоадера</h2>\n<p><code>_progress</code></p>\n<p><code>{ progress : true }</code></p>\n<p>Модификатор <code>progress</code> в значении <code>true</code> показывает вращение прелоадера. Когда прелоадер виден, он крутится.</p>\n<p><code>{ progress : false }</code></p>\n<p>Модификатор <code>progress</code> в значении <code>false</code> останавливает прелоадер, например, когда он скрывается на странице.</p>\n<p>Прелоадер (индикатор загрузки)</p>\n"
                            }
                        ],
                        "examples": [
                            {
                                "url": "spin.examples/simple/_simple"
                            }
                        ]
                    }
                }
            ]
        }
    ]
}
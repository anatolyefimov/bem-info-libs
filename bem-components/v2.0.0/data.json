{"repo":"bem-components","ref":"v2.0.0","enb":true,"url":"http://github.com/bem/bem-components","custom":[],"docs":{"showcase":{"content":null},"readme":{"title":{"en":"Readme","ru":"Readme"},"content":{"en":"<h1 id=\"BEM-Components-Library\">BEM Components Library</h1>\n<p><a href=\"https://travis-ci.org/bem/bem-components\"><img src=\"https://travis-ci.org/bem/bem-components.svg?branch=v2\" alt=\"Build Status\"></a>\n<a href=\"https://coveralls.io/r/bem/bem-components?branch=v2\"><img src=\"https://coveralls.io/repos/bem/bem-components/badge.png?branch=v2\" alt=\"Coverage Status\"></a>\n<a href=\"https://david-dm.org/bem/bem-components#info=devDependencies\"><img src=\"https://david-dm.org/bem/bem-components/dev-status.svg\" alt=\"devDependency Status\"></a></p>\n<h2 id=\"What-is-this-\">What is this?</h2>\n<p><code>bem-components</code> is a library of blocks that provides ready-made form controls and some other blocks.\nThe library contains base realizations of the blocks that are abstracted from the design. Few optional design themes are available.</p>\n<ul>\n<li><a href=\"#content\">Structure</a><ul>\n<li><a href=\"#levels\">Levels</a></li>\n<li><a href=\"#blocks\">Blocks</a></li>\n<li><a href=\"#techs\">Technologies</a></li>\n<li><a href=\"#tools\">Tools</a></li>\n<li><a href=\"#optimize\">Optomizers</a></li>\n<li><a href=\"#linters\">Linters</a></li>\n<li><a href=\"#autopref\">Autoprefixer</a></li>\n</ul>\n</li>\n<li><a href=\"#usage\">Usage</a></li>\n<li><a href=\"#supported-browsers\">Supported browsers</a></li>\n<li><a href=\"#migration\">Migration</a></li>\n<li><a href=\"#changelog\">Changelog</a></li>\n<li><a href=\"#maintain\">Maintainers</a></li>\n<li><a href=\"#devprinciples\">Development principles</a><ul>\n<li><a href=\"#supply\">Delivery cases</a></li>\n</ul>\n</li>\n<li><a href=\"#development\">Development</a><ul>\n<li><a href=\"#working-copy\">Working copy</a></li>\n<li><a href=\"#how-to-contribute\">How to contribute</a></li>\n<li><a href=\"#modular-tests\">Modular testing</a><ul>\n<li><a href=\"#unit-tests\">JavaScript unit tests</a></li>\n<li><a href=\"#regression-tests\">Regression tests of layout</a></li>\n<li><a href=\"#template-tests\">Tests for templates</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><a name=\"content\"></a></p>\n<h2 id=\"Structure\">Structure</h2>\n<p><a name=\"levels\"></a></p>\n<h3 id=\"Levels\">Levels</h3>\n<ul>\n<li><code>common.blocks</code> — support of any devices and browsers.</li>\n<li><code>desktop.blocks</code> — support of desktop browsers.</li>\n<li><code>touch.blocks</code> — implementation of some touch platforms specifics.</li>\n</ul>\n<p><a name=\"blocks\"></a></p>\n<h3 id=\"Blocks\">Blocks</h3>\n<ul>\n<li><a href=\"common.blocks/attach/attach.en.md\">attach</a></li>\n<li><a href=\"common.blocks/button/button.en.md\">button</a></li>\n<li><a href=\"common.blocks/checkbox/checkbox.en.md\">checkbox</a></li>\n<li><a href=\"common.blocks/checkbox-group/checkbox-group.en.md\">checkbox-group</a></li>\n<li><a href=\"common.blocks/control/control.en.md\">control</a></li>\n<li><a href=\"common.blocks/control-group/control-group.en.md\">control-group</a></li>\n<li><a href=\"common.blocks/dropdown/dropdown.en.md\">dropdown</a></li>\n<li><a href=\"common.blocks/icon/icon.en.md\">icon</a></li>\n<li><a href=\"common.blocks/image/image.en.md\">image</a></li>\n<li><a href=\"common.blocks/input/input.en.md\">input</a></li>\n<li><a href=\"common.blocks/link/link.en.md\">link</a></li>\n<li><a href=\"common.blocks/menu/menu.en.md\">menu</a></li>\n<li><a href=\"common.blocks/menu-item/menu-item.en.md\">menu-item</a></li>\n<li><a href=\"common.blocks/modal/modal.en.md\">modal</a></li>\n<li><a href=\"common.blocks/popup/popup.en.md\">popup</a></li>\n<li><a href=\"common.blocks/progressbar/progressbar.en.md\">progressbar</a></li>\n<li><a href=\"common.blocks/radio/radio.en.md\">radio</a></li>\n<li><a href=\"common.blocks/radio-group/radio-group.en.md\">radio-group</a></li>\n<li><a href=\"common.blocks/select/select.en.md\">select</a></li>\n<li><a href=\"common.blocks/spin/spin.en.md\">spin</a></li>\n<li><a href=\"common.blocks/textarea/textarea.en.md\">textarea</a></li>\n<li><a href=\"common.blocks/z-index-group/z-index-group.en.md\">z-index-group</a></li>\n</ul>\n<p><a name=\"techs\"></a></p>\n<h3 id=\"Technologies\">Technologies</h3>\n<ul>\n<li><a href=\"https://bem.info/technology/i-bem/current/i-bem-js/\">JS</a></li>\n<li><a href=\"https://bem.info/tools/bem/modules/\">YModules</a></li>\n<li><a href=\"https://bem.info/technology/bemhtml/current/reference/\">BEMHTML</a></li>\n<li><a href=\"https://bem.info/technology/bh/current/reference/\">BH</a></li>\n<li><a href=\"https://bem.info/technology/bemtree/current/bemtree/\">BEMTREE</a></li>\n<li><a href=\"https://learnboost.github.io/stylus/\">Stylus</a></li>\n</ul>\n<p><a name=\"tools\"></a></p>\n<h3 id=\"Tools\">Tools</h3>\n<ul>\n<li><a href=\"https://bem.info/tools/optimizers/borschik/\">borschik</a></li>\n<li><a href=\"https://bem.info/tools/bem/bem-tools/\">bem-tools</a></li>\n<li><a href=\"http://enb-make.info/\">ENB</a></li>\n</ul>\n<p><a name=\"optimize\"></a></p>\n<h3 id=\"Optimizers\">Optimizers</h3>\n<ul>\n<li><a href=\"https://bem.info/tools/optimizers/svgo/svgo/\">SVGO</a></li>\n<li><a href=\"http://www.cleancss.com/about.php\">CleanCSS</a></li>\n<li><a href=\"http://imageoptim.com/\">ImageOptim</a></li>\n</ul>\n<p><a name=\"linters\"></a></p>\n<h3 id=\"Linters\">Linters</h3>\n<ul>\n<li><a href=\"http://www.jshint.com/\">jshint</a></li>\n<li><a href=\"https://github.com/jscs-dev/node-jscs\">jscs</a></li>\n</ul>\n<p><a name=\"autopref\"></a></p>\n<h3 id=\"Autoprefixer\">Autoprefixer</h3>\n<ul>\n<li><a href=\"https://github.com/ai/autoprefixer/\">Autoprefixer</a></li>\n</ul>\n<p><a name=\"usage\"></a></p>\n<h2 id=\"Usage\">Usage</h2>\n<p>You can use any way you are familiar with to include the library into your project.\nFor example, you can use <a href=\"https://bem.info/tools/bem/bem-tools/\">bem-tools</a> or <a href=\"http://enb-make.info/\">ENB</a>. To connect the library to your project use the configuration file of the selected building tool.</p>\n<p>If you use <a href=\"https://bem.info/tutorials/project-stub/\">project-stub</a> to start your project, you do not need to connect the library – it is connected by default.</p>\n<p><a name=\"supported-browsers\"></a></p>\n<h2 id=\"Supported-browsers\">Supported browsers</h2>\n<ul>\n<li>Desktop:<ul>\n<li>Firefox 24+</li>\n<li>Chrome last 2 versions</li>\n<li>Safari last 2 versions</li>\n<li>Opera 12.6+</li>\n<li>Internet Explorer 10+</li>\n</ul>\n</li>\n<li>Touch-pad:<ul>\n<li>Android 4+</li>\n<li>iOS 5+</li>\n</ul>\n</li>\n<li>Touch-phone:<ul>\n<li>Android 4+</li>\n<li>iOS 6+</li>\n<li>Internet Explorer 10+\n*Touch:</li>\n<li>Android 4+</li>\n<li>iOS &gt;=5</li>\n<li>Internet Explorer 10+</li>\n</ul>\n</li>\n</ul>\n<p><a name=\"changelog\"></a></p>\n<h2 id=\"Changelog\">Changelog</h2>\n<p>Check the changelog details at the <a href=\"CHANGELOG.md\">Changelog</a> page.</p>\n<p><a name=\"migration\"></a></p>\n<h2 id=\"Migration\">Migration</h2>\n<p>Check the migration details at the <a href=\"MIGRATION.md\">Migration</a> page.</p>\n<p><a name=\"maintain\"></a></p>\n<h2 id=\"Maintainers\">Maintainers</h2>\n<ul>\n<li><a href=\"https://github.com/veged\">veged</a></li>\n<li><a href=\"https://github.com/dfilatov\">dfilatov</a></li>\n<li><a href=\"https://github.com/mishanga\">mishanga</a></li>\n</ul>\n<p><a name=\"devprinciples\"></a></p>\n<h2 id=\"Development-principles\">Development principles</h2>\n<p>The base of all development principles of bem-components is the experience of our development team. For our library we take the best solutions from the past to create a new well-thought-out product called bem-components.</p>\n<p><strong>Open source project</strong></p>\n<p><a href=\"https://github.com/bem/bem-components\">GitHub</a> is a platform for bem-components library development. We set all tasks, development raodmap and milestones using GitHub. Any developer could participate in the project: everyone could create an issue with some problems description or send a pull request with some code improvements.</p>\n<p><strong>Automatization</strong></p>\n<p>We try to automize all possible processes: a developer should not perform repetitive actions, there are robots for this.</p>\n<p><strong>Bleeding edge</strong></p>\n<p>We develop our library with a focus on the future: we supports only the latest <a href=\"#supported-browsers\">browsers</a> and tools. The library must not lose its relevance during the development process.</p>\n<p><strong>Optimization</strong></p>\n<p>We apply the optimization solutions for each block during the development to avoid the optimization of the already released code.</p>\n<p><strong>Muli-themes support</strong></p>\n<p>bem-components supports more then one theme simultaneously. For today the main theme of the library is <code>islands</code>. This theme implements the new Yandex design.</p>\n<p>There is an additional temporary theme called <code>simple</code> in the library design. This theme was created to check the correct work of the library with more then one connected theme.</p>\n<p><strong>Selectors in a theme context</strong></p>\n<p>The library allows you to use different themes within a one page of the project. Besides, you could use native controls of your browser, for this do not use theme design in your project.</p>\n<p><strong>Platforms support</strong></p>\n<p>The library supports the following platforms: <code>desktop</code> and <code>touch</code> (mobile + tablet). All blocks of the library work correct on all available platforms.</p>\n<p><a name=\"supply\"></a></p>\n<h3 id=\"Delivery-cases\">Delivery cases</h3>\n<p><strong>Source</strong></p>\n<p>Used for the technically identical projects that use the same preprocessor and template engine.</p>\n<p><strong>Compiled</strong></p>\n<p>Used for the projects that use any other preprocessor or do not use it at all.</p>\n<p><strong>Library</strong></p>\n<p>Used for the possibility to connect the library using links (like jQuery or Bootstrap).</p>\n<p><a name=\"development\"></a></p>\n<h2 id=\"Development\">Development</h2>\n<p><a name=\"working-copy\"></a></p>\n<h3 id=\"Working-copy\">Working copy</h3>\n<p>Get the source code:</p>\n<pre><code class=\"lang-bash\">$ git clone git://github.com/bem/bem-components.git\n$ cd bem-components\n</code></pre>\n<p>Install the dependencies:</p>\n<pre><code class=\"lang-bash\">$ npm install\n</code></pre>\n<p>You need <code>export PATH=./node_modules/.bin:$PATH</code> or any alternative way to run locally-installed <code>ENB</code>.</p>\n<p>Install all necessary libraries:</p>\n<pre><code class=\"lang-bash\">$ bower install\n</code></pre>\n<p>Build and run tests and examples:</p>\n<pre><code class=\"lang-bash\">$ npm run build-all\n</code></pre>\n<p>Run development server:</p>\n<pre><code class=\"lang-bash\">$ npm start\n$ open http://localhost:8080/\n</code></pre>\n<p>Check the coding style:</p>\n<pre><code class=\"lang-bash\">$ npm run lint\n</code></pre>\n<p><a name=\"how-to-contribute\"></a></p>\n<h3 id=\"How-to-contribute\">How to contribute</h3>\n<ol>\n<li>Create an <a href=\"https://github.com/bem/bem-components/issues/new\">issue</a> with a proper description.</li>\n<li>Decide which version needs your changes.</li>\n<li>Create a feature branch with an issue number and a version (<code>issues/&lt;issue_number&gt;@v&lt;version_number&gt;</code>) based on a version branch. For example, for an issue #42 and a version 2: <code>git checkout -b issues/42@v2</code>. If you need changes for several versions, each of them has to have a feature branch.</li>\n<li>Commit changes (you can test your changes running <code>npm test</code>) and push. <code>Rebase</code> your branch on a corresponding version branch if needed.</li>\n<li>Create a pull request from your feature branch; or several pull requests if you changed several versions.</li>\n<li>Link your pull request with an issue number any way you like. For example, leave a <a href=\"https://github.com/blog/1506-closing-issues-via-pull-requests\">comment</a> with the issue number.</li>\n<li>Wait for your pull request and the issue closes ;-)</li>\n</ol>\n<p><a name=\"modlar-tests\"></a></p>\n<h3 id=\"Modular-testing\">Modular testing</h3>\n<p><a name=\"unit-tests\"></a></p>\n<h4 id=\"JavaScript-unit-tests\">JavaScript unit tests</h4>\n<p>To run JS unit tests use <code>npm run test-specs</code> command. You may also specify the target, e.g. <code>enb make specs desktop.specs/input</code> to run just <code>input</code> tests.</p>\n<p>All tests will be run automatically using <a href=\"https://travis-ci.org\">Travis</a> on each pull request.</p>\n<p><a name=\"regression-tests\"></a></p>\n<h4 id=\"Regression-tests-of-layout\">Regression tests of layout</h4>\n<p>We use <a href=\"https://github.com/bem/gemini\">Gemini</a> for layout testing.</p>\n<p>Tests for each block are stored in a separate file <code>block-name.gemini.js</code> in a directory <code>gemini/</code>. All tests could be executed manually or automatically using <a href=\"https://travis-ci.org\">Travis</a>. We use <a href=\"https://saucelabs.com\">SauceLabs</a> service as a <a href=\"https://code.google.com/p/selenium/wiki/Grid2\">Selenium Grid</a>.</p>\n<p>Use <a href=\"https://saucelabs.com/opensauce\">OpenSauce</a> account in SauceLabs and <a href=\"https://saucelabs.com/connect\">Sauce Connect</a> utility to run tests locally.</p>\n<p>Developers of BEM team could use <code>bem-components</code> account (we do not publish login and password because of the limit for three concurrent browsers launch; it is much more efficiently to use different free accounts for manual testing).</p>\n<p>For tests execution you need the following:</p>\n<p><a name=\"run-test\"></a></p>\n<ol>\n<li>Set up environment variables (<code>SAUCE_USERNAME</code> and <code>SAUCE_ACCESS_KEY</code>).</li>\n<li>Run <code>sc</code> utility (SauceConnect) and wait for a tunnel initialization.</li>\n<li>Run the tests using <code>npm run gemini</code>.</li>\n<li>To collect new versions of the screenshots use <code>npm run gemini-gather</code>.</li>\n</ol>\n<p>In case you write new tests for local usage, you can run your own Selenium Server or PhantomJS with WebDriver server. For this:</p>\n<ol>\n<li>Install and run <a href=\"http://docs.seleniumhq.org/download/\">selenium-server</a> or <a href=\"http://phantomjs.org/\">PhantomJS</a>.</li>\n<li>Correct <code>gridUrl</code> option to <code>http://localhost:4444/</code> in <code>.gemini.yml</code> file.</li>\n<li><a href=\"#run-test\">Run tests</a>.</li>\n</ol>\n<p>Read a <a href=\"https://bem.info/tools/testing/gemini/\">detailed description</a> of <code>Gemini</code> work with different types of backends for additional information.</p>\n<p><strong>NB</strong> You have to commit screenshots to the repository from SauceLabs to avoid minor differences in fonts rendering.</p>\n<p>Before commit some new or modified pattern you have to:</p>\n<ol>\n<li>Check the validity. If in doubt, use Araxis Merge utility or something like this to see the difference between two versions of the pattern.</li>\n<li>Compress them using <a href=\"http://imageoptim.com/\">ImageOptim</a> utility (this is the most effective tool for images compression for May 2014).</li>\n</ol>\n<p><a name=\"template-tests\"></a></p>\n<h4 id=\"Tests-for-templates\">Tests for templates</h4>\n<p>Build tools for the library allow you to build and run tests on BEMHTML and BH\nblock templates.</p>\n<p>To add a test for a block, you need to add a directory named <code>[block name].tmpl-specs</code> on your definition level. All test files will be stored in it.</p>\n<p>Each test consists of a pair of files implemented in following technologies: BEMJSON and HTML. Each block could have more then one pair of such files. You could give any name to the file. But the file names (without extensions) within the one pair for one test must coincide. For example, <strong>10-default</strong>.bemjson.js and <strong>10-default</strong>.html.</p>\n<p>For each block:</p>\n<ul>\n<li>BEMJSON file contains an example for a block;</li>\n<li>HTML file contains standard HTML code – a block sample.</li>\n</ul>\n<p>Block sample in HTML is a block implementation result that becomes available after applying a template to the BEMJSON example.</p>\n<pre><code>desktop.blocks\n    └── myblocks\n        ├── myblock.bemhtml.js\n        ├── myblock.bh.js\n        ├── ...\n        └── myblock.tmpl-specs\n            ├── 10-default.bemjson.js\n            ├── 10-default.html\n            ├── 20-advanced.bemjson.js\n            └── 20-advanced.html\n</code></pre><p>To run tests for templates use:</p>\n<pre><code class=\"lang-bash\">magic run tmpl-specs\n</code></pre>\n<p>To run tests for required definition level use:</p>\n<pre><code class=\"lang-bash\">magic make desktop.tmpl-specs\n</code></pre>\n<p>To run tests for a specific block use:</p>\n<pre><code class=\"lang-bash\">magic make desktop.tmpl-specs/button\n</code></pre>\n<p>If build procedure is successful, tests will be run automatically. After that you will see all test results.</p>\n<p>If the result of applying the template does not match with the block sample in HTML, then you will see errors in the log with description of the difference from the block sample.</p>\n<p>All tests will be run automatically using <a href=\"https://travis-ci.org\">Travis</a> for each pull request.</p>\n<h2 id=\"License\">License</h2>\n<p>Code and documentation copyright 2012 YANDEX LLC. Code released under the <a href=\"LICENSE.txt\">Mozilla Public License 2.0</a>.</p>\n","ru":"<h1 id=\"BEM-Components-Library\">BEM Components Library</h1>\n<p><a href=\"https://travis-ci.org/bem/bem-components\"><img src=\"https://travis-ci.org/bem/bem-components.svg?branch=v2\" alt=\"Build Status\"></a>\n<a href=\"https://coveralls.io/r/bem/bem-components?branch=v2\"><img src=\"https://coveralls.io/repos/bem/bem-components/badge.png?branch=v2\" alt=\"Coverage Status\"></a>\n<a href=\"https://david-dm.org/bem/bem-components#info=devDependencies\"><img src=\"https://david-dm.org/bem/bem-components/dev-status.svg\" alt=\"devDependency Status\"></a></p>\n<h2 id=\"Что-это-\">Что это?</h2>\n<p>Библиотека блоков, предоставляющая готовые элементы управления форм и некоторые другие блоки.\nСодержит абстрагированные от дизайна базовые реализации. Возможно опциональное использование тем.</p>\n<ul>\n<li><a href=\"#content\">Состав</a><ul>\n<li><a href=\"#levels\">Уровни</a></li>\n<li><a href=\"#blocks\">Блоки</a></li>\n<li><a href=\"#techs\">Технологии</a></li>\n<li><a href=\"#tools\">Инструменты</a></li>\n<li><a href=\"#optimize\">Оптимизаторы</a></li>\n<li><a href=\"#linters\">Линтеры</a></li>\n<li><a href=\"#autopref\">Автопрефиксер</a></li>\n</ul>\n</li>\n<li><a href=\"#usage\">Использование</a></li>\n<li><a href=\"#supported-browsers\">Поддерживаемые браузеры</a></li>\n<li><a href=\"#migration\">Миграция</a></li>\n<li><a href=\"#changelog\">История изменений</a></li>\n<li><a href=\"#maintain\">Команда основной разработки</a></li>\n<li><a href=\"#devprinciples\">Принципы разработки библиотеки</a><ul>\n<li><a href=\"#supply\">Варианты поставки библиотеки</a></li>\n</ul>\n</li>\n<li><a href=\"#development\">Разработка</a><ul>\n<li><a href=\"#working-copy\">Рабочая копия</a></li>\n<li><a href=\"#how-to-contribute\">Внесение изменений</a></li>\n<li><a href=\"#modular-tests\">Модульное тестирование</a><ul>\n<li><a href=\"#unit-tests\">Юнит-тесты на JavaScript</a></li>\n<li><a href=\"#regression-tests\">Регрессионное тестирование верстки</a></li>\n<li><a href=\"#template-tests\">Тесты на шаблоны</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><a name=\"content\"></a></p>\n<h2 id=\"Состав\">Состав</h2>\n<p><a name=\"levels\"></a></p>\n<h3 id=\"Уровни\">Уровни</h3>\n<ul>\n<li><code>common.blocks</code> — поддержка всех устройств и браузеров.</li>\n<li><code>desktop.blocks</code> — поддержка всех десктопных браузеров.</li>\n<li><code>touch.blocks</code> — реализация специфических особенностей для touch-платформ.</li>\n</ul>\n<p><a name=\"blocks\"></a></p>\n<h3 id=\"Блоки\">Блоки</h3>\n<ul>\n<li><a href=\"common.blocks/attach/attach.ru.md\">attach</a></li>\n<li><a href=\"common.blocks/button/button.ru.md\">button</a></li>\n<li><a href=\"common.blocks/checkbox/checkbox.ru.md\">checkbox</a></li>\n<li><a href=\"common.blocks/checkbox-group/checkbox-group.ru.md\">checkbox-group</a></li>\n<li><a href=\"common.blocks/control/control.ru.md\">control</a></li>\n<li><a href=\"common.blocks/control-group/control-group.ru.md\">control-group</a></li>\n<li><a href=\"common.blocks/dropdown/dropdown.ru.md\">dropdown</a></li>\n<li><a href=\"common.blocks/icon/icon.ru.md\">icon</a></li>\n<li><a href=\"common.blocks/image/image.ru.md\">image</a></li>\n<li><a href=\"common.blocks/input/input.ru.md\">input</a></li>\n<li><a href=\"common.blocks/link/link.ru.md\">link</a></li>\n<li><a href=\"common.blocks/menu/menu.ru.md\">menu</a></li>\n<li><a href=\"common.blocks/menu-item/menu-item.ru.md\">menu-item</a></li>\n<li><a href=\"common.blocks/modal/modal.ru.md\">modal</a></li>\n<li><a href=\"common.blocks/popup/popup.ru.md\">popup</a></li>\n<li><a href=\"common.blocks/progressbar/progressbar.ru.md\">progressbar</a></li>\n<li><a href=\"common.blocks/radio/radio.ru.md\">radio</a></li>\n<li><a href=\"common.blocks/radio-group/radio-group.ru.md\">radio-group</a></li>\n<li><a href=\"common.blocks/select/select.ru.md\">select</a></li>\n<li><a href=\"common.blocks/spin/spin.ru.md\">spin</a></li>\n<li><a href=\"common.blocks/textarea/textarea.ru.md\">textarea</a></li>\n<li><a href=\"common.blocks/z-index-group/z-index-group.ru.md\">z-index-group</a></li>\n</ul>\n<p><a name=\"techs\"></a></p>\n<h3 id=\"Технологии\">Технологии</h3>\n<ul>\n<li><a href=\"https://ru.bem.info/technology/i-bem/current/i-bem-js/\">i-bem.js</a></li>\n<li><a href=\"https://ru.bem.info/tools/bem/modules/\">YModules</a></li>\n<li><a href=\"https://ru.bem.info/technology/bemhtml/current/reference/\">BEMHTML</a></li>\n<li><a href=\"https://ru.bem.info/technology/bh/current/reference/\">BH</a></li>\n<li><a href=\"https://ru.bem.info/technology/bemtree/current/bemtree/\">BEMTREE</a></li>\n<li><a href=\"https://learnboost.github.io/stylus/\">Stylus</a></li>\n</ul>\n<p><a name=\"tools\"></a></p>\n<h3 id=\"Инструменты\">Инструменты</h3>\n<ul>\n<li><a href=\"https://ru.bem.info/tools/optimizers/borschik/\">borschik</a></li>\n<li><a href=\"https://ru.bem.info/tools/bem/bem-tools/\">bem-tools</a></li>\n<li><a href=\"http://enb-make.info/\">ENB</a></li>\n</ul>\n<p><a name=\"optimize\"></a></p>\n<h3 id=\"Оптимизаторы\">Оптимизаторы</h3>\n<ul>\n<li><a href=\"https://ru.bem.info/tools/optimizers/svgo/svgo/\">SVGO</a></li>\n<li><a href=\"http://www.cleancss.com/about.php\">CleanCSS</a></li>\n<li><a href=\"http://imageoptim.com/\">ImageOptim</a></li>\n</ul>\n<p><a name=\"linters\"></a></p>\n<h3 id=\"Линтеры\">Линтеры</h3>\n<ul>\n<li><a href=\"http://www.jshint.com/\">jshint</a></li>\n<li><a href=\"https://github.com/jscs-dev/node-jscs\">jscs</a></li>\n</ul>\n<p><a name=\"autopref\"></a></p>\n<h3 id=\"Автопрефиксер\">Автопрефиксер</h3>\n<ul>\n<li><a href=\"https://github.com/ai/autoprefixer/\">Autoprefixer</a></li>\n</ul>\n<p>Применяется во время сборки для генерации вендорных префиксов для поддерживаемых браузеров на основании конфигурации.</p>\n<p><a name=\"usage\"></a></p>\n<h2 id=\"Использование\">Использование</h2>\n<p>Подключить библиотеку в проект можно любым известным вам способом. Например, с помощью <a href=\"https://ru.bem.info/tools/bem/bem-tools/\">bem-tools</a> или <a href=\"http://enb-make.info/\">ENB</a>. Сделать это можно в конфигурационном файле выбранного вами сборщика.</p>\n<p>Если вы используете <a href=\"https://ru.bem.info/tutorials/project-stub/\">project-stub</a> как основу проекта, то подключать библиотеку не нужно. Она подключена в проект по умолчанию.</p>\n<p><a name=\"supported-browsers\"></a></p>\n<h2 id=\"Поддерживаемые-браузеры\">Поддерживаемые браузеры</h2>\n<ul>\n<li>Desktop:<ul>\n<li>Firefox 24+</li>\n<li>Chrome last 2 versions</li>\n<li>Safari last 2 versions</li>\n<li>Opera 12.6+</li>\n<li>Internet Explorer 10+</li>\n</ul>\n</li>\n<li>Touch-pad:<ul>\n<li>Android 4+</li>\n<li>iOS 5+</li>\n</ul>\n</li>\n<li>Touch-phone:<ul>\n<li>Android 4+</li>\n<li>iOS 6+</li>\n<li>Internet Explorer 10+\n*Touch:</li>\n<li>Android 4+</li>\n<li>iOS &gt;=5</li>\n<li>Internet Explorer 10+</li>\n</ul>\n</li>\n</ul>\n<p><a name=\"changelog\"></a></p>\n<h2 id=\"История-изменений\">История изменений</h2>\n<p>История изменений доступна на <a href=\"CHANGELOG.md\">отдельной странице</a>.</p>\n<p><a name=\"migration\"></a></p>\n<h2 id=\"Миграция\">Миграция</h2>\n<p>Миграция описана на <a href=\"MIGRATION.md\">отдельной странице</a>.</p>\n<h2 id=\"Команда-основной-разработки\">Команда основной разработки</h2>\n<ul>\n<li><a href=\"https://github.com/veged\">veged</a></li>\n<li><a href=\"https://github.com/dfilatov\">dfilatov</a></li>\n<li><a href=\"https://github.com/mishanga\">mishanga</a></li>\n</ul>\n<p><a name=\"devprinciples\"></a></p>\n<h2 id=\"Принципы-разработки-библиотеки\">Принципы разработки библиотеки</h2>\n<p>В основе всех принципов разработки bem-components лежит опыт работы нашей команды над другими библиотеками. Поэтому при разработке библиотеки мы старались взять все лучшее из прошлого, на его базе строить новое, и при этом не повторять прежних ошибок.</p>\n<p><strong>Проект open source</strong></p>\n<p>Разработка библиотеки ведется на <a href=\"https://github.com/bem/bem-components\">GitHub</a>. Все задачи, планы по разработке и сроки доступны там же. Любой разработчик может принять участие в работе над библиотекой: создать задачу с пожеланиями для команды разработчиков или прислать pull request с правками или собственным кодом.</p>\n<p><strong>Автоматизация</strong></p>\n<p>При создании библиотеки мы автоматизировали все процессы, которые можно было автоматизировать: мы считаем, что разработчик не должен совершать повторяющиеся действия, для этого есть роботы.</p>\n<p><strong>Bleeding edge</strong></p>\n<p>Библиотека разрабатывается с ориентацией на будущее: мы используем только последние <a href=\"#supported-browsers\">версии браузеров</a> и инструментов. Все это направлено на то, чтобы библиотека bem-components не теряла свою актуальность в процессе разработки.</p>\n<p><strong>Оптимизация</strong></p>\n<p>Решения по оптимизации внедряются непосредственно во время разработки кода каждого конкретного блока. Пути оптимизации продумываются заранее, чтобы избежать ситуаций, когда приходится оптимизировать уже написанный код.</p>\n<p><strong>Поддержка нескольких тем</strong></p>\n<p>В библиотеке реализована одновременная поддержка нескольких тем. На данном этапе основной темой является тема <code>islands</code>, которая реализует новый дизайн сервисов Яндекса.</p>\n<p>Сейчас в bem-components создан дополнительный служебный дизайн, представленный темой <code>simple</code>. Он разработан для проверки возможности сосуществования нескольких тем внутри одной библиотеки.</p>\n<p><strong>Селекторы в контексте темы</strong></p>\n<p>Библиотека предоставляет возможность создавать разные темы для блоков, а также подключать уже имеющиеся темы в любом количестве и сочетании на страницу. При этом есть возможность полностью отказаться от использования тем в своем проекте и получить привычные нативные браузерные контроллы, для которых уже написаны шаблоны и JavaScript-реализация.</p>\n<p><strong>Поддержка платформ</strong></p>\n<p>В библиотеке реализована поддержка разных платформ: <code>desktop</code>, <code>touch</code> (мобильные + планшеты). При этом блоки разработаны таким образом, чтобы реализация для одной платформы корректно отображалась и правильно себя вела и на другой.</p>\n<p><a name=\"supply\"></a></p>\n<h3 id=\"Варианты-поставки-библиотеки\">Варианты поставки библиотеки</h3>\n<p><strong>Source</strong></p>\n<p>Для технически идентичных сервисов и проектов, которые используют тот же препроцессор и шаблонизатор, библиотека может поставляться в исходном виде — «source».</p>\n<p><strong>Compiled</strong></p>\n<p>Для сервисов и проектов, которые вообще не используют препроцессор или используют, но другой, существует возможность поставки скомпилированной версии библиотеки — «compiled».</p>\n<p><strong>Library</strong></p>\n<p>Для возможности подключения библиотеки ссылками на страницу, по аналогии с jQuery или Bootstrap, предоставляется поставка в виде библиотеки — «library».</p>\n<p><a name=\"development\"></a></p>\n<h2 id=\"Разработка\">Разработка</h2>\n<p><a name=\"working-copy\"></a></p>\n<h3 id=\"Рабочая-копия\">Рабочая копия</h3>\n<p>Получаем исходники:</p>\n<pre><code class=\"lang-bash\">$ git clone git://github.com/bem/bem-components.git\n$ cd bem-components\n</code></pre>\n<p>Устанавливаем зависимости:</p>\n<pre><code class=\"lang-bash\">$ npm install\n</code></pre>\n<p>Для последующего запуска локально установленных <code>enb</code> нам потребуется <code>export PATH=./node_modules/.bin:$PATH</code> или любой альтернативный способ.</p>\n<p>Устанавливаем зависимые библиотеки:</p>\n<pre><code class=\"lang-bash\">$ bower install\n</code></pre>\n<p>Собираем примеры и тесты:</p>\n<pre><code class=\"lang-bash\">$ npm run build-all\n</code></pre>\n<p>Запускаем сервер для разработки:</p>\n<pre><code class=\"lang-bash\">$ npm start\n$ open http://localhost:8080/\n</code></pre>\n<p><strong>NB</strong> Возможность точечной сборки описана в разделе <a href=\"#template-tests\">Тесты на шаблоны</a>.</p>\n<p>Проверяем стиль кода:</p>\n<pre><code class=\"lang-bash\">$ npm run lint\n</code></pre>\n<p><a name=\"how-to-contribute\"></a></p>\n<h3 id=\"Внесение-изменений\">Внесение изменений</h3>\n<ol>\n<li><a href=\"https://github.com/bem/bem-components/issues/new\">Создать issue</a> с описанием сути изменений.</li>\n<li>Определить, в какую версию проекта необходимо внести изменения.</li>\n<li>Создать отдельную ветку с указанием номера issue и версии (<code>issues/&lt;номер issue&gt;@v&lt;номер версии&gt;</code>) на основе ветки версии.\nНапример, для issue с номером 42 и версией 2: <code>git checkout -b issues/42@v2</code>. Если изменения нужно внести в несколько версий, то для каждой из версий создается отдельная ветка.</li>\n<li>Внести изменения. Для версии библиотеки bem-components <code>v2</code>, можно локально проверить, что ничего не сломалось, запустив <code>npm test</code>.</li>\n<li>Сделать коммит и отправить изменения в удаленный репозиторий (<code>push</code>). Если это необходимо, то нужно сделать <code>rebase</code> от базовой ветки версии.</li>\n<li>Создать pull request на основе созданной ветки. Для случая изменений в нескольких версиях необходимо создать pull request для каждой версии.</li>\n<li>Любым способом связать pull request и issue (например, c помощью <a href=\"https://github.com/blog/1506-closing-issues-via-pull-requests\">комментария</a>).</li>\n<li>Ждать закрытия pull request и issue ;-)</li>\n</ol>\n<p><a name=\"modular-tests\"></a></p>\n<h3 id=\"Модульное-тестирование\">Модульное тестирование</h3>\n<p><a name=\"unit-tests\"></a></p>\n<h4 id=\"Юнит-тесты-на-JavaScript\">Юнит-тесты на JavaScript</h4>\n<p>Чтобы запустить юнит-тесты на JS, используйте команду <code>npm run test-specs</code>. Кроме того, можно использовать точечную сборку, например, <code>enb make specs desktop.specs/input</code>.</p>\n<p>Все тесты автоматически запускаются на <a href=\"https://travis-ci.org\">Travis</a> для каждого pull request&#39;а.</p>\n<p><a name=\"regression-tests\"></a></p>\n<h3 id=\"Регрессионное-тестирование-верстки\">Регрессионное тестирование верстки</h3>\n<p>Для тестирования верстки мы используем <a href=\"http://ru.bem.info/tools/testing/gemini/\">Gemini</a>.</p>\n<p>Тесты каждого блока находятся в отдельном файле вида <code>block-name.gemini.js</code> в директории <code>gemini/</code>. Локально тесты запускаются руками, тесты на Travis запускаются автоматически. В качестве <a href=\"https://code.google.com/p/selenium/wiki/Grid2\">Selenium Grid</a> мы используем сервис <a href=\"https://saucelabs.com\">SauceLabs</a>.</p>\n<p>Для запуска тестов локально вам понадобится <a href=\"https://saucelabs.com/opensauce\">OpenSauce</a> аккаунт в SauceLabs и утилита <a href=\"https://saucelabs.com/connect\">Sauce Connect</a>. Разработчики команды БЭМ могут использовать аккаунт <code>bem-components</code> (мы не публикуем логин и пароль, потому что на аккаунте лимит на 3 одновременно запущенных браузера; будет эффективнее использовать разные аккаунты для ручного запуска тестов, тем более что они бесплатные).</p>\n<p><a name=\"run-test\"></a>\nДля запуска тестов:</p>\n<ol>\n<li>Настройте окружение (переменные среды <code>SAUCE_USERNAME</code> и <code>SAUCE_ACCESS_KEY</code>).</li>\n<li>Запустите утилиту <code>sc</code> (SauceConnect) и дождитесь, пока она поднимет туннель.</li>\n<li>Запустите тесты командой <code>npm run gemini</code>.</li>\n<li>Для сбора новых версий скриншотов используйте команду <code>npm run gemini-gather</code>.</li>\n</ol>\n<p>Если вы разрабатываете новые тесты и хотите их запускать локально и быстрее, можно поднять свой собственный Selenium Server или phantomjs с WebDriver сервером. Для этого нужно:</p>\n<ol>\n<li>Установить и запустить <a href=\"http://docs.seleniumhq.org/download/\">Selenium Server</a> или <a href=\"http://phantomjs.org/\">PhantomJS</a>.</li>\n<li>Исправить в файле <code>.gemini.yml</code> опцию <code>gridUrl</code> на <code>http://localhost:4444/</code>.</li>\n<li><a href=\"#run-test\">Запустить тесты</a>.</li>\n</ol>\n<p>Более подробно про запуск <code>Gemini</code> с разными бекендами читайте в статье <a href=\"http://ru.bem.info/tools/testing/gemini/\">Введение в работу с Gemini</a>.</p>\n<p><strong>NB</strong> В репозиторий необходимо коммитить скриншоты, собранные в SauceLabs. Это позволит избежать даже незначительных отличий в отрисовке шрифтов.</p>\n<p>Перед коммитом новых или измененных эталонных изображений необходимо:</p>\n<ol>\n<li>Внимательно проверить корректнотсь изображения. Если есть сомнения, используйте утилиту Araxis Merge или аналогичную, чтобы увидеть разницу между старой и новой версиями.</li>\n<li>Сожмите изображения утилитой <a href=\"http://imageoptim.com/\">ImageOptim</a> (это самый эффективный инструмент сжатия изображений на май 2014 года).</li>\n</ol>\n<p><a name=\"template-tests\"></a></p>\n<h4 id=\"Тесты-на-шаблоны\">Тесты на шаблоны</h4>\n<p>Инструменты сборки библиотеки позволяют собирать и запускать тесты на BEMHTML- и BH-шаблоны блоков.</p>\n<p>Чтобы добавить тест для блока, нужно в его директории на требуемом уровне переопределения создать\nкаталог с названием <code>[имя блока].tmpl-specs</code>. Здесь будут храниться файлы тестов.</p>\n<p>Каждый тест состоит из пары файлов в технологиях BEMJSON и HTML. Тестов и, соответственно, пар файлов у блока может быть несколько. Имена файлов произвольные, но они (не включая расширения) для каждого\nтеста должны совпадать. Например, <strong>10-default</strong>.bemjson.js и <strong>10-default</strong>.html.</p>\n<p>В BEMJSON-файле находится пример для блока, в HTML-файле – эталонный HTML-код, который должен\nполучиться после применения шаблона блока к BEMJSON-у примера.</p>\n<pre><code>desktop.blocks\n    └── myblocks\n        ├── myblock.bemhtml.js\n        ├── myblock.bh.js\n        ├── ...\n        └── myblock.tmpl-specs\n            ├── 10-default.bemjson.js\n            ├── 10-default.html\n            ├── 20-advanced.bemjson.js\n            └── 20-advanced.html\n</code></pre><p>Команда для сборки и запуска тестов:</p>\n<pre><code class=\"lang-bash\">magic run tmpl-specs`\n</code></pre>\n<p>Сборка тестов на нужном уровне переопределения:</p>\n<pre><code class=\"lang-bash\">magic make desktop.tmpl-specs\n</code></pre>\n<p>Сборка тестов только для одного блока (точечная сборка):</p>\n<pre><code class=\"lang-bash\">magic make desktop.tmpl-specs/button\n</code></pre>\n<p>В случае успешной сборки, тесты будут запущены с последующим выводом результатов. Если результат применения\nшаблона не совпадает с эталонным HTML, то в логе будет ошибка с указанием отличий от эталона.</p>\n<p>Все тесты автоматически запускаются на <a href=\"https://travis-ci.org\">Travis</a> для каждого pull request&#39;a.</p>\n<h2 id=\"Лицензия\">Лицензия</h2>\n<p>© 2012 YANDEX LLC. Код лицензирован <a href=\"LICENSE.txt\">Mozilla Public License 2.0</a>.</p>\n"}},"changelog":{"title":{"en":"Changelog","ru":"История изменений"},"content":{"en":"<h1 id=\"Changelog\">Changelog</h1>\n","ru":"<h1 id=\"Changelog\">Changelog</h1>\n"}},"migration":{"title":{"en":"Migration","ru":"Миграция"},"content":{"en":"<h1 id=\"Миграция\">Миграция</h1>\n","ru":"<h1 id=\"Миграция\">Миграция</h1>\n"}}},"deps":{"bem-core":"2.5.1"}}